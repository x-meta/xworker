<?xml version="1.0" encoding="utf-8"?>

<QuickContent name="CreateAndDeploy" descriptors="xworker.content.QuickContent" label="创建和发布"
     type="thingDesc" group="xworker.-900|WEB.createanddeploy" groupDescriptor="true"
     icon="icons/html.png" th_sortWeight="-2000" simpleBrowser="true" th_createIndex="true"
     th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h1>创建和发布</h1>

<h2>1.创建WEB模型</h2>

<p>&nbsp;&nbsp;&nbsp; 在XWorker里规定任何一个具有httpDo方法的模型都可以作为WEB模型，因此任何一个只要实现了httpDo方法的模型理论上都可以作为WEB模型。</p>

<p>&nbsp;&nbsp;&nbsp; XWorker中也有许多WEB框架，其中xworker.http.controls.SimpleControl模型是XWorker中最常用的WEB框架，常用来编写WEB应用</p>

<h3>1.1.使用XWorker的WEB资源</h3>

<p>&nbsp;&nbsp;&nbsp; 如果一个WEB应用使用XWorker下的WEB资源，即使用XWorker安装目录下的webroot作为WEB资源，那么可以直接在XWorker的模型编辑器里编写WEB模型。</p>

<h3>1.2.使用独立的资源</h3>

<p>&nbsp;&nbsp;&nbsp; 如果一个WEB应用需要使用自己的WEB资源，那么可以通过下面的方式创建WEB项目。</p>

<pre class="brush:plain;">
//进入系统的控制台，进入一个空目录，创建.dml文件
//windows，执行下面的命令，执行后按F6并回车退出
copy con .dml
//Linux
touch.dml

//执行.dml，XWorker应已正常安装
.dml

//执行.dml后会列出一些选项，输入webserver并回车，按照提示创建一个WebServer。
</pre>

<p>&nbsp;&nbsp;&nbsp; 执行以上操作后会创建一个独立资源的WEB项目，当前目录就是WEB资源的根目录。运行目录下的SimpleThingEditor.dml可以打开模型编辑器。</p>

<h2>2.运行和调试</h2>

<p>&nbsp;&nbsp;&nbsp; WEB模型可以边在模型编辑器中直接执行，可以在浏览器中打开相应地址浏览运行结果。运行方式见具体的模型。</p>

<p>&nbsp;&nbsp;&nbsp; WEB模型一般在浏览器的地址如下：</p>

<pre class="brush:bash;">
http://localhost:9001/do?sc=path</pre>

<p>&nbsp;&nbsp;&nbsp; 其中path是WEB模型的地址，其中端口9001是XWorker内置的WEB的端口，在简单模型编辑器中地址可能会改变，如9002等。</p>

<h2>3.打包和发布</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; WEB模型可以打包成WAR，也可以打包成自带WEB服务器的可运行的JAR。</p>
]]></description>
</QuickContent>