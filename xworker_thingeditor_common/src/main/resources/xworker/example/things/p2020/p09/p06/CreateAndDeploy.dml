<?xml version='1.0' encoding='utf-8'?>

<QuickContent name="CreateAndDeploy" descriptors="xworker.content.QuickContent" label="创建和发布"
     type="thingDesc" group="xworker.-900|WEB.createanddeploy" groupDescriptor="true"
     icon="icons/html.png" th_sortWeight="-2000" simpleBrowser="true" en_label="Create and publish"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">&#xd;
    <description><![CDATA[<h1>创建和发布</h1>

<h2>1.创建WEB模型</h2>

<p>&nbsp;&nbsp;&nbsp; 在XWorker里规定任何一个具有httpDo方法的模型都可以作为WEB模型，因此任何一个只要实现了httpDo方法的模型理论上都可以作为WEB模型。</p>

<p>&nbsp;&nbsp;&nbsp; XWorker中也有许多WEB框架，其中xworker.http.controls.SimpleControl模型是XWorker中最常用的WEB框架，常用来编写WEB应用</p>

<h3>1.1.使用XWorker的WEB资源</h3>

<p>&nbsp;&nbsp;&nbsp; 如果一个WEB应用使用XWorker下的WEB资源，即使用XWorker安装目录下的webroot作为WEB资源，那么可以直接在XWorker的模型编辑器里编写WEB模型。</p>

<h3>1.2.使用独立的资源</h3>

<p>&nbsp;&nbsp;&nbsp; 如果一个WEB应用需要使用自己的WEB资源，那么可以通过下面的方式创建WEB项目。</p>

<pre class="brush:plain;">
//进入系统的控制台，进入一个空目录，创建.dml文件
//windows，执行下面的命令，执行后按F6并回车退出
copy con .dml
//Linux
touch.dml

//执行.dml，XWorker应已正常安装
.dml

//执行.dml后会列出一些选项，输入webserver并回车，按照提示创建一个WebServer。
</pre>

<p>&nbsp;&nbsp;&nbsp; 执行以上操作后会创建一个独立资源的WEB项目，当前目录就是WEB资源的根目录。运行目录下的SimpleThingEditor.dml可以打开模型编辑器。</p>

<h2>2.运行和调试</h2>

<p>&nbsp;&nbsp;&nbsp; WEB模型可以边在模型编辑器中直接执行，可以在浏览器中打开相应地址浏览运行结果。运行方式见具体的模型。</p>

<p>&nbsp;&nbsp;&nbsp; WEB模型一般在浏览器的地址如下：</p>

<pre class="brush:bash;">
http://localhost:9001/do?sc=path</pre>

<p>&nbsp;&nbsp;&nbsp; 其中path是WEB模型的地址，其中端口9001是XWorker内置的WEB的端口，在简单模型编辑器中地址可能会改变，如9002等。</p>

<h2>3.打包和发布</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; WEB模型可以打包成WAR，也可以打包成自带WEB服务器的可运行的JAR。</p>]]></description>&#xd;
    <en_description><![CDATA[<h1>Create and publish</h1>

<h2>1. Create WEB model</h2>

<p>&nbsp;&nbsp;&nbsp; It is stipulated in XWorker that any model with httpDo method can be used as a WEB model, so any model that implements the httpDo method can theoretically be used as a WEB model. </p>

<p>&nbsp;&nbsp;&nbsp; There are many WEB frameworks in XWorker, among which the xworker.http.controls.SimpleControl model is the most commonly used WEB framework in XWorker and is often used to write WEB applications</p>

<h3>1.1. Use XWorker's WEB resources</h3>

<p>&nbsp;&nbsp;&nbsp; If a WEB application uses the WEB resources under XWorker, that is, uses the webroot in the XWorker installation directory as the WEB resource, then you can directly write the WEB model in the XWorker model editor. </p>

<h3>1.2. Use independent resources</h3>

<p>&nbsp;&nbsp;&nbsp; If a WEB application needs to use its own WEB resources, you can create a WEB project in the following way. </p>

<pre class="brush:plain;">
//Enter the console of the system, enter an empty directory, and create a .dml file
//windows, execute the following command, press F6 and press Enter to exit after execution
copy con .dml
//Linux
touch.dml

//Execute .dml, XWorker should be installed normally
.dml

//After executing the .dml, some options will be listed, enter webserver and press Enter, and follow the prompts to create a WebServer.
</pre>

<p>&nbsp;&nbsp;&nbsp; After performing the above operations, a WEB project with independent resources will be created, and the current directory is the root directory of the WEB resource. Run SimpleThingEditor.dml in the directory to open the model editor. </p>

<h2>2. Run and debug</h2>

<p>&nbsp;&nbsp;&nbsp; WEB models can be executed directly in the model editor, and you can open the corresponding address in the browser to browse the running results. See the specific model for the operation mode. </p>

<p>&nbsp;&nbsp;&nbsp; The address of the WEB model generally in the browser is as follows:</p>

<pre class="brush:bash;">
http://localhost:9001/do?sc=path</pre>

<p>&nbsp;&nbsp;&nbsp; Where path is the address of the WEB model, and port 9001 is the port of the built-in WEB of XWorker. The address may change in the simple model editor, such as 9002. </p>

<h2>3. Packaging and publishing</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; WEB model can be packaged into WAR, or it can be packaged into a runnable JAR with its own WEB server. </p>]]></en_description>&#xd;
</QuickContent>