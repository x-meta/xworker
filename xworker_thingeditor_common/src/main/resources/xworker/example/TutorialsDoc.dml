<?xml version="1.0" encoding="utf-8"?>

<QuickContent name="TutorialsDoc" descriptors="xworker.content.QuickContent" label="入门指南" type="thingDesc"
     icon="icons/html.png" th_sortWeight="-10000" simpleBrowser="true" en_label="Tutorials"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex" th_deprecated="true">
    <description><![CDATA[<h1>入门指南</h1>

<h2>1.动态模型和XWorker</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型是一种基于模型的面向对象的编程方法，XWorker提供了编辑模型的工具和一些模型库。</p>

<h3>1.1.动态模型的主要特点</h3>

<ul>
	<li><strong>动态编程</strong><br />
	模型是数据可以随时添加和修改，模型是被引擎实时解释执行的，因此使用动态模型可以实现动态编程，即在系统运行时实时编程，从而动态修改系统的功能。<br />
	&nbsp;</li>
	<li><strong>快速编程</strong><br />
	模型一般是对各种API的使用接口的封装，通过模型可以快速的使用这些API，并且使用动态模型也可以很容易的把不同的API整合在一起，从而更容易地开发出复杂的应用。<br />
	&nbsp;</li>
	<li><strong>无限积累</strong><br />
	动态模型的抽象层次比较低，它使用事物和动作等更低级的概念来描述类和对象，并且认为类和对象也是可以随时创建和改变的，这样提高了描述对象的能力，使得系统中的不同的对象可以共存，并能相互迭代发展，从而在理论上可以实现系统功能的无限积累。</li>
</ul>

<h3>1.2.动态模型和Java</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;动态模型的引擎是使用Java实现的。可以在Java代码里使用模型，也可以在模型里调用Java。</p>

<h2>2.如何创建、编辑和运行模型</h2>

<p>&nbsp;&nbsp;&nbsp; 如何创建、编辑和运行模型可以参看教程。教程可以在<a href="https://www.xworker.org/do?sc=xworker.app.orgweb.web.Index&amp;id=11">XWorker的主页</a>上找到。</p>

<h2>3.动态模型进阶</h2>

<p>&nbsp;&nbsp;&nbsp; 可以参看<a href="javascript:invoke('action:xworker.swt.xworker.prototype.ThingRegistSelector/@actions/@utilBrowserSelectThing?thing=xworker.doc.dyanmicmodel.DynamicModel')">动态模型</a>的相关文档和示例，动态模型的文档和示例在当前界面的左边树菜单中可以找到。</p>

<h2>4.如何学习和使用具体的模型</h2>

<p>&nbsp;&nbsp;&nbsp; 查看一个具体模型的文档和示例，一般有下面的方法：</p>

<ul>
	<li><strong>模型编辑器</strong><br />
	模型一般自带基本文档，因此可以在模型编辑器中可以查看模型的模型的文档。<br />
	&nbsp;</li>
	<li><strong>帮助小精灵</strong><br />
	帮助小精灵是一个帮助辅助工具，可以显示注册到模型的文档和示例等，可以在IDE的工具栏中打开，也可以在模型编辑器中帮助菜单中打开。<br />
	&nbsp;</li>
	<li><strong>文档和示例</strong><br />
	也是本工具了。这里一般是各种模型库的公共文档和示例等。</li>
</ul>

<h2>5.如何发布模型程序</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型是一个Java应用，模型可以作为Java项目的一部分，随Java程序一起发布。</p>

<p>&nbsp;&nbsp;&nbsp;</p>
]]></description>
</QuickContent>