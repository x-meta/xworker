<?xml version="1.0" encoding="utf-8"?>

<QuickContent name="TreeModelDoc" descriptors="xworker.content.QuickContent" label="树模型" type="thingDesc"
     group="xworker.dataobject.treeModel" groupDescriptor="true" icon="icons/html.png"
     simpleBrowser="true" th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h1>树模型</h1>

<h2>1.简介</h2>

<p>&nbsp;&nbsp;&nbsp; 树模型代表树形结构的数据，一般用于树控件上，有时也可以用于菜单。</p>

<p>&nbsp;&nbsp;&nbsp; 树模型不是数据对象，但是放在数据对象的模块里的。</p>

<h2>2.定义树模型</h2>

<p>&nbsp;&nbsp;&nbsp; 可以使用MetaDescritpor3来编写一个树模型，需要继承xworker.app.model.tree.AbstractTreeModel模型，需要实现下面两个方法。</p>

<ul>
	<li>
	<p><strong>TreeModelItem getRoot(TreeModel treeModel)</strong><br />
	返回树模型的根节点。<br />
	&nbsp;</p>
	</li>
	<li>
	<p><strong>List&lt;TreeModelItem&gt; getChilds(TreeModel treeModel, TreeModelItem parentItem)</strong><br />
	返回一个节点下的子节点列表。</p>
	</li>
</ul>

<h2>3. 树节点的常用属性</h2>

<p>&nbsp;&nbsp;&nbsp; TreModelItem有多个属性，下面几个是常用的，这些属性一般会设置。</p>

<ul>
	<li><strong>source: Object</strong><br />
	树节点一般是对其它对象的包装，source是源对象。比如文件树模型的souce是java.io.File对象。<br />
	&nbsp;</li>
	<li><strong>text: String</strong><br />
	节点的标签文本。<br />
	&nbsp;</li>
	<li><strong>icon: String </strong><br />
	图标的路径。<br />
	&nbsp;</li>
	<li><strong>id: String</strong><br />
	节点的标识。<br />
	&nbsp;</li>
	<li><strong>dataId: String</strong><br />
	一般是source对象的标识。<br />
	&nbsp;</li>
	<li><strong>separator: boolean</strong><br />
	是否是分隔符。</li>
</ul>

<p>&nbsp;</p>
]]></description>
</QuickContent>