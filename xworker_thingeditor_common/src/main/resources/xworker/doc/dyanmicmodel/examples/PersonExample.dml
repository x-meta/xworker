<?xml version='1.0' encoding='utf-8'?>

<QuickContent name="PersonExample" descriptors="xworker.content.QuickContent" label="Person"
     type="thingDemo" path="xworker.doc.dyanmicmodel.examples.Zhangsan" group="dynamicModel.-10000|defineModel"
     icon="icons/application.png" th_sortWeight="-10000" simpleBrowser="true" th_createIndex="true"
     th_registThing="child|xworker.example.ExamplesIndex">&#xd;
    <description><![CDATA[<h1>Person示例</h1>

<p>&nbsp;&nbsp;&nbsp; Person示例是一个典型的定义模型的例子，即先定义类模型（Person)，然后使用类模型(Person)编写对象模型（Zhangsan）。</p>

<h2>1.演示说明</h2>

<p>&nbsp;&nbsp;&nbsp; 演示界面有三个标签页。</p>

<ul>
	<li><strong>对象</strong><br />
	展示和编辑的是对象模型，这里是模型Zhangsan。</li>
	<li><strong>主类</strong><br />
	展示和编辑的是类模型，这里是模型Person。</li>
	<li><strong>类和继承</strong><br />
	展示的是Zhangsan这个对象的类和继承等。</li>
</ul>

<h2>2.模型的基本元素</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 即定义一个模型时有哪些素是经常定义的，这些可以在<strong>主类</strong>标签页中查看。</p>

<h3>&nbsp;2.1.属性</h3>

<p>&nbsp;&nbsp;&nbsp; 一个模型可以有属性，其中属性可以设置编辑方式。在这里定义类name、age、sex和description等属性。</p>

<h3>2.2.子节点</h3>

<p>&nbsp;&nbsp;&nbsp; 即子模型。在本实例里Child子模型继承了父模型Person，因此Child也是一个Person，Child也有Person的属性和行为。</p>

<h3>2.3.行为</h3>

<p>&nbsp;&nbsp;&nbsp; 定义在actions下，定义了一个sayHello行为。由于Child继承了Person，因此Child也有actions行为。</p>

<h3>2.4.菜单</h3>

<p>&nbsp;&nbsp;&nbsp; 菜单一般用于编辑器，在编辑模型时可以展示出来。菜单定义见主类标签页中Person模型的sswtMenus子节点，在对象标签页中可以查看和运行参看，见编辑器工具栏上方的Personc菜单。</p>]]></description>&#xd;
    <en_description><![CDATA[<h1>Person example</h1>

<p>&nbsp;&nbsp;&nbsp; The Person example is a typical example of defining a model, that is, first define the class model (Person), and then use the class model (Person) to write the object model (Zhangsan). </p>

<h2>1. Demonstration instructions</h2>

<p>&nbsp;&nbsp;&nbsp; The demo interface has three tabs. </p>

<ul>
<li><strong>Object</strong><br />
The display and editing is the object model, here is the model Zhangsan. </li>
<li><strong>Main category</strong><br />
What is displayed and edited is the class model, here is the model Person. </li>
<li><strong>Classes and inheritance</strong><br />
It shows the class and inheritance of Zhangsan. </li>
</ul>

<h2>2. Basic elements of the model</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; That is, what elements are frequently defined when defining a model. These can be viewed in the <strong>Main Class</strong> tab. </p>

<h3>&nbsp;2.1. Attributes</h3>

<p>&nbsp;&nbsp;&nbsp; A model can have attributes, and the attributes can be edited. Define the attributes of the class name, age, sex, and description here. </p>

<h3>2.2. Child node</h3>

<p>&nbsp;&nbsp;&nbsp; is a sub-model. In this example, the Child child model inherits the parent model Person, so Child is also a Person, and Child also has the attributes and behaviors of Person. </p>

<h3>2.3. Behavior</h3>

<p>&nbsp;&nbsp;&nbsp; Defined under actions, it defines a sayHello action. Since Child inherits Person, Child also has actions behavior. </p>

<h3>2.4. Menu</h3>

<p>&nbsp;&nbsp;&nbsp; The menu is generally used in the editor and can be displayed when editing the model. For the menu definition, see the sswtMenus sub-node of the Person model in the main class tab. You can view and run it in the object tab. See the Personc menu at the top of the editor toolbar. </p>]]></en_description>&#xd;
</QuickContent>