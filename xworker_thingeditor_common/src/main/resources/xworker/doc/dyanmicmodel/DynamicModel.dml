^1634193952854
@
sname
DynamicModel
slabel
动态模型
stype
thingDesc
sgroup
dynamicModel
sgroupDescriptor
true
sicon
icons/html.png
sth_sortWeight
-9000
sstyledTextForInsert
parentContext.parentContext.codeText
suseTargetThingDoc
false
ssimpleBrowser
true
shideOutline
false
Sdescription
#$@text#$@
<h1>动态模型</h1>

<h2>1.基本概念</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型是一种面向对象的编程方法，它使用结构化的数据来编程，这些结构化的数据可以用XML来表示，也可以简单的理解为可以使用XML来编程。</p>

<p>&nbsp; &nbsp; 如下面的XMl就是一个动态模型的程序。</p>

<pre class="brush:xml;">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;

&lt;Shell name=&quot;shell&quot; descriptors=&quot;xworker.swt.widgets.Shell&quot; text=&quot;TestShell&quot;&gt;
    &lt;FillLayout name=&quot;FillLayout&quot;&gt;&lt;/FillLayout&gt;
    &lt;Browser name=&quot;Browser&quot; url=&quot;https://www.xworker.org&quot;&gt;&lt;/Browser&gt;
    &lt;GroovyAction name=&quot;init&quot;  code=&quot;println &amp;quot;Hello World!&amp;quot;;&quot;&gt;&lt;/GroovyAction&gt;
&lt;/Shell&gt;</pre>

<h2>2.动态模型的特点</h2>

<ul>
	<li><strong>动态编程</strong><br />
	动态模型是一种面向对象的编程方法，它可以在系统运行时动态修改系统中的类和对象，并且修改后的类和对象也能够被实时解释执行，因此可以实现运行时的动态编程。<br />
	&nbsp;</li>
	<li><strong>快速编程</strong><br />
	动态模型的编程方法多种多样，可以针对不同的模型可以编写不同的编程工具，在使用动态模型编程的过程中，也可以不断的编写工具来优化自己，从而能够让编程能够越来越快捷。<br />
	&nbsp;&nbsp;&nbsp;</li>
	<li><strong>积累和迭代</strong><br />
	动态模型一般在系统运行时动态编程，此时应用和模型编程工具是同一个系统，这样新开发出来的模型总是会自动成为系统的一部分，这样可以很容易的实现系统的积累和迭代。</li>
</ul>

<h2>3.动态模型是如何实现的？</h2>

<p style="margin: 0px 0px 10px;">&nbsp; &nbsp; 动态模型使用结构化的数据编程，它有两个核心问题。</p>

<ol>
	<li><strong>如何用数据表示各种东西</strong><br />
	动态模型采用的是面向对象的方法。<br />
	&nbsp;</li>
	<li><strong>如何让数据变成可执行的程序</strong><br />
	动态模型采取的是迭代解释执行的方法。</li>
</ol>

<p>&nbsp;&nbsp;&nbsp; 具体可以参看动态模型的原理。</p>

<p>&nbsp;&nbsp;</p>
#$@text#$@
sen_label
Dynamic Model
sdescriptors
xworker.content.QuickContent
sinheritDescription
false
sth_createIndex
true
sth_registThing
child|xworker.example.ExamplesIndex
sth_registMyChilds
false
sth_registDisabled
false
sth_noThingRegistViewer
false
sth_fileMonitor
false
Sen_description
#$@text#$@
<h1>Dynamic model</h1>

<h2>1. Basic concepts</h2>

<p>&nbsp;&nbsp;&nbsp; The dynamic model is an object-oriented programming method, which uses structured data to program. These structured data can be represented by XML, or can be simply understood as XML. Programming.</p>

<p>&nbsp; &nbsp; For example, the following XMl is a dynamic model program.</p>

<pre class="brush:xml;">
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;

&lt;Shell name=&quot;shell&quot; descriptors=&quot;xworker.swt.widgets.Shell&quot; text=&quot;TestShell&quot;&gt;
    &lt;FillLayout name=&quot;FillLayout&quot;&gt;&lt;/FillLayout&gt;
    &lt;Browser name=&quot;Browser&quot; url=&quot;https://www.xworker.org&quot;&gt;&lt;/Browser&gt;
    &lt;GroovyAction name=&quot;init&quot; code=&quot;println &amp;quot;Hello World!&amp;quot;;&quot;&gt;&lt;/GroovyAction&gt;
&lt;/Shell&gt;</pre>

<h2>2. Features of the dynamic model</h2>

<ul>
	<li><strong>Dynamic programming</strong><br />
	The dynamic model is an object-oriented programming method, which can dynamically modify the classes and objects in the system when the system is running, and the modified classes and objects can also be interpreted and executed in real time, so dynamic programming at runtime can be realized.<br />
	&nbsp;</li>
	<li><strong>Quick programming</strong><br />
	There are various programming methods for dynamic models. Different programming tools can be written for different models. In the process of programming using dynamic models, you can also continue to write tools to optimize yourself, so that programming can become faster and faster.<br />
	&nbsp;&nbsp;&nbsp;</li>
	<li><strong>Accumulation and iteration</strong><br />
	The dynamic model is generally programmed dynamically when the system is running. At this time, the application and the model programming tool are the same system, so that the newly developed model will always automatically become a part of the system, which can easily realize the accumulation and iteration of the system.</li>
</ul>

<h2>3. How is the dynamic model implemented?</h2>

<p style="margin: 0px 0px 10px;">&nbsp; &nbsp; The dynamic model uses structured data programming, which has two core problems.</p>

<ol>
	<li><strong>How to use data to represent various things</strong><br />
	The dynamic model uses an object-oriented approach.<br />
	&nbsp;</li>
	<li><strong>How to make data an executable program</strong><br />
	The dynamic model adopts the method of iterative interpretation and execution.</li>
</ol>

<p>&nbsp;&nbsp;&nbsp; For details, please refer to the principle of dynamic model.</p>

<p>&nbsp;&nbsp;</p>
#$@text#$@
sth_mark
false
sth_registQueryOnlySelf
false
