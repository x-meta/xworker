@xworker.app.view.extjs.server.tools.grid.GridGenerator
sname
GridGenerator
slabel
GridGenerator
sid
GridGenerator
sdescriptors
xworker.http.ControlSet
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl
sname
SimpleControl
sid
SimpleControl
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view
sname
view
stitle
ExtJs Grid Code Generateor
sbelongToHtml
true
sstyle
default
shasHead
false
shasBottom
false
sotherHeads
<meta http-equiv="content-type" content="text/html; charset=utf-8">
slabel
view
sid
view
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs
sname
ExtJs
sid
ExtJs
slabel
ExtJs
sdescriptors
xworker.html.Widgets/@ExtJs
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport
sname
Viewport
slabel
Viewport
svarname
view
shaveTypeInCode
false
svarglobal
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Ldisabled
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'view'
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Viewport
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items
sname
items
sid
items
slabel
items
sdescriptors
xworker.html.extjs.Ext.Container/@24354
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel
sdf_dataObject
xworker.app.view.extjs.server.tools.grid.DataObject
sdf_editorType
edit
sdf_appendItems
true
sdf_column
3
sdf_showLabel
true
sdf_labelAlign
right
sdf_labelVAlign
baseline
sdf_bind
false
sdf_bindType
grid
sdf_createToServer
true
sdf_updateToServer
true
sdf_destroyToServer
true
LhideLabels
false
slabelAlign
'left'
LmonitorValid
false
sname
DataObjectFormPanel
slabel
DataObjectFormPanel
shaveTypeInCode
false
LanimCollapse
false
LbodyBorder
false
Lborder
false
Lclosable
false
LcollapseFirst
false
Lcollapsed
false
Lcollapsible
false
Ldisabled
false
Lfooter
false
Lframe
false
Lheader
false
LheaderAsText
false
LhideCollapseTool
false
LmaskDisabled
false
LpreventBodyReset
false
Lshim
false
LtitleCollapse
false
Lunstyled
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'formPanel'
Lstateful
false
LfileUpload
false
LparamsAsHash
false
LstandardSubmit
false
LtrackResetOnLoad
false
sdescriptors
xworker.app.view.extjs.widgets.AppItems/@DataObjectFormPanel
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel/@buttons
sname
buttons
sid
buttons
slabel
buttons
sdescriptors
xworker.html.extjs.Ext.form.FormPanel/@24823
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel/@buttons/@Button1
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'更新'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel/@buttons/@Button1/@handler
sname
handler
Scode
#$@text#$@
var formPanel = Ext.getCmp('formPanel').getForm();
formPanel.doUpdate();
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel/@buttons/@Button
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'生成表格代码'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectFormPanel/@buttons/@Button/@handler
sname
handler
Scode
#$@text#$@
var formPanel = Ext.getCmp('formPanel').getForm();
formPanel.submit({
    clientValidation: false,
    url: 'do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator:/@submit',
    success: function(form, action) {
       window.open('do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid');
    },
    failure: function(form, action) {
        switch (action.failureType) {
            case Ext.form.Action.CLIENT_INVALID:
                Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
                break;
            case Ext.form.Action.CONNECT_FAILURE:
                Ext.Msg.alert('Failure', 'Ajax communication failed');
                break;
            case Ext.form.Action.SERVER_INVALID:
               Ext.Msg.alert('Failure', action.result.msg);
       }
    }
});
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel
sdataObject
xworker.app.view.extjs.server.tools.grid.Attribute
LcolumnLines
false
LdeferRowRender
false
LdisableSelection
false
LenableColumnHide
false
LenableColumnMove
false
LenableColumnResize
false
LenableDragDrop
false
LenableHdMenu
false
LhideHeaders
false
LstripeRows
false
LtrackMouseOver
false
sname
DataObjectGridPanel
slabel
DataObjectGridPanel
LanimCollapse
false
LbodyBorder
false
Lborder
false
Lclosable
false
LcollapseFirst
false
Lcollapsed
false
Lcollapsible
false
Ldisabled
false
Lfooter
false
Lframe
false
Lheader
false
LheaderAsText
false
LhideCollapseTool
false
LmaskDisabled
false
LpreventBodyReset
false
Lshim
false
LtitleCollapse
false
Lunstyled
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'grid'
Lstateful
false
sdescriptors
xworker.app.view.extjs.widgets.AppItems/@DataObjectGridPanel
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons
sname
buttons
sid
buttons
slabel
buttons
sdescriptors
xworker.html.extjs.Ext.Panel/@25325
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'添加字段'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button/@handler
sname
handler
Scode
#$@text#$@
Ext.Msg.prompt('Name', 'Please enter a field name:', function(btn, text){
    if (btn == 'ok'){
        var store = Ext.StoreMgr.get('grid_store');
        store.insert(store.getCount(), new store.recordType({name:text}));
    }
});
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button1
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'删除'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button1/@handler
sname
handler
Scode
#$@text#$@
var grid = Ext.getCmp('grid');
var store = Ext.StoreMgr.get('grid_store');
store.remove(grid.getSelectionModel().getSelections());
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button2
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'保存'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Viewport/@items/@DataObjectGridPanel/@buttons/@Button2/@handler
sname
handler
Scode
#$@text#$@
var store = Ext.StoreMgr.get("grid_store");
store.save();
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view/@ExtJs/@Code
sname
Code
Scode
#$@text#$@
var formPanel = Ext.getCmp('formPanel');
formPanel.doLoad('DataObject');
#$@text#$@
sid
Code
sdescriptors
xworker.html.extjs.Items/@Code
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@success
sname
success
stype
form
scontentType
text/html;charset=UTF-8
svalue
xworker.app.view.extjs.server.tools.grid.GridGenerator/@SimpleControl/@view
sid
success
slabel
success
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid
sname
generateGrid
sid
generateGrid
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@actions
sname
actions
sid
actions
slabel
actions
sdescriptors
xworker.http.controls.SimpleControl/@actions
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@actions/@doAction
sname
doAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
suseOuterJava
true
souterClassName
xworker.app.view.extjs.server.tools.grid.GridGeneratorGenerateGridCreator
smethodName
doAction
sdisableGlobalContext
false
sid
doAction
sdescriptors
xworker.lang.actions.JavaAction
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view
sname
view
sbelongToHtml
true
sstyle
default
shasHead
false
shasBottom
false
sotherHeads
<meta http-equiv="content-type" content="text/html; charset=utf-8">
slabel
view
sid
view
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs
sname
ExtJs
sid
ExtJs
slabel
ExtJs
sdescriptors
xworker.html.Widgets/@ExtJs
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_
sname
Viewport
slabel
Viewport
svarname
viewPort
shaveTypeInCode
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Ldisabled
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'viewPort'
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Viewport
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items
sname
items
sid
items
slabel
items
sdescriptors
xworker.html.extjs.Ext.Container/@24354
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel
sactiveTab
0
LanimScroll
true
LautoTabs
false
LdeferredRender
true
LenableTabScroll
false
LlayoutOnTabChange
false
Lplain
false
LresizeTabs
false
fscrollDuration
0.0
sname
TabPanel
slabel
TabPanel
shaveTypeInCode
false
LanimCollapse
false
LbodyBorder
false
Lborder
false
Lclosable
false
LcollapseFirst
false
Lcollapsed
false
Lcollapsible
false
Ldisabled
false
Lfooter
false
Lframe
false
Lheader
false
LheaderAsText
false
LhideCollapseTool
false
LmaskDisabled
false
LpreventBodyReset
false
Lshim
false
LtitleCollapse
false
Lunstyled
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'tabPanel'
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@TabPanel
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items
sname
items
sid
items
slabel
items
sdescriptors
xworker.html.extjs.Ext.Container/@24354
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel
sdataObject
_transient.234./@235
LcolumnLines
false
LdeferRowRender
false
LdisableSelection
false
LenableColumnHide
false
LenableColumnMove
false
LenableColumnResize
false
LenableDragDrop
false
LenableHdMenu
false
LhideHeaders
false
LstripeRows
false
LtrackMouseOver
false
sname
DataObjectGridPanel
slabel
DataObjectGridPanel
LanimCollapse
false
LbodyBorder
false
Lborder
false
Lclosable
false
LcollapseFirst
false
Lcollapsed
false
Lcollapsible
false
Ldisabled
false
Lfooter
false
Lframe
false
Lheader
false
LheaderAsText
false
LhideCollapseTool
false
LmaskDisabled
false
LpreventBodyReset
false
Lshim
false
LtitleCollapse
false
Lunstyled
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'grid'
Lstateful
false
sdescriptors
xworker.app.view.extjs.widgets.AppItems/@DataObjectGridPanel
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons
sname
buttons
sid
buttons
slabel
buttons
sdescriptors
xworker.html.extjs.Ext.Panel/@25325
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'Add'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button/@handler
sname
handler
Scode
#$@text#$@
Ext.Msg.prompt('Name', 'Please enter a field name:', function(btn, text){
    if (btn == 'ok'){
        var store = Ext.StoreMgr.get('grid_store');
        store.insert(store.getCount(), new store.recordType({name:text}));
    }
});
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button1
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'Remove'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button1/@handler
sname
handler
Scode
#$@text#$@
var grid = Ext.getCmp('grid');
var store = Ext.StoreMgr.get('grid_store');
store.remove(grid.getSelectionModel().getSelections());
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button2
LallowDepress
false
LautoWidth
false
Ldisabled
false
LenableToggle
false
LhandleMouseEvents
true
Lhidden
false
siconAlign
'left'
Lpressed
false
sscale
'small'
stext
'Save'
stooltipType
'qtip'
stype
'button'
sname
Button
slabel
Button
shaveTypeInCode
false
LhideLabel
false
LhideParent
false
Lstateful
false
sdescriptors
xworker.html.extjs.Items/@Button
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@DataObjectGridPanel/@buttons/@Button2/@handler
sname
handler
Scode
#$@text#$@
var store = Ext.StoreMgr.get("grid_store");
store.save();
#$@text#$@
shaveTypeInCode
false
sid
handler
sdescriptors
xworker.html.extjs.Ext.Button/@24224
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@_formPanel_
LhideLabels
false
slabelAlign
'left'
LmonitorValid
false
sname
FormPanel
slabel
FormPanel
shaveTypeInCode
false
LanimCollapse
false
LbodyBorder
false
Lborder
false
Lclosable
false
LcollapseFirst
false
Lcollapsed
false
Lcollapsible
false
Ldisabled
false
Lfooter
false
Lframe
false
Lheader
false
LheaderAsText
false
LhideCollapseTool
false
LmaskDisabled
false
LpreventBodyReset
false
Lshim
false
LtitleCollapse
false
Lunstyled
false
LautoDestroy
false
LforceLayout
false
LhideBorders
false
LmonitorResize
false
Lhidden
false
LhideLabel
false
LhideParent
false
sid
'formPanel'
Lstateful
false
LfileUpload
false
LparamsAsHash
false
LstandardSubmit
false
LtrackResetOnLoad
false
sdescriptors
xworker.html.extjs.Items/@FormPanel
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view/@ExtJs/@_viewPort_/@items/@_tabPanel/@items/@_formPanel_/@autoLoad
sscripts
false
surl
'do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid'
sname
autoLoad
slabel
autoLoad
shaveTypeInCode
false
sid
autoLoad
sdescriptors
xworker.html.extjs.Ext.Panel/@25315
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@success
sname
success
stype
form
scontentType
text/html;charset=UTF-8
svalue
xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid/@view
sid
success
slabel
success
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid
sname
gridCode
sid
grid
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@actions
sname
actions
sid
actions
slabel
actions
sdescriptors
xworker.http.controls.SimpleControl/@actions
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@actions/@GroovyAction
sname
doAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
suseOuterJava
true
souterClassName
xworker.app.view.extjs.server.tools.grid.GridGeneratorGridCodeCreator
smethodName
doAction
sdisableGlobalContext
false
sid
GroovyAction
sdescriptors
xworker.lang.actions.JavaAction
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@view
sname
view
sbelongToHtml
false
sstyle
default
shasHead
false
shasBottom
false
sotherHeads
<meta http-equiv="content-type" content="text/html; charset=utf-8">
slabel
view
sid
view
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@view/@code1
sname
code
Scode
#$@text#$@
<pre>
${(code?html)?if_exists}
</pre>
#$@text#$@
sid
code1
sdescriptors
xworker.html.base.container.childs/@code
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@success
sname
success
stype
form
scontentType
text/plain;charset=UTF-8
svalue
xworker.app.view.extjs.server.tools.grid.GridGenerator/@grid/@view
sid
success
slabel
success
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@submit
sname
submit
sid
submit
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@submit/@actions
sname
actions
sid
actions
slabel
actions
sdescriptors
xworker.http.controls.SimpleControl/@actions
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@submit/@actions/@doAction
sname
doAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
suseOuterJava
true
souterClassName
xworker.app.view.extjs.server.tools.grid.GridGeneratorSubmitCreator
smethodName
doAction
sdisableGlobalContext
false
sid
doAction
sdescriptors
xworker.lang.actions.JavaAction
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@test
sname
test
sid
test
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@test/@view
sname
view
sbelongToHtml
false
sstyle
default
shasHead
false
shasBottom
false
sotherHeads
<meta http-equiv="content-type" content="text/html; charset=utf-8">
slabel
view
sid
view
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@test/@view/@code
sname
code
Scode
#$@text#$@
Ext.onReady(function() {
    Ext.QuickTips.init();

    var grid_checkBox = new Ext.grid.CheckboxSelectionModel({
                });

    var view = new Ext.Viewport({
        layout: 'border',
        id: 'view',
        items: [
            new Ext.form.FormPanel({
                title: 'ExtJs Grid Generator',
                layout: 'fit',
                boxMinWidth: 500,
                height: 195,
                region: 'north',
                id: 'formPanel',
                split: true,
                buttons: [
                    new Ext.Button({
                        text: 'Generate Ext Grid Code',
                        handler: function(){
                            var formPanel = Ext.getCmp('formPanel').getForm();
                            formPanel.submit({
                                clientValidation: false,
                                url: 'do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator:/@submit',
                                success: function(form, action) {
                                   window.open('do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator/@generateGrid');
                                },
                                failure: function(form, action) {
                                    switch (action.failureType) {
                                        case Ext.form.Action.CLIENT_INVALID:
                                            Ext.Msg.alert('Failure', 'Form fields may not be submitted with invalid values');
                                            break;
                                        case Ext.form.Action.CONNECT_FAILURE:
                                            Ext.Msg.alert('Failure', 'Ajax communication failed');
                                            break;
                                        case Ext.form.Action.SERVER_INVALID:
                                           Ext.Msg.alert('Failure', action.result.msg);
                                   }
                                }
                            });
                        }
                    })
                ],
                reader: new Ext.data.JsonReader({
                        idProperty: 'name',
                        root: 'data',
                        messageProperty: 'msg',
                        fields: [
                            {
                                allowBlank: false,
                                defaultValue: 'DataObject',
                                mapping: 'name',
                                name: 'name'
                            },
                            {
                                defaultValue: 'Label',
                                mapping: 'label',
                                name: 'label'
                            },
                            {
                                mapping: 'storeIdProperty',
                                name: 'storeIdProperty'
                            },
                            {
                                defaultValue: true,
                                mapping: 'paging',
                                name: 'paging',
                                type: 'boolean'
                            },
                            {
                                mapping: 'storeAutoLoad',
                                name: 'storeAutoLoad',
                                type: 'boolean'
                            },
                            {
                                mapping: 'storeAutoSave',
                                name: 'storeAutoSave'
                            },
                            {
                                defaultValue: 'true',
                                mapping: 'gridEditable',
                                name: 'gridEditable'
                            },
                            {
                                defaultValue: 'false',
                                mapping: 'gridColumnLocking',
                                name: 'gridColumnLocking'
                            },
                            {
                                mapping: 'gridCheckable',
                                name: 'gridCheckable'
                            },
                            {
                                mapping: 'gridRowNumber',
                                name: 'gridRowNumber'
                            },
                            {
                                mapping: 'columnGroup',
                                name: 'columnGroup'
                            },
                            {
                                mapping: 'gridGrouping',
                                name: 'gridGrouping',
                                type: 'boolean'
                            },
                            {
                                mapping: 'gridGroupField',
                                name: 'gridGroupField'
                            },
                            {
                                defaultValue: '{text} ({[values.rs.length]} 条)',
                                mapping: 'gridGroupTextTpl',
                                name: 'gridGroupTextTpl'
                            }
                        ]
                    }),
                baseParams: {
                    dataObjectPath: 'xworker.app.view.extjs.server.tools.grid.DataObject'
                },
                items: [
                    new Ext.Panel({
                        hidden: true,
                        items: [

                        ]
                    }),
                    new Ext.Panel({
                        layout: 'table',
                        layoutConfig: {
                            columns: 6,
                            tableAttrs: {
                                cellspacing: 5
                            }
                        },
                        items: [
                            new Ext.form.Label({
                                text: 'Name:',
                                cls: 'x-form-field',
                                id: 'name',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.TextField({
                                allowBlank: false,
                                name: 'name'
                            }),
                            new Ext.form.Label({
                                text: 'Label:',
                                cls: 'x-form-field',
                                id: 'label',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.TextField({
                                name: 'label'
                            }),
                            new Ext.form.Label({
                                text: 'Id Property:',
                                cls: 'x-form-field',
                                id: 'storeIdProperty',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.TextField({
                                name: 'storeIdProperty'
                            }),
                            new Ext.form.Label({
                                text: 'Paging:',
                                cls: 'x-form-field',
                                id: 'paging',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'paging'
                            }),
                            new Ext.form.Label({
                                text: 'Auto Load:',
                                cls: 'x-form-field',
                                id: 'storeAutoLoad',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'storeAutoLoad'
                            }),
                            new Ext.form.Label({
                                text: 'Auto Save:',
                                cls: 'x-form-field',
                                id: 'storeAutoSave',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'storeAutoSave'
                            }),
                            new Ext.form.Label({
                                text: 'Editable:',
                                cls: 'x-form-field',
                                id: 'gridEditable',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'gridEditable'
                            }),
                            new Ext.form.Label({
                                text: 'Column Locking:',
                                cls: 'x-form-field',
                                id: 'gridColumnLocking',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'gridColumnLocking'
                            }),
                            new Ext.form.Label({
                                text: 'Checkable:',
                                cls: 'x-form-field',
                                id: 'gridCheckable',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'gridCheckable'
                            }),
                            new Ext.form.Label({
                                text: 'Show Row Number:',
                                cls: 'x-form-field',
                                id: 'gridRowNumber',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'gridRowNumber'
                            }),
                            new Ext.form.Label({
                                text: 'Column Group:',
                                cls: 'x-form-field',
                                id: 'columnGroup',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'columnGroup'
                            }),
                            new Ext.form.Label({
                                text: 'Row Grouping:',
                                cls: 'x-form-field',
                                id: 'gridGrouping',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.Checkbox({
                                inputValue: 'true',
                                name: 'gridGrouping'
                            }),
                            new Ext.form.Label({
                                text: 'Row Group Field:',
                                cls: 'x-form-field',
                                id: 'gridGroupField',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.TextField({
                                name: 'gridGroupField'
                            }),
                            new Ext.form.Label({
                                text: 'Row Group Tpl:',
                                cls: 'x-form-field',
                                id: 'gridGroupTextTpl',
                                colspan: 1,
                                rowspan: 1
                            }),
                            new Ext.form.TextField({
                                name: 'gridGroupTextTpl'
                            })
                        ]
                    })
                ],
                doLoad: function(name){
                    Ext.getCmp('formPanel').getForm().load({url.'do?sc=xworker.appview.web.extjs.server.DataObjectForm/@read&name=' + name, 
                    waitMsg:'正在加载，请稍候...',
                    success:function(){
                        alert('tt');
                    },failure:function(form, action){
                        alert(action.failureType);
                        alert(action.response);
                        alert(action.result.msg);
                        alert(action.type);
                    }
                    });
                },
                doCreate: function(){
                    //提交数据
                    Ext.getCmp('formPanel').getForm().submit({
                        url.'do?sc=xworker.appview.web.extjs.server.DataObjectForm/@create', 
                        waitMsg:'正在保存数据，请稍候...',
                        success: function(form, action) {    
                           Ext.Msg.alert('成功', action.result.msg);
                        },
                        failure: function(form, action) {
                            switch (action.failureType) {
                                case Ext.form.Action.CLIENT_INVALID:
                                    Ext.Msg.alert('失败', '数据校验失败');
                                    break;
                                case Ext.form.Action.CONNECT_FAILURE:
                                    Ext.Msg.alert('失败', 'Ajax通讯错误');
                                    break;
                                case Ext.form.Action.SERVER_INVALID:
                                   Ext.Msg.alert('失败', action.result.msg);
                            }
                        }
                    });
                },
                doUpdate: function(){
                    //提交数据
                    Ext.getCmp('formPanel').getForm().submit({
                        url.'do?sc=xworker.appview.web.extjs.server.DataObjectForm/@update', 
                        waitMsg:'正在保存数据，请稍候...',
                        success: function(form, action) {    
                           Ext.Msg.alert('成功', action.result.msg);
                        },
                        failure: function(form, action) {
                            switch (action.failureType) {
                                case Ext.form.Action.CLIENT_INVALID:
                                    Ext.Msg.alert('失败', '数据校验失败');
                                    break;
                                case Ext.form.Action.CONNECT_FAILURE:
                                    Ext.Msg.alert('失败', 'Ajax通讯错误');
                                    break;
                                case Ext.form.Action.SERVER_INVALID:
                                   Ext.Msg.alert('失败', action.result.msg);
                            }
                        }
                    });
                },
                doDestroy: function(){
                    //提交数据
                    Ext.getCmp('formPanel').getForm().submit({
                        url.'do?sc=xworker.appview.web.extjs.server.DataObjectForm/@delete', 
                        waitMsg:'正在删除数据，请稍候...',
                        success: function(form, action) {    
                            Ext.Msg.alert('成功', action.result.msg);
                        },
                        failure: function(form, action) {
                            switch (action.failureType) {
                                case Ext.form.Action.CLIENT_INVALID:
                                    Ext.Msg.alert('失败', '数据校验失败');
                                    break;
                                case Ext.form.Action.CONNECT_FAILURE:
                                    Ext.Msg.alert('失败', 'Ajax通讯错误');
                                    break;
                                case Ext.form.Action.SERVER_INVALID:
                                   Ext.Msg.alert('失败', action.result.msg);
                            }
                        }
                    });
                }
            }),
            new Ext.grid.EditorGridPanel({
                region: 'center',
                id: 'grid',
                store: new Ext.data.JsonStore({
                        idProperty: 'name',
                        root: 'rows',
                        successProperty: 'success',
                        totalProperty: 'totalCount',
                        messageProperty: 'msg',
                        autoSave: false,
                        storeId: 'grid_store',
                        autoLoad: true,
                        proxy: new Ext.data.HttpProxy({
                                api: {
                                    read: 'do?sc=xworker.app.view.extjs.server.DataObjectStore:/@read',
                                    create: 'do?sc=xworker.app.view.extjs.server.DataObjectStore:/@create',
                                    update: 'do?sc=xworker.app.view.extjs.server.DataObjectStore:/@update',
                                    destroy: 'do?sc=xworker.app.view.extjs.server.DataObjectStore:/@destroy'
                                }
                            }),
                        writer: new Ext.data.JsonWriter({
                            }),
                        fields: [
                            {
                                mapping: 'name',
                                name: 'name'
                            },
                            {
                                mapping: 'label',
                                name: 'label'
                            },
                            {
                                mapping: 'isKey',
                                name: 'isKey',
                                type: 'boolean'
                            },
                            {
                                mapping: 'inputtype',
                                name: 'inputtype'
                            },
                            {
                                mapping: 'columnLocked',
                                name: 'columnLocked',
                                type: 'boolean'
                            },
                            {
                                mapping: 'gridGroupName',
                                name: 'gridGroupName'
                            },
                            {
                                mapping: 'gridGroupable',
                                name: 'gridGroupable',
                                type: 'boolean'
                            },
                            {
                                mapping: 'gridMenuDisabled',
                                name: 'gridMenuDisabled',
                                type: 'boolean'
                            }
                        ],
                        baseParams: {
                            dataObjectPath.'xworker.appview.web.extjs.server.tools.grid.Attribute'
                        },
                        listeners: {
                            exception: function(proxy, type, action, options, response){
                                
                                if(response.message){
                                    Ext.Msg.alert('失败', response.message);
                                }else{
                                    Ext.Msg.alert('失败', 'type=' + type + ',action=' + action);
                                }
                            }
                        }
                    }),
                buttons: [
                    new Ext.Button({
                        text: 'Add',
                        handler: function(){
                            Ext.Msg.prompt('Name', 'Please enter a field name:', function(btn, text){
                                if (btn == 'ok'){
                                    var store = Ext.StoreMgr.get('grid_store');
                                    store.insert(store.getCount(), new store.recordType({name:text}));
                                }
                            });
                        }
                    }),
                    new Ext.Button({
                        text: 'Remove',
                        handler: function(){
                            var grid = Ext.getCmp('grid');
                            var store = Ext.StoreMgr.get('grid_store');
                            store.remove(grid.getSelectionModel().getSelections());
                        }
                    }),
                    new Ext.Button({
                        text: 'Save',
                        handler: function(){
                            var store = Ext.StoreMgr.get("grid_store");
                            store.save();
                        }
                    })
                ],
                selModel: grid_checkBox,
                columns: [
                    grid_checkBox,
                    {
                        dataIndex: 'name',
                        editable: false,
                        fixed: true,
                        header: 'Name',
                        id: 'name',
                        locked: true,
                        editor: new Ext.form.TextField({
                                name: 'name'
                            })
                    },
                    {
                        dataIndex: 'label',
                        header: 'Label',
                        id: 'label',
                        editor: new Ext.form.TextField({
                                name: 'label'
                            })
                    },
                    {
                        dataIndex: 'isKey',
                        header: 'Is Key',
                        id: 'isKey',
                        xtype: 'booleancolumn',
                        editor: new Ext.form.Checkbox({
                                name: 'isKey'
                            })
                    },
                    {
                        dataIndex: 'inputtype',
                        header: 'Input Type',
                        id: 'inputtype',
                        editor: new Ext.form.TextField({
                                name: 'inputtype'
                            })
                    },
                    {
                        dataIndex: 'columnLocked',
                        header: 'Column Locked',
                        id: 'columnLocked',
                        xtype: 'booleancolumn',
                        editor: new Ext.form.Checkbox({
                                name: 'columnLocked'
                            })
                    },
                    {
                        dataIndex: 'gridGroupName',
                        header: 'Column Group Name',
                        id: 'gridGroupName',
                        editor: new Ext.form.TextField({
                                name: 'gridGroupName'
                            })
                    },
                    {
                        dataIndex: 'gridGroupable',
                        header: 'Row Groupable',
                        id: 'gridGroupable',
                        xtype: 'booleancolumn',
                        editor: new Ext.form.Checkbox({
                                name: 'gridGroupable'
                            })
                    },
                    {
                        dataIndex: 'gridMenuDisabled',
                        header: 'Menu Disabled',
                        id: 'gridMenuDisabled',
                        xtype: 'booleancolumn',
                        editor: new Ext.form.Checkbox({
                                name: 'gridMenuDisabled'
                            })
                    }
                ],
                bbar: new Ext.PagingToolbar({
                    store: 'grid_store'
                })
            })
        ]
    });

    var formPanel = Ext.getCmp('formPanel');
    formPanel.doLoad('DataObject');
});
#$@text#$@
sid
code
sdescriptors
xworker.html.base.container.childs/@code
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@test/@success
sname
success
stype
form
scontentType
text/html;charset=UTF-8
svalue
xworker.app.view.extjs.server.tools.grid.GridGenerator/@test/@view
sid
success
slabel
success
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@testMain
sname
testMain
sid
testMain
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@testMain/@view
sname
view
sbelongToHtml
true
sstyle
default
shasHead
false
shasBottom
false
sotherHeads
<meta http-equiv="content-type" content="text/html; charset=utf-8">
slabel
view
sid
view
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@testMain/@view/@code
sname
code
Scode
#$@text#$@
<html>
<head><title>ExtJs Grid Code Generateor</title>

<link rel="stylesheet" type="text/css" href="/js/extjs/resources/css/ext-all.css">
<script type="text/javascript" src="/js/extjs/adapter/ext/ext-base.js"></script>
<script type="text/javascript" src="/js/extjs/ext-all-debug.js"></script>
<link rel="stylesheet" type="text/css" href="/js/extjs/ux/css/ux-all.css">
<script type="text/javascript" src="/js/extjs/ux/ux-all-debug.js"></script>        


<script type="text/javascript" src="/do?sc=xworker.app.view.extjs.server.tools.grid.GridGenerator/@test"></script>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
</head>
<body >

    </body>
</html>
#$@text#$@
sid
code
sdescriptors
xworker.html.base.container.childs/@code
@xworker.app.view.extjs.server.tools.grid.GridGenerator/@testMain/@success
sname
success
stype
form
scontentType
text/html;charset=UTF-8
svalue
xworker.app.view.extjs.server.tools.grid.GridGenerator/@testMain/@view
sid
success
slabel
success
sdescriptors
xworker.http.controls.SimpleControl/@result
