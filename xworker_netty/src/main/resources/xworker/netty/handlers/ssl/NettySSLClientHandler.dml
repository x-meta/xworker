<?xml version="1.0" encoding="utf-8"?>

<thing name="NettySSLClientHandler" descriptors="xworker.lang.MetaDescriptor3" extends="xworker.netty.handlers.ssl.NettySSLServerHandler,xworker.javax.net.ssl.SSL">
    <description><![CDATA[<p>使用io.netty.handler.ssl.SslContextBuilder创建的SslContext，然后再创建SslHandler。</p>

<p><strong>服务器端证书</strong></p>

<p>&nbsp;&nbsp;&nbsp; 客户端需要服务器端的证书，设置<strong>trustCertCollectionFile</strong>。</p>

<p><strong>协议 </strong></p>

<p>&nbsp;&nbsp;&nbsp; 需要设置<strong>协议（protocols）</strong>。如：TLSv1.2,TLSv1.1,TLSv1。</p>

<p><strong>双向验证</strong></p>

<p>&nbsp;&nbsp;&nbsp; 如果属性clientAuth=true，那么开启双向验证。客户端也需要设置自己的证书和私钥，参看<a href="do?sc=xworker.ide.worldexplorer.swt.http.ThingDoc/@desc&amp;thing=xworker.netty.handlers.ssl.NettySSLServerHandler">NettySSLServerHandler</a>。</p>

<p><strong>可以重写的方法</strong></p>

<ul>
	<li><strong>void init(SslContextBuilder builder, Channel channel)&nbsp;&nbsp;&nbsp;&nbsp;</strong><br />
	初始化。&nbsp;&nbsp;&nbsp;</li>
</ul>

<p>&nbsp;</p>
]]></description>
    <actions>
        <JavaAction name="create" outerClassName="xworker.io.netty.handlers.ssl.NettySSLHandler"
             methodName="createClientHandler"></JavaAction>
        <GetString name="getHost" descriptors="xworker.lang.actions.ActionUtil/@GetString"
             attributeName="host" usage="params"></GetString>
        <GetInt name="getPort" descriptors="xworker.lang.actions.ActionUtil/@GetInt"
             attributeName="port" usage="params"></GetInt>
    </actions>
    <attribute name="host" group="Client"></attribute>
    <attribute name="port" group="Client"></attribute>
</thing>