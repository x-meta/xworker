<?xml version="1.0" encoding="utf-8"?>

<thing name="TimeoutHandler" descriptors="xworker.lang.MetaDescriptor3">
    <description><![CDATA[<p>专门用于处理IdleHandler触发的IdleStateEvent。</p>

<p><strong>可以监听以下事件：</strong></p>

<ul>
	<li><strong>onReaderIdle(ChannelHandlerContext ctx, Object evt)</strong><br />
	读空闲事件。默认是ctx.close()。<br />
	&nbsp;</li>
	<li><strong>onWriterIdle(ChannelHandlerContext ctx, Object evt)</strong><br />
	写空闲事件。应该发送一个心跳包。<br />
	&nbsp;</li>
	<li><strong>onAllIdle(ChannelHandlerContext ctx, Object evt)</strong><br />
	读写同时空闲。&nbsp;&nbsp;</li>
</ul>

<p>&nbsp;&nbsp;</p>
]]></description>
    <actions>
        <JavaAction name="create" outerClassName="xworker.io.netty.handlers.TimeoutHandler"
             methodName="create"></JavaAction>
        <JavaAction name="onReaderIdle" outerClassName="xworker.io.netty.handlers.TimeoutHandler"
             methodName="onReaderIdle" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </JavaAction>
        <NOOP name="onWriterIdle" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </NOOP>
        <NOOP name="onAllIdle" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </NOOP>
    </actions>
    <attribute name="name"></attribute>
    <attribute name="label"></attribute>
    <attribute name="description" inputtype="html"></attribute>
</thing>