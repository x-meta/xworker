<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="Programming" descriptors="xworker.swt.xworker.ThingRegistThing" label="编程"
     type="thingDesc" group="dynamicModel" icon="icons/html.png" th_sortWeight="200" simpleBrowser="true"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h1>编程</h1>

<p>&nbsp;&nbsp;&nbsp; 到这里应该已经掌握了动态模型的基础知识，下面简单说下如何使用动态模型编程。</p>

<h2>1.每一个模型都是程序</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型是面向对象的，每一个模型都是对象，执行一个模型程序就是执行一个模型的某个方法。</p>

<p>&nbsp;&nbsp;&nbsp; 这说明了动态模型没有向main函数这样的入口，每一个模型都可以作为主程序。执行模型程序就是运行某个模型的某个方法。XWorker的dml.sh或dml.cmd命令默认执行模型的run方法，也可以指定具体方法。</p>

<h2>2.模型一般是预先定义好的</h2>

<p>&nbsp;&nbsp;&nbsp; 对于普通开发者，一般是使用预先定义好的模型编程。</p>

<p>&nbsp;&nbsp;&nbsp; XWorker作为动态模型的开发平台，集合了各种模型，可以用来开发各种各样的应用。</p>

<h2>3.定义新的模型</h2>

<p>&nbsp;&nbsp;&nbsp; 模型可以封装各种技术和功能，一般是对它们的使用接口的封装，通过模型我们可以快速使用这些技术和功能。另一方面也可以用模型开发各种框架，可以使用已有的模型开发更高级的框架。</p>

<p>&nbsp;&nbsp;&nbsp; 新的模型可以打包到jar中，一般拷贝到XWorker的lib目录下就可以集成到XWorker中。具体可以参看XWorker的相关文档。</p>

<h2>4.打包和发布</h2>

<p>&nbsp;&nbsp;&nbsp; 模型可以随Java项目一起打包和发布，也可以使用XWorker的动作脚本打包成jar和war等等。</p>
]]></description>
</QuickFunction>