<?xml version="1.0" encoding="utf-8"?>

<ShellGuide name="ExplorerIntroduce" descriptors="xworker.swt.guide.ShellGuide" label="XWorker"
     en_label="XWorker" groupDescriptor="true" th_createIndex="true" th_registThing="child|xworker.lang.util.indexs.ShellGuideIndex"
     group="-30000|xworker" th_sortWeight="-30000">
    <actions>
        <getIDEShell name="getMaskComposite" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIDEShell"></getIDEShell>
        <getIdeActionContext name="getActionContext" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIdeActionContainer1"></getIdeActionContext>
    </actions>
    <Guide name="introduce" label="简介">
        <description><![CDATA[<h2>XWorker</h2>

<p>&nbsp;&nbsp;&nbsp; XWorker是动态模型的开发平台和应用平台。</p>

<h3>编程平台</h3>

<p>&nbsp;&nbsp;&nbsp; XWorker是动态模型的编程平台，动态模型是一种基于模型对象的实时编程方法。</p>

<ul>
	<li><strong>模型</strong><br />
	动态模型实现了面向对象的编程方法，其中对象是使用模型来表示的，模型是用像XML这样的树形结构的数据来表示的。<br />
	&nbsp;</li>
	<li><strong>集成各种API和功能</strong><br />
	可以把各种API和功能包装成模型，使用模型可以更加直观、简单和快速的使用这些API和功能。<br />
	&nbsp;</li>
	<li><strong>整合编程</strong><br />
	使用动态模型可以把各种API和功能整合在一起，从而能够无缝的使用它们。<br />
	&nbsp;</li>
	<li><strong>实时编程</strong><br />
	使用动态模型可以实现实时编程，即可以在运行时动态创建和修改系统中的模型对象，从而实时改变系统的功能。</li>
</ul>

<h3>应用平台</h3>

<p>&nbsp;&nbsp;&nbsp; 由于使用XWorker编写的应用也可以成为XWorker的一部分，所以XWorker也是一个应用平台。</p>

<ul>
	<li><strong>不断积累和迭代的系统</strong><br />
	XWorker可以不断的积累各种应用和功能，并且可以在已有的基础上不断开发新的应用和功能。</li>
</ul>

<p>&nbsp;</p>
]]></description>
    </Guide>
</ShellGuide>