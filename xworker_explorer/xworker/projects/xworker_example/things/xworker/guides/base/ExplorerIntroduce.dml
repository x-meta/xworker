<?xml version="1.0" encoding="utf-8"?>

<ShellGuide name="ExplorerIntroduce" descriptors="xworker.swt.guide.ShellGuide" label="XWorker"
     en_label="XWorker" th_createIndex="true" th_registThing="child|xworker.lang.util.indexs.ShellGuideIndex"
     th_sortWeight="-30000">
    <actions>
        <getIDEShell name="getMaskComposite" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIDEShell"></getIDEShell>
        <getIdeActionContext name="getActionContext" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIdeActionContainer1"></getIdeActionContext>
    </actions>
    <Guide name="introduce" label="简介">
        <description><![CDATA[<h2>XWorker</h2>

<p>&nbsp;&nbsp;&nbsp; XWorker是动态模型的开发平台和应用平台。</p>

<h3>动态模型</h3>

<p>&nbsp;&nbsp;&nbsp; 动态模型是一种基于模型对象的实时编程方法。</p>

<ul>
	<li><strong>模型对象</strong><br />
	动态模型实现了面向对象的编程方法，其中对象是使用模型来表示的，模型是用像XML这样的树形结构的数据来表示的。<br />
	&nbsp;</li>
	<li><strong>实时动态</strong><br />
	使用动态模型编写的系统是动态的，即可以在运行时动态创建和修改系统中的各种对象。比如可以在运行时随时创建和修改类，也可以随时修改对象的属性、行为和类别等等。</li>
</ul>

<h3>特点</h3>

<ul>
	<li><strong>快速编程</strong><br />
	作为动态模型的编程平台，使用XWorker可以实现快速编程。<br />
	&nbsp;</li>
	<li><strong>不断积累和进化的系统</strong><br />
	XWorker也是使用动态模型开发的，因此XWorker也是动态的。XWorker在不断的积累各种应用和功能，同时你也可以把XWorker定制成自己想要的系统。</li>
</ul>
]]></description>
    </Guide>
</ShellGuide>