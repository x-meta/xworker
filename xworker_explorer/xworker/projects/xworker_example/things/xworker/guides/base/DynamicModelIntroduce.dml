<?xml version="1.0" encoding="utf-8"?>

<ShellGuide name="DynamicModelIntroduce" descriptors="xworker.swt.guide.ShellGuide" label="编程平台"
     en_label="Dynamic Model" groupDescriptor="true" en_group="-20000|Dynamic Model"
     th_createIndex="true" th_registThing="child|xworker.lang.util.indexs.ShellGuideIndex"
     group="-20000|动态模型" th_sortWeight="-2000">
    <actions>
        <getIDEShell name="getMaskComposite" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIDEShell"></getIDEShell>
        <getIdeActionContext name="getActionContext" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIdeActionContainer1"></getIdeActionContext>
    </actions>
    <Guide name="realtimeProgramming" label="简介">
        <description><![CDATA[<h2>编程平台</h2>

<p>&nbsp;&nbsp;&nbsp; XWorker是动态模型的编程平台。使用动态模型可以实现快速编程和实施编程。下面是动态模型的基本原理。</p>

<ul>
	<li><strong>使用数据表示对象</strong><br />
	动态模型实现了面向对象编程方法，它使用树形结构的数据来表示对象，这样可以在系统运行时动态创建和修改对象。<br />
	&nbsp;</li>
	<li><strong>迭代解释执行</strong><br />
	在动态模型里，一个对象的行为可以用其它对象来解释执行，这个解释执行过程时迭代的，最终迭代到动态模型引擎来执行。<br />
	&nbsp;</li>
	<li><strong>脚本语言模型</strong><br />
	可以把各种脚本语言定义成模型对象，这样理论上就可以在运行时能够编写各种应用了。</li>
</ul>

<p>&nbsp;</p>
]]></description>
    </Guide>
</ShellGuide>