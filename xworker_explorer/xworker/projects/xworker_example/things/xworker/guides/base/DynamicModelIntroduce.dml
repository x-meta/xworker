<?xml version="1.0" encoding="utf-8"?>

<ShellGuide name="DynamicModelIntroduce" descriptors="xworker.swt.guide.ShellGuide" label="动态模型"
     en_label="Dynamic Model" en_group="-20000|Dynamic Model" th_createIndex="true" th_registThing="child|xworker.lang.util.indexs.ShellGuideIndex"
     group="-20000|动态模型" th_sortWeight="-2000">
    <actions>
        <getIDEShell name="getMaskComposite" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIDEShell"></getIDEShell>
        <getIdeActionContext name="getActionContext" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIdeActionContainer1"></getIdeActionContext>
    </actions>
    <Guide name="realtimeProgramming" label="简介">
        <description><![CDATA[<h2>实时编程</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型可以实现实时编程，即在系统运行时动态对系统本身编程，这样可以提高编程效率，也能够根据需求随时修改系统。</p>

<h3>实现原理</h3>

<p>&nbsp;&nbsp;&nbsp; 动态模型实现实时编程的原理如下。</p>

<ul>
	<li><strong>使用数据表示对象</strong><br />
	动态模型实现了面向对象编程方法，它使用树形结构的数据来表示对象，这样可以在系统运行时动态创建和修改对象。<br />
	&nbsp;</li>
	<li><strong>迭代解释执行</strong><br />
	在动态模型里，一个对象的行为可以用其它对象来解释执行，这个解释执行过程时迭代的，最终是由实现动态模型的语言来执行。<br />
	&nbsp;</li>
	<li><strong>脚本语言</strong><br />
	在动态模型里可以引入脚本语言，这样理论上可以在运行时编写和运行任何对象的解释代码了。</li>
</ul>

<p>&nbsp;&nbsp;&nbsp; 总之，动态模型本身是一个抽象的编程方法，它依赖于其它编程语言来实现。比如XWorker的动态模型引擎是使用Java实现的，XWorker集成了Groovy等脚本语言，可以动态编译和执行Groovy和Java等代码。</p>
]]></description>
    </Guide>
    <ThingEditorGuideInitor descriptors="xworker.swt.guide.shellguidenodes.ThingEditorNodes/@ThingEditorGuide">
        <actions>
            <GroovyAction name="getThing">
                <code><![CDATA[if(actionContext.get("thing") == null){
    return world.getThing("xworker.example.swt.SWTHelloWorld").detach();
}else{
    return thing;
}]]></code>
            </GroovyAction>
        </actions>
    </ThingEditorGuideInitor>
    <ThingEditor name="ThingEditor" descriptors="xworker.swt.guide.shellguidenodes.ThingEditorNodes/@ThingEditor"
         label="快速编程" disablePreButton="true">
        <description><![CDATA[<h2>快速编程</h2>

<p>&nbsp;&nbsp;&nbsp; 使用动态模型适合把各种技术和应用包装成模型，然后通过模型实现快速编程。</p>

<p>&nbsp;&nbsp;&nbsp; 比如XWorker把Eclipse的SWT包装成了模型，通过配置模型就可以快速开发SWT应用。现在XWorker已经打开了一个SWT的模型，可以编辑和运行它。</p>

<p>&nbsp;&nbsp;&nbsp; 要保存模型可以用<strong>Ctrl+s</strong>或<strong>Alt+s</strong>，要运行模型可以选择模型编辑器的菜单<strong>SWT-&gt;运行</strong>。&nbsp;&nbsp;&nbsp;</p>
]]></description>
    </ThingEditor>
</ShellGuide>