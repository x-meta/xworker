%1555999023772
@
sname=DynamicModelPrinciple
slabel=4.动态模型原理
stype=thingDesc
sgroup=-9000|编程框架.-960|动态模型.-1000|文档和教程
sicon=icons/html.png
sth_sortWeight=372
sstyledTextForInsert=parentContext.parentContext.codeText
suseTargetThingDoc=false
ssimpleBrowser=true
Sdescription=
#$@text#$@
<h1>动态模型原理</h1>

<h2 style="font-style: normal;">1.特点</h2>

<p style="margin: 0px 0px 10px;">&nbsp; &nbsp; <span style="background-color:rgb(255, 255, 255); color:rgb(51, 51, 51); float:none; font-family:helvetica neue,helvetica,arial,sans-serif; font-size:14px">动态模型是一个基于模型的面向对象的编程方法，&nbsp;简单来说它使用模型（可理解为XML）和面向对象的方法来表示和解释各种东西。</span></p>

<h2 style="font-style: normal;">2.实现原理</h2>

<p style="margin: 0px 0px 10px;">&nbsp; &nbsp; 动态模型的原理是把代码嵌入到数据里，把解释数据的程序代码作为数据的一部分。</p>

<h2 style="font-style: normal;">3.实现方法</h2>

<p style="margin: 0px 0px 10px;">&nbsp; &nbsp; 动态模型实现的方法是面向对象的方法，关键点是如何执行一个对象。</p>

<ol>
	<li>对象是模型，模型用XML这样的树形结构的数据来表示，并且每一个树节点都被当做是独立的对象。</li>
	<li>假设任何一个对象都是可执行的，并且执行一个对象是执行这个对象的run方法。</li>
	<li>有2的假设，我们可以把一个对象的某些子对象（子节点）作为它的行为，这样对象的run方法还是对象。</li>
	<li>以上执行对象的方法是递归的，如要让递归终止，那么存在某些对象（模型）是由引擎直接解释执行的。</li>
</ol>
#$@text#$@
sen_label=4.Principle
sen_group=-9000|Programing.-960|Dynamic Model.-1000|Documents
sdescriptors=xworker.swt.xworker.ThingRegistThing
sinheritDescription=false
sth_createIndex=true
sth_registThing=command|xworker.command.Root
sth_registMyChilds=false
sth_registDisabled=false
sth_mark=false
