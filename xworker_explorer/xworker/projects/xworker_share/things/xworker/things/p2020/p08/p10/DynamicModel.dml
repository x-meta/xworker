<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="DynamicModel" descriptors="xworker.swt.xworker.ThingRegistThing" label="动态模型"
     type="thingDesc" group="dynamicModel" groupDescriptor="true" icon="icons/html.png"
     th_sortWeight="-9000" simpleBrowser="true" en_label="Dynamic Model" th_createIndex="true"
     th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h1>动态模型</h1>

<h2>1.动作模型的作用</h2>

<h3>1.1.快速编程</h3>

<p>&nbsp;&nbsp;&nbsp; 使用动态模型可以实现快速编程。动态模型是建立在已有的编程基础之上的，可以把各种技术和功能包装成模型，通过模型可以简化编程，使编程变得简单快捷。</p>

<h3>1.2.工具化编程</h3>

<p>&nbsp;&nbsp;&nbsp; 动态模型用模型编程，而模型是可以分析的数据，并且用户几乎可以操控模型执行的全部过程，从而可以编写各种工具来辅助编程，也为以后的智能化编程打下了基础。</p>

<h3>1.3.框架和平台</h3>

<p>&nbsp;&nbsp;&nbsp; 使用动态模型可以把各种技术和功能整合在一起，并且使用动态模型可以实现实时编程，因此动态模型适合编写框架，也适合搭建各种平台。</p>

<h2>2.动态模型的原理</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型的核心是使用<strong>数据</strong>来编程，即使用像XML这样的树形结构的数据来编程，并通过实时解释模型来运行。</p>

<h3>2.1.面向对象</h3>

<p>&nbsp;&nbsp;&nbsp; 动态模型实现了面向对象的编程方法，它把每一个模型都当成对象，并且任何东西都用对象类表示，如类和行为等等。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;模型是像XML这样树形结构的数据，因此对象的属性可以用树节点中的属性和子节点来表示，对象的行为可以用某些子节点来表示，而类和继承等可以理解为对象之间的关系。</p>

<h3>2.2.执行对象</h3>

<p>&nbsp;&nbsp;&nbsp; 实现动态模型的关键是如何执行一个对象，动态模型采用了递归的执行方法。</p>

<ol>
	<li>要执行一个对象，是要执行对象的某个行为。</li>
	<li>对象的行为还是对象，要执行行为对象，规定执行行为对象的名字为run的方法。</li>
	<li>要执行行为对象的名字为run的方法，回到步骤2，行为对象的名字为run的方法也是行为对象。</li>
	<li>以上是递归的，要让递归能够终止，那么规定某些模型是由引擎直接解释执行的。</li>
</ol>

<h2>3.X-Meta引擎和XWorker</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型已经使用Java实现了，它称为X-Meta引擎。XWorker也是使用动态模型开发的，是动态模型的开发平台和应用平台。</p>

<p>&nbsp;&nbsp;</p>
]]></description>
</QuickFunction>