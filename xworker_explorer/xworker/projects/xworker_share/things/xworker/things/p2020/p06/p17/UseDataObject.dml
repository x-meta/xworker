<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="DbDataObjectExample" descriptors="xworker.swt.xworker.ThingRegistThing"
     label="使用数据对象" type="swtGuide" group="-6000|数据管理.-6000|数据对象.-20000|教程" icon="icons/application.png"
     en_label="Using DataObject" en_group="-6000|Data.-6000|DataObject.-20000|Tutorials"
     th_createIndex="true" th_registThing="child|xworker.doc.DocIndex">
    <SwtGuide showHeader="true">
        <Browser name="DbDataObject" simpleBrowser="true">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 数据库对应的数据对象是xworker.dataObject.db.DbDataObject，可以通过它来创建数据库数据对象。</p>

<p>&nbsp;&nbsp;&nbsp; 点击右下角的<strong>下一步</strong>按钮继续本教程。</p>
]]></description>
            <Buttons>
                <NextButton name="nextButton"></NextButton>
            </Buttons>
        </Browser>
        <BrowserComposite name="baseAttribues" label="基本属性" browserLocation="top" weights="30,70">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 数据库数据对象用于映射数据库，需要指明连接数据库的数据源和要映射的表名。</p>

<p>&nbsp;&nbsp;&nbsp; 在这里我们使用XWorker的内置数据库为例，映射XWorker的模型索引表。</p>
]]></description>
            <Composite>
                <FillLayout name="FillLayout"></FillLayout>
                <ThingForm name="thingForm" column="1">
                    <Thing>
                        <attribute name="name" group="DB" default="Things"></attribute>
                        <attribute name="tableName" label="表名" inputtype="openWindow" size="40"
                             colspan="2" group="DB" inputattrs="xworker.dataObject.swt.SelectDBTableNameDialog/@shell"
                             default="TBLTHINGS" validateOnBlur="false" allowDecimals="false"
                             allowNegative="false" en_label="TableName"></attribute>
                        <attribute name="dataSource" _xmeta_id_="dbConfigPath" label="数据源"
                             inputtype="openWindow" size="60" colspan="2" group="DB" inputattrs="xworker.swt.xworker.attributeEditor.openWins.SelectThingOpenWindow/@shell|descriptor=xworker.db.jdbc.DataSource,returnType=path"
                             default="xworker.ide.db.datasource.XWorkerDataSource"
                             validateOnBlur="false" allowDecimals="false" allowNegative="false"
                             en_label="DataSource">
                            <description><![CDATA[<p>数据源事物的路径。支持var:、ognl:、actoins:等语法格式。</p>

<p>&nbsp;</p>]]></description>
                        </attribute>
                    </Thing>
                </ThingForm>
            </Composite>
            <Buttons>
                <PreButton name="nextButton"></PreButton>
                <NextButton name="nextButton" _xmeta_id_="nextButton1"></NextButton>
            </Buttons>
        </BrowserComposite>
        <BrowserComposite name="addField" label="映射属性" browserLocation="top" weights="30,70">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 数据库数据对象的属性一般映射的是数据库表的字段。在设置属性时一般要设置对应表的字段、类型等。</p>

<p><strong>关键字</strong></p>

<p>&nbsp;&nbsp;&nbsp; 一般需要指定一个关键字属性，关键字属性对应数据库的主键字段，当执行创建和更新时，需要使用到该属性作为查询的条件。</p>
]]></description>
            <Composite>
                <FillLayout name="FillLayout"></FillLayout>
                <ThingForm name="thingForm" column="1">
                    <Thing>
                        <attribute name="name" default="id"></attribute>
                        <attribute name="fieldName" label="字段名" size="60" colspan="2" default="ID"
                             description="&lt;p&gt;对应数据库中的字段名，如果没有那么数据库的字段名默认为属性名。&lt;/p&gt;" validateOnBlur="false"
                             allowDecimals="false" allowNegative="false" en_label="FieldName"></attribute>
                        <attribute name="type" label="Type" inputtype="select" default="int"
                             description="&lt;p&gt; type of property. &lt;br /&gt;&lt;br /&gt;When the property is of type bytes and the object type, property description of the edit control from the properties of those definitions (need to provide access and set the value of the data model, see the swt's Model), when the type of object serialization to save only on the value. &lt;/ p&gt;"
                             validateOnBlur="false" allowDecimals="false" allowNegative="false"
                             zh_label="类型">
                            <zh_description><![CDATA[<p>属性的类型。<br />
<br />
当属性的类型为bytes和object类型时，属性的编辑控件由属性的描述者定义（需提供访问和设置值的数据模型，见swt的Model），当类型为object时只保存序列化的值。</p>]]></zh_description>
                            <value name="string" value="string"></value>
                            <value name="byte" value="byte"></value>
                            <value name="short" value="short"></value>
                            <value name="int" value="int"></value>
                            <value name="long" value="long"></value>
                            <value name="float" value="float"></value>
                            <value name="double" value="double"></value>
                            <value name="boolean" descriptors="xworker.lang.MetaDescriptor2/@attribute/@value"
                                 value="boolean"></value>
                            <value name="date" value="date"></value>
                            <value name="datetime" value="datetime"></value>
                            <value name="time" value="time"></value>
                            <value name="byte[]" value="byte[]"></value>
                            <value name="stream" value="stream"></value>
                        </attribute>
                        <attribute name="length" _xmeta_id_="size" descriptors="xworker.lang.MetaDescriptor2/@attribute"
                             label="长度" size="5" zh_label="长度" en_label="Length" zh_description="&lt;p&gt;属性的长度字串只是字串的长度，数字是指整数部分的长度。&lt;/p&gt;"></attribute>
                        <attribute name="key" label="关键字" inputtype="truefalse" default="true"
                             validateOnBlur="false" allowDecimals="false" allowNegative="false"
                             en_label="Keyword">
                            <description><![CDATA[<p>是否是关键字，一个数据库数据对象至少有一个关键字，否则将无法更新、删除和自动装载。</p>
<p>目前在大部分的操作里，只支持一个关键字。</p>]]></description>
                        </attribute>
                    </Thing>
                </ThingForm>
            </Composite>
            <Buttons>
                <PreButton name="nextButton"></PreButton>
                <NextButton name="nextButton" _xmeta_id_="nextButton1"></NextButton>
            </Buttons>
        </BrowserComposite>
        <BrowserComposite name="exmaple" label="示例" browserLocation="top" weights="30,70">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 下面是数据库数据对象模型的完整示例。</p>

<p>&nbsp;&nbsp;&nbsp; 在下面的示例里，QueryFormDataObject和Condition子节点是用于默认的查询的，其中QueryFormDataObject用于生成查询条件的表单，Condition是查询规则和条件。</p>
]]></description>
            <Composite>
                <FillLayout name="FillLayout"></FillLayout>
                <ThingViewer name="ThingViewer" thing="xworker.ide.db.dbindex.dataObject.Things"></ThingViewer>
            </Composite>
            <Buttons>
                <PreButton name="nextButton"></PreButton>
                <NextButton name="nextButton" _xmeta_id_="nextButton1"></NextButton>
            </Buttons>
        </BrowserComposite>
        <BrowserComposite name="editorExample" label="界面示例" browserLocation="top" weights="30,70">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 数据对象可以用在界面控件里。比如前面编写的数据对象用在数据对象编辑器里，就是下面的样子。</p>

<p>&nbsp;</p>

<p>&nbsp;</p>
]]></description>
            <Composite>
                <FillLayout name="FillLayout"></FillLayout>
                <DataObjectEditCompoiste name="DataObjectEditCompoiste" dataObject="xworker.ide.db.dbindex.dataObject.Things"></DataObjectEditCompoiste>
            </Composite>
            <Buttons>
                <PreButton name="nextButton"></PreButton>
                <NextButton name="nextButton" _xmeta_id_="nextButton1"></NextButton>
            </Buttons>
        </BrowserComposite>
        <Browser name="summary" label="总结" simpleBrowser="true">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 在本教程里我们创建了一个数据库数据对象，它映射了数据库中的一张表，并使用了编辑器控件，实现了数据库增删改查的操作。&nbsp;&nbsp;&nbsp;</p>

<p>&nbsp;&nbsp;&nbsp; 以上也展示了数据对象的两个基本功能：</p>

<ol>
	<li>映射数据实现CURD操作。</li>
	<li>数据对象可以用于生成界面。</li>
</ol>

<p>&nbsp;</p>
]]></description>
            <Buttons>
                <PreButton name="nextButton"></PreButton>
            </Buttons>
        </Browser>
    </SwtGuide>
</QuickFunction>