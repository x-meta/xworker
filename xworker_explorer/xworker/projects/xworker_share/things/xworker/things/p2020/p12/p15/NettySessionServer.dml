<?xml version="1.0" encoding="utf-8"?>

<NettyServer name="NettySessionServer" descriptors="xworker.netty.NettyServer" port="9022">
    <Handlers>
        <LengthFieldBasedFrameDecoder name="LengthFieldBasedFrameDecoder"></LengthFieldBasedFrameDecoder>
        <JsonDecoder name="JsonDecoder"></JsonDecoder>
        <ChannelInboundHandler printLog="false">
            <actions>
                <GroovyAction name="channelRead">
                    <code><![CDATA[import java.text.SimpleDateFormat;
def sf = new SimpleDateFormat("HH:mm:ss");

println msg;
if(msg.action == "regist"){
    session.setSessionId(msg.name);
    
    parentContext.serverConsole.append("session registed, name is " + msg.name);
    
    msg.put("from", "System");
    msg.put("time", sf.format(new Date()));
    msg.put("message", session.getSessionId() + " has registed!");
    session.getSessionManager().sendMessageToGroup("all", msg);
}else if(msg.action == "sendMessage"){    
    msg.put("from",  session.getSessionId());
    msg.put("time", sf.format(new Date()));
    if(msg.to == "all"){
        session.getSessionManager().sendMessageToGroup("all", msg);
    }else{
        session.getSessionManager().sendMessage(msg.to, msg);
    }
}]]></code>
                    <Variables>
                        <GetNettySession name="session" descriptors="xworker.netty.NettyActions/@GetNettySession"></GetNettySession>
                    </Variables>
                </GroovyAction>
            </actions>
        </ChannelInboundHandler>
        <LengthFieldPrepender name="LengthFieldPrepender"></LengthFieldPrepender>
        <JsonEncoder name="JsonEncoder"></JsonEncoder>
    </Handlers>
    <actions>
        <GroovyAction name="closed" code="parentContext.serverConsole.append(&quot;server closed&quot;);"></GroovyAction>
        <GroovyAction name="sessionClosed" _xmeta_id_="onSessionClosed">
            <code><![CDATA[import java.text.SimpleDateFormat;
def sf = new SimpleDateFormat("HH:mm:ss");

parentContext.serverConsole.append("session disconnected, " + session.getRemoteIp());

def msg =[:];
msg.put("from", "System");
msg.put("time", sf.format(new Date()));
msg.put("message", session.getSessionId() + " has closed!");
session.getSessionManager().sendMessageToGroup("all", msg);]]></code>
        </GroovyAction>
        <GroovyAction name="sessionConnected" _xmeta_id_="onSessionConnected">
            <code><![CDATA[session.addToGroup("all");
parentContext.serverConsole.append("session connected and add to group 'all', " + session.getRemoteIp());]]></code>
        </GroovyAction>
        <GroovyAction name="startFailure" code="parentContext.serverConsole.append(&quot;server start failure, &quot; + cause);"></GroovyAction>
        <GroovyAction name="startSuccess" code="parentContext.serverConsole.append(&quot;server start success&quot;);"></GroovyAction>
    </actions>
</NettyServer>