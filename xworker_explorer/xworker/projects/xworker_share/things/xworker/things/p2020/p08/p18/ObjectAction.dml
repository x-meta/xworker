<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="ObjectAction" descriptors="xworker.swt.xworker.ThingRegistThing" label="对象类动作"
     type="thingDesc" group="dynamicModel.-1000|Actions.commonactions.objectaction"
     groupDescriptor="true" icon="icons/html.png" th_sortWeight="30" simpleBrowser="true"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h1>对象类动作</h1>

<p>&nbsp;&nbsp;&nbsp; 对象类动作通常是具体功能的封装，因此数量众多。对象类动作模型的特点如下。</p>

<h2>1.是对象</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型是对象，有自己的属性和行为。</p>

<h2>2.self变量是自己</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类动作模型需要实现run方法，在run方法里通过self变量访问自己。要想在run方法里访问动作模型自己，模型需要继承xworker.lang.actions.SelfAction。</p>

<h2>3.通过属性和行为传参数</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型一般通过属性和行为传参数。通常默认实现是通过属性获取参数的，通过属性可以获取常量和通过表达式获取一些简单的变量等。如果通过属性获取参数满足不了需求，用户可以通过重写相关方法来自定义获取参数的方法。</p>

<h2>4.事件</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型可以有事件，事件起到类似回调的作用。比如一个对象动作是遍历文件目录下的文件，遍历到一个文件时，会触发相应的事件，用户可以通过重写事件来处理这个文件。</p>

<h2>5.语法</h2>

<p>&nbsp;&nbsp;&nbsp; 语法类的动作模型一般也是对象类的动作模型。</p>

<p>&nbsp;</p>
]]></description>
</QuickFunction>