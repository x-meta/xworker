<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="SessionExample" descriptors="xworker.swt.xworker.ThingRegistThing" type="composite"
     group="io.netty" icon="icons/application.png" th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<p>使用Java的KeyStore进行SSL的单向和双向验证的示例。</p>

<p>服务器和客户端的KeyStore和证书在XWorker的config/ssl目录下。</p>
]]></description>
    <Composite label="SessionExample">
        <FillLayout name="FillLayout"></FillLayout>
        <CTabFolder name="mainTabFolder">
            <CTabItem name="exampleTabItem" text="lang:d=演示&amp;en=Example">
                <Composite name="exampleComposite">
                    <GridLayout name="GridLayout" numColumns="3"></GridLayout>
                    <Group name="serverGroup" text="lang:d=服务器&amp;en=Server">
                        <GridData name="GridData" style="FILL_HORIZONTAL" horizontalSpan="3"></GridData>
                        <GridLayout name="GridLayout"></GridLayout>
                        <ThingForm name="serverForm" column="1">
                            <Thing>
                                <attribute name="port" label="Port" default="9020" en_label="Port"></attribute>
                            </Thing>
                        </ThingForm>
                        <StyledText name="serverStyledText" style="MULTI" H_SCROLL="true" V_SCROLL="true">
                            <Console name="serverConsole"></Console>
                            <GridData name="GridData" style="FILL_HORIZONTAL" height="100"></GridData>
                        </StyledText>
                        <Composite name="buttonComposite" _xmeta_id_="39280">
                            <GridData name="buttonCompositeGridData" _xmeta_id_="39281"
                                 style="FILL_HORIZONTAL" horizontalAlignment="END"></GridData>
                            <RowLayout name="buttonCompositeRowLayout" _xmeta_id_="39282"></RowLayout>
                            <Button name="serverButton" _xmeta_id_="39283" text="lang:d=启动&amp;en=Start">
                                <RowData name="RowData" _xmeta_id_="39284" width="80"></RowData>
                                <Listeners _xmeta_id_="39285">
                                    <Listener name="serverButtonSelection" _xmeta_id_="39286">
                                        <GroovyAction name="GroovyAction">
                                            <code><![CDATA[if(server.isStarted() == false){
    def values = serverForm.doAction("getValues", actionContext);
    server.getThing().set("port", values.port);
    
    server.start();
}else{
    server.close();
}

actions.doAction("setButtonStatus", actionContext);]]></code>
                                        </GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                        </Composite>
                    </Group>
                    <Group name="clientForomGroup" text="lang:d=客户端配置&amp;en=Client Config">
                        <GridData name="GridData" style="FILL_HORIZONTAL" horizontalSpan="3"></GridData>
                        <GridLayout name="GridLayout"></GridLayout>
                        <ThingForm name="clientForm" column="2">
                            <Thing>
                                <attribute name="host" label="Host" default="localhost"></attribute>
                                <attribute name="port" label="Port" default="9020"></attribute>
                            </Thing>
                            <GridData name="GridData" style="FILL_HORIZONTAL"></GridData>
                        </ThingForm>
                    </Group>
                    <Group name="client1Group" descriptors="xworker.swt.Widgets/@Group,xworker.swt.widgets.Group"
                         text="lang:d=客户端A&amp;en=Client A">
                        <GridLayout name="GridLayout"></GridLayout>
                        <StyledText name="clientStyledText1" _xmeta_id_="clientStyledText"
                             style="MULTI" H_SCROLL="true" V_SCROLL="true">
                            <GridData name="GridData" style="FILL_BOTH"></GridData>
                            <Console name="clientConsole1" _xmeta_id_="clientConsole"></Console>
                        </StyledText>
                        <Composite name="buttonComposite" _xmeta_id_="39553">
                            <GridData name="buttonCompositeGridData" _xmeta_id_="39554"
                                 style="FILL_HORIZONTAL" horizontalAlignment="END"></GridData>
                            <RowLayout name="buttonCompositeRowLayout" _xmeta_id_="39555"></RowLayout>
                            <Button name="clientButton1" _xmeta_id_="39556" text="lang:d=连接&amp;en=Connect">
                                <RowData name="RowData" _xmeta_id_="39557" width="80"></RowData>
                                <Listeners _xmeta_id_="39558">
                                    <Listener name="connectButtonSelection" _xmeta_id_="39559">
                                        <GroovyAction name="GroovyAction" code="actions.doAction(&quot;clientConnectOrClose&quot;, actionContext, &quot;client&quot;, client1);"></GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                            <Button name="sendMessageButton1" _xmeta_id_="39560" text="发送消息">
                                <RowData name="RowData" _xmeta_id_="39561" width="80"></RowData>
                                <Listeners _xmeta_id_="39562">
                                    <Listener name="sendMessageButtonSelection" _xmeta_id_="39563">
                                        <GroovyAction name="GroovyAction">
                                            <code><![CDATA[actionContext.g().put("sender", client1);

actions.doAction("sendMessage", actionContext);]]></code>
                                        </GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                        </Composite>
                        <GridData name="GridData" style="FILL_BOTH"></GridData>
                    </Group>
                    <Group name="client2Group" descriptors="xworker.swt.Widgets/@Group,xworker.swt.widgets.Group"
                         text="lang:d=客户端B&amp;en=Client B">
                        <GridLayout name="GridLayout"></GridLayout>
                        <StyledText name="clientStyledText2" _xmeta_id_="clientStyledText"
                             style="MULTI" H_SCROLL="true" V_SCROLL="true">
                            <GridData name="GridData" style="FILL_BOTH"></GridData>
                            <Console name="clientConsole2" _xmeta_id_="clientConsole"></Console>
                        </StyledText>
                        <Composite name="buttonComposite" _xmeta_id_="39553">
                            <GridData name="buttonCompositeGridData" _xmeta_id_="39554"
                                 style="FILL_HORIZONTAL" horizontalAlignment="END"></GridData>
                            <RowLayout name="buttonCompositeRowLayout" _xmeta_id_="39555"></RowLayout>
                            <Button name="clientButton2" _xmeta_id_="39556" text="lang:d=连接&amp;en=Connect">
                                <RowData name="RowData" _xmeta_id_="39557" width="80"></RowData>
                                <Listeners _xmeta_id_="39558">
                                    <Listener name="connectButtonSelection" _xmeta_id_="39559">
                                        <GroovyAction name="GroovyAction" code="actions.doAction(&quot;clientConnectOrClose&quot;, actionContext, &quot;client&quot;, client2);"></GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                            <Button name="sendMessageButton2" _xmeta_id_="39560" text="发送消息">
                                <RowData name="RowData" _xmeta_id_="39561" width="80"></RowData>
                                <Listeners _xmeta_id_="39562">
                                    <Listener name="sendMessageButtonSelection" _xmeta_id_="39563">
                                        <GroovyAction name="GroovyAction">
                                            <code><![CDATA[actionContext.g().put("sender", client2);

actions.doAction("sendMessage", actionContext);]]></code>
                                        </GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                        </Composite>
                        <GridData name="GridData" style="FILL_BOTH"></GridData>
                    </Group>
                    <Group name="client3Group" descriptors="xworker.swt.Widgets/@Group,xworker.swt.widgets.Group"
                         text="lang:d=客户端C&amp;en=Client C">
                        <GridLayout name="GridLayout"></GridLayout>
                        <StyledText name="clientStyledText3" _xmeta_id_="clientStyledText"
                             style="MULTI" H_SCROLL="true" V_SCROLL="true">
                            <GridData name="GridData" style="FILL_BOTH"></GridData>
                            <Console name="clientConsole3" _xmeta_id_="clientConsole"></Console>
                        </StyledText>
                        <Composite name="buttonComposite" _xmeta_id_="39553">
                            <GridData name="buttonCompositeGridData" _xmeta_id_="39554"
                                 style="FILL_HORIZONTAL" horizontalAlignment="END"></GridData>
                            <RowLayout name="buttonCompositeRowLayout" _xmeta_id_="39555"></RowLayout>
                            <Button name="clientButton3" _xmeta_id_="39556" text="lang:d=连接&amp;en=Connect">
                                <RowData name="RowData" _xmeta_id_="39557" width="80"></RowData>
                                <Listeners _xmeta_id_="39558">
                                    <Listener name="connectButtonSelection" _xmeta_id_="39559">
                                        <GroovyAction name="GroovyAction" code="actions.doAction(&quot;clientConnectOrClose&quot;, actionContext, &quot;client&quot;, client3);"></GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                            <Button name="sendMessageButton3" _xmeta_id_="39560" text="发送消息">
                                <RowData name="RowData" _xmeta_id_="39561" width="80"></RowData>
                                <Listeners _xmeta_id_="39562">
                                    <Listener name="sendMessageButtonSelection" _xmeta_id_="39563">
                                        <GroovyAction name="GroovyAction">
                                            <code><![CDATA[actionContext.g().put("sender", client3);

actions.doAction("sendMessage", actionContext);]]></code>
                                        </GroovyAction>
                                    </Listener>
                                </Listeners>
                            </Button>
                        </Composite>
                        <GridData name="GridData" style="FILL_BOTH"></GridData>
                    </Group>
                </Composite>
            </CTabItem>
            <Event name="onDispose">
                <GroovyAction name="GroovyAction">
                    <code><![CDATA[server.close();
client1.close();
client2.close();
client3.close();]]></code>
                </GroovyAction>
            </Event>
        </CTabFolder>
        <ActionContainer name="actions">
            <GroovyAction name="clientConnectOrClose">
                <code><![CDATA[if(client.isConnected() == false){
    def values = clientForm.doAction("getValues", actionContext);
    client.getThing().set("host", values.host);
    client.getThing().set("port", values.port);
    
    client.connect();
}else{
    client.close();
}]]></code>
                <ins>
                    <param name="client" type="xworker.io.netty.NettyClient"></param>
                </ins>
            </GroovyAction>
            <ThingFormDialog name="sendMessage" descriptors="xworker.swt.actions.DialogActions/@ThingFormDialog"
                 title="lang:d=发送消息&amp;en=Send Message" shell="ognl:mainTabFolder.getShell()">
                <Descriptor many="" editCols="" modifier="">
                    <attribute name="to" inputtype="select" default="all">
                        <value name="all" value="all"></value>
                        <value name="A" value="A"></value>
                        <value name="B" value="B"></value>
                        <value name="C" value="C"></value>
                    </attribute>
                    <attribute name="message" size="60" default="Hello world!"></attribute>
                </Descriptor>
                <actions>
                    <GroovyAction name="ok">
                        <code><![CDATA[values.put("action", "sendMessage");
sender.sendMessage(values);]]></code>
                    </GroovyAction>
                </actions>
            </ThingFormDialog>
        </ActionContainer>
        <VariablesDescs descriptors="xworker.lang.MetaThing/@VariablesDesc">
            <Variable name="server" varName="server" className="xworker.io.netty.NettyServer"></Variable>
            <Variable name="client1" varName="client1" className="xworker.io.netty.NettyClient"></Variable>
            <Variable name="client2" _xmeta_id_="client11" varName="client2" className="xworker.io.netty.NettyClient"></Variable>
            <Variable name="client3" _xmeta_id_="client12" varName="client3" className="xworker.io.netty.NettyClient"></Variable>
        </VariablesDescs>
        <Code name="init" _xmeta_id_="init1">
            <code><![CDATA[import org.xmeta.util.UtilString;

def server = world.getThing("xworker.things.p2020.p12.p15.NettySessionServer").doAction("getNettyServer", actionContext);
def client1 = world.getThing("xworker.things.p2020.p12.p15.NettySessionClient").doAction("getNettyClient", actionContext);
def client2 = world.getThing("xworker.things.p2020.p12.p15.NettySessionClient").doAction("getNettyClient", actionContext);
def client3 = world.getThing("xworker.things.p2020.p12.p15.NettySessionClient").doAction("getNettyClient", actionContext);

server.getActionContext().g().put("parentContext", actionContext);
client1.getActionContext().g().put("name", "A");
client2.getActionContext().g().put("name", "B");
client3.getActionContext().g().put("name", "C");
client1.getActionContext().g().put("clientConsole", clientConsole1);
client2.getActionContext().g().put("clientConsole", clientConsole2);
client3.getActionContext().g().put("clientConsole", clientConsole3);

actionContext.g().put("server", server);
actionContext.g().put("client1", client1);
actionContext.g().put("client2", client2);
actionContext.g().put("client3", client3);

serverForm.doAction("setValues", actionContext, "values", ["port": server.getThing().get("port")]);
clientForm.doAction("setValues", actionContext, "values", 
   ["host":client1.getThing().get("host"), "port":client1.getThing().get("port")]);]]></code>
        </Code>
        <RunAction>
            <Task schedule="true" delay="1" period="1" timeUnit="SECONDS">
                <actions>
                    <DisplayExec name="doTask" _xmeta_id_="setButtonStatus1" descriptors="xworker.swt.actions.DisplayActions/@DisplayExec"
                         widgetForDisplay="ognl:mainTabFolder.getShell()" cancelTaskOnWidgetDisposed="true">
                        <actions>
                            <GroovyAction name="doAction" _xmeta_id_="setButtonStatus">
                                <code><![CDATA[import org.xmeta.util.UtilString;

if(serverButton.isDisposed()){
    return;
}

if(server.isStarted()){
    serverButton.setText(UtilString.getString("lang:d=停止&en=Stop", actionContext));
}else{
    serverButton.setText(UtilString.getString("lang:d=启动&en=Start", actionContext));
}

setClientButton(client1, clientButton1, sendMessageButton1);
setClientButton(client2, clientButton2, sendMessageButton2);
setClientButton(client3, clientButton3, sendMessageButton3);

def setClientButton(client, clientButton, sendMessageButton){
    if(!client.isConnected()){
        clientButton.setText(UtilString.getString("lang:d=连接&en=Connect", actionContext));
        sendMessageButton.setEnabled(false);
    }else{
        clientButton.setText(UtilString.getString("lang:d=断开&en=Disconnect", actionContext));
        sendMessageButton.setEnabled(true);
    }
}]]></code>
                            </GroovyAction>
                        </actions>
                    </DisplayExec>
                </actions>
            </Task>
        </RunAction>
    </Composite>
</QuickFunction>