<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="ActionIntroduce" descriptors="xworker.swt.xworker.ThingRegistThing" label="动作简介"
     type="swtGuide" group="-10000|动态模型.-9800|动作" icon="icons/application.png" en_label="Action Introduce"
     en_group="-1000|Dynamic Model.-9800|Action" th_createIndex="true" th_registThing="child|xworker.doc.DocIndex">
    <SwtGuide showHeader="true">
        <SimpleBrowser name="introduce" label="动作简介">
            <description><![CDATA[<p>&nbsp;&nbsp;&nbsp; 动作相当于函数和方法，是可以执行的。</p>

<p><strong>动作也是模型</strong></p>

<p>&nbsp;&nbsp;&nbsp; 动作也是模型，动态模型规定任何模型都可以转化为动作。</p>

<pre class="brush:as3;">
import org.xmeta.Thing;
import org.xmeta.Action;

//获取动作模型
Thing thing = world.getThing(&quot;xworker.example.action._actions.HelloWorld&quot;);

//转化为动作
Action action = thing.getAction();</pre>

<p><strong>动作可以执行</strong></p>

<pre class="brush:groovy;">
//ActionContext是动作执行的上下文，参看动作上下文的教程
action.run(new ActionContext());</pre>

<p><strong>可以向动作传入参数</strong></p>

<pre class="brush:groovy;">
//通过数组传参数
action.run(new ActionContext(), &quot;name&quot;, &quot;zhangsan&quot;, &quot;age&quot;, 10...);

//通过Map传参数
action.run(new ActionContext(),  params: Map&lt;String,Object&gt;);</pre>

<p><strong>总结</strong></p>

<p>&nbsp;&nbsp;&nbsp; 可以看到，动作也是模型，动作起到函数和方法的作用。</p>
]]></description>
        </SimpleBrowser>
    </SwtGuide>
</QuickFunction>