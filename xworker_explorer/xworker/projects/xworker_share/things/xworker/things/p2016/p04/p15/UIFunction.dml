^1500609794038
@
sname
UIFunction
slabel
函数交互函数式编程
stype
thingDesc
sgroup
-9000|编程框架.400|交互式编程
sicon
icons/html.png
sstyledTextForInsert
parentContext.parentContext.codeText
Sdescription
#$@text#$@
<h1>函数交互式编程</h1>

<h2>1.简介</h2>

<p>&nbsp;&nbsp;&nbsp; 函数交互式编程是一种确定目标，然后通过选择各种实现来实现编程的方法。</p>

<h2>2.函数交互式编程的原理</h2>

<p>&nbsp;&nbsp;&nbsp; 在函数交互式编程里目标就是函数，一个函数可以有多个参数，而函数要能够执行则需要设置其参数，而设置参数的方法就是为参数设置一个函数，而参数的函数可能也有参数，因此需要递归设置下去，直到某个参数的函数是没有参数为止。当所有的函数及其参数设置完毕后，整个函数就可以执行了。</p>

<p>&nbsp;&nbsp;&nbsp; 以上方法有点像函数式编程，函数的参数也是函数，另外这里也允许函数是UI函数，比如采集用户数据的函数等，所以执行的过程中会有UI操作，因此最后起名为函数交互式编程。</p>

<h2>3.函数规范</h2>

<p>&nbsp;&nbsp;&nbsp; 一个函数可以用xworker.lang.function.Function来编写，需要实现doFunction方法。</p>

<h2>4.注册新的函数模型</h2>

<p>&nbsp;&nbsp;&nbsp; 新的函数模型可以以child的方式注册到xworker.lang.function.Functions模型下。</p>

<h2>5.注册函数实例</h2>

<p>&nbsp;&nbsp;&nbsp; 函数实例模型可以以child的方式注册到模型下。</p>
#$@text#$@
sen_group
-9000|Programing.400|FunctionUI
sdescriptors
xworker.swt.xworker.ThingRegistThing
sinheritDescription
false
sth_createIndex
true
sth_registThing
command|xworker.command.Root
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
