<?xml version="1.0" encoding="utf-8"?>

<QuickFunction name="SWTLayoutIntroduce" descriptors="xworker.swt.xworker.ThingRegistThing"
     label="Layout" type="thingDesc" group="xworker.-800|SWT.-10000|Introduce.100|Layout"
     groupDescriptor="true" icon="icons/html.png" th_sortWeight="-700" simpleBrowser="true"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">
    <description><![CDATA[<h2>Layout</h2>

<p>&nbsp;&nbsp;&nbsp; Shell是一个容器，可以添加各种控件，如何展示这些控件，控件的大小和位置等如何确定，这是Layout作用。</p>

<p>&nbsp;&nbsp;&nbsp; SWT下Layout不是很多，常用的有：</p>

<ul>
	<li><strong>FillLayout</strong><br />
	让子控件平均填满父容器。<br />
	&nbsp;</li>
	<li><strong>RowLayout</strong><br />
	按水平或垂直方向依次排放子控件。&nbsp;&nbsp;<br />
	&nbsp;</li>
	<li><strong>GridLayout</strong><br />
	单元格布局，子控件可以房子一个单元格中，也可以跨行跨列等。和HTML中的Table布局类似。<br />
	&nbsp;</li>
	<li><strong>StackLayout</strong><br />
	栈布局，只显示栈顶层的控件。<br />
	&nbsp;</li>
	<li><strong>FormLayout</strong><br />
	用的比较少。</li>
</ul>

<h3>学习Layout</h3>

<p>&nbsp;&nbsp;&nbsp; 可以选择相应Layout的示例，Layout示例大多是可交互的。</p>

<p>&nbsp;&nbsp;&nbsp;</p>
]]></description>
</QuickFunction>