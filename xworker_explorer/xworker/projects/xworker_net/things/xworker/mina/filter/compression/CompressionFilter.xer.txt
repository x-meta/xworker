@xworker.mina.filter.compression.CompressionFilter
sname
CompressionFilter
slabel
CompressionFilter
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p>An <a title="interface in org.apache.mina.core.filterchain" href="http://mina.apache.org/report/trunk/apidocs/org/apache/mina/core/filterchain/IoFilter.html"><code>IoFilter</code></a> which compresses all data using <a href="http://www.jcraft.com/jzlib/">JZlib</a>. Support for the LZW (DLCZ) algorithm is also planned.</p>
<p>This filter only supports compression using the <tt>PARTIAL FLUSH</tt> method, since that is the only method useful when doing stream level compression.</p>
<p>This filter supports compression/decompression of the input and output channels selectively. It can also be enabled/disabled on the fly.</p>
<p>This filter does not discard the zlib objects, keeping them around for the entire life of the filter. This is because the zlib dictionary needs to be built up over time, which is used during compression and decompression. Over time, as repetitive data is sent over the wire, the compression efficiency steadily increases.</p>
<p>Note that the zlib header is written only once. It is not necessary that the data received after processing by this filter may not be complete due to packet fragmentation.</p>
<p>It goes without saying that the other end of this stream should also have a compatible compressor/decompressor using the same algorithm.</p>
#$@text#$@
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@actions/@create
sname
create
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import org.apache.mina.filter.compression.CompressionFilter;

boolean compressInbound = self.getBoolean("compressInbound");
boolean compressOutboun = self.getBoolean("compressOutbound");
int compressionLevel =  CompressionFilter.COMPRESSION_DEFAULT;
switch(self.getString("compressionLevel")){
    case "COMPRESSION_DEFAULT":
        compressionLevel =  CompressionFilter.COMPRESSION_DEFAULT;
        break;
    case "COMPRESSION_MAX":
        compressionLevel =  CompressionFilter.COMPRESSION_MAX;
        break;
    case "COMPRESSION_MIN":
        compressionLevel =  CompressionFilter.COMPRESSION_MIN;
        break;
    case "COMPRESSION_NONE":
        compressionLevel =  CompressionFilter.COMPRESSION_NONE;
        break;
    
}
def filter = new CompressionFilter(compressInbound, compressOutboun, compressionLevel);

actionContext.getScope(0).put(self.metadata.name, filter);
if(actionContext.get("parent") != null){
    parent.getFilterChain().addLast(self.metadata.name, filter);
}
return filter;
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@name
sname
name
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@label
sname
label
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressInbound
sname
compressInbound
sinputtype
truefalse
sreadOnly
false
sdefault
true
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressOutbound
sname
compressOutbound
sinputtype
truefalse
sreadOnly
false
sdefault
true
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressionLevel
sname
compressionLevel
sinputtype
select
sreadOnly
false
sdefault
COMPRESSION_DEFAULT
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressionLevel/@COMPRESSION_DEFAULT
sname
COMPRESSION_DEFAULT
slabel
COMPRESSION_DEFAULT
svalue
COMPRESSION_DEFAULT
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressionLevel/@COMPRESSION_MAX
sname
COMPRESSION_MAX
slabel
COMPRESSION_MAX
svalue
COMPRESSION_MAX
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressionLevel/@COMPRESSION_MIN
sname
COMPRESSION_MIN
slabel
COMPRESSION_MIN
svalue
COMPRESSION_MIN
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.mina.filter.compression.CompressionFilter/@compressionLevel/@COMPRESSION_NONE
sname
COMPRESSION_NONE
slabel
COMPRESSION_NONE
svalue
COMPRESSION_NONE
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
