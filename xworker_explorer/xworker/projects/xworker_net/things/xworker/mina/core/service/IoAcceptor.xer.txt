@xworker.mina.core.service.IoAcceptor
sname
IoAcceptor
slabel
IoAcceptor
sdescriptors
xworker.lang.MetaDescriptor3
sextends
xworker.mina.core.service.IoService
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p>每一个IoAcceptor应该只有一个实例，用该事物的路径保存到world的data中。</p>
<p>继承的Connector应该实现createAcceptor方法。</p>
#$@text#$@
sid
IoAcceptor
@xworker.mina.core.service.IoAcceptor/@actions
sname
actions
sid
actions
slabel
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
@xworker.mina.core.service.IoAcceptor/@actions/@create
sname
create
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
//清除原先的实例
def acceptor = world.getData(self.metadata.path);
if(acceptor != null){
    acceptor.unbind();
    acceptor.dispose();
}

//创建实例
acceptor = self.doAction("createAcceptor", actionContext);
if(acceptor == null){
    return null;
}

world.setData(self.metadata.path, acceptor);
self.doAction("init", actionContext);

return acceptor;
#$@text#$@
sid
create
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions/@init
sname
init
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import java.net.SocketAddress;

def acceptor = world.getData(self.metadata.path);
if(acceptor == null){
    return null;
}

//IoService的初始化方法
def action = world.getAction("xworker.mina.core.service.IoService/@actions/@init");
try{
    def bindings = actionContext.push(null);
    bindings.put("service", acceptor);
    action.run(actionContext);
}finally{
    actionContext.pop();
}

acceptor.setCloseOnDeactivation(self.getBoolean("closeOnDeactivation"));

//本地端口
def addresses = [];
for(localAddresses in self.get("localAddresses@")){
    for(child in localAddresses.getChilds()){
        def address = child.doAction("create", actionContext);
        if(address instanceof SocketAddress){
            addresses.add(address);
        }
    }
}
if(addresses.size() > 0){
    acceptor.setDefaultLocalAddresses(addresses);
}

if(self.getBoolean("autobind")){
    acceptor.bind();
}
#$@text#$@
sid
init
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions/@bind
sname
bind
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def acceptor = world.getData(self.metadata.path);
if(acceptor != null){
    acceptor.bind();
}
#$@text#$@
sid
bind
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions/@unbind
sname
unbind
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def acceptor = world.getData(self.metadata.path);
if(acceptor != null){
    acceptor.unbind();
}
#$@text#$@
sid
unbind
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions/@dispose
sname
dispose
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def acceptor = world.getData(self.metadata.path);
if(acceptor != null){
    acceptor.unbind();
    acceptor.dispose();
    
    world.setData(self.metadata.path, null);
}
#$@text#$@
sid
dispose
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions1
sname
menuActions
sid
actions1
slabel
menuActions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
@xworker.mina.core.service.IoAcceptor/@actions1/@start
sname
start
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import org.xmeta.ActionContext;

def acceptor = world.getData(thing.metadata.path);
if(acceptor != null){
    log.info("Server already stated");
    return;
}else{
    def ac = new ActionContext();
    ac.put("parentContext", actionContext);
    acceptor = thing.doAction("create", ac);
    if(self.getBoolean("autobind") == false){
        acceptor.bind();
    }
    
    log.info("Server started");
}
#$@text#$@
sid
start
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@actions1/@stop
sname
stop
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
thing.doAction("dispose", actionContext);

log.info("Server stoped");
#$@text#$@
sid
stop
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.mina.core.service.IoAcceptor/@autobind
sname
autobind
sinputtype
truefalse
sgroup
IoAcceptor
sreadOnly
false
sdefault
true
sinheritDescription
false
sdescription
<p>是否在init（初始化）时自动绑定端口。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sid
autobind
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
@xworker.mina.core.service.IoAcceptor/@closeOnDeactivation
sname
closeOnDeactivation
sinputtype
truefalse
sgroup
IoAcceptor
sreadOnly
false
sdefault
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sid
closeOnDeactivation
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
@xworker.mina.core.service.IoAcceptor/@localAddresses
sname
localAddresses
sdescriptors
xworker.lang.MetaDescriptor3/@thing
sextends
xworker.java.net.SocketAddresses
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
sdescription
<p>默认要绑定的地址。</p>
sid
localAddresses
@xworker.mina.core.service.IoAcceptor/@description
sname
description
sinputtype
html
scolspan
2
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sid
description
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
@xworker.mina.core.service.IoAcceptor/@sswtMenus
sname
sswtMenus
sid
sswtMenus
slabel
sswtMenus
sdescriptors
xworker.lang.MetaDescriptor3/@swtMenus
@xworker.mina.core.service.IoAcceptor/@sswtMenus/@menuDefine
sname
menuDefine
sid
menuDefine
slabel
menuDefine
sdescriptors
xworker.lang.MetaDescriptor3/@swtMenus/@menuDefine
@xworker.mina.core.service.IoAcceptor/@sswtMenus/@menuDefine/@IoAcceptor
sname
IoAcceptor
slabel
IoAcceptor
sid
IoAcceptor
sdescriptors
xworker.lang.ThingMenu/@menuDefine/@menu
@xworker.mina.core.service.IoAcceptor/@sswtMenus/@menuSetting
sname
menuSetting
stype
data
smenuType
IoAcceptor
sid
menuSetting
slabel
menuSetting
sdescriptors
xworker.lang.MetaDescriptor3/@swtMenus/@menuSetting
@xworker.mina.core.service.IoAcceptor/@sswtMenus/@menuSetting/@start
sname
start
slabel
Start
surl
xworker.mina.core.service.IoAcceptor/@actions1/@start
sisSplit
false
sattachParam
true
sid
start
sdescriptors
xworker.lang.ThingMenu/@menuSetting/@menu
@xworker.mina.core.service.IoAcceptor/@sswtMenus/@menuSetting/@menu
sname
menu
slabel
Stop
surl
xworker.mina.core.service.IoAcceptor/@actions1/@stop
sisSplit
false
sattachParam
true
sid
menu
sdescriptors
xworker.lang.ThingMenu/@menuSetting/@menu
