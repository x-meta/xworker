^1399737100920
@
sname
CoderActions
slabel
CoderActions
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
sth_createIndex
false
@/@Encode
sname
Encode
sdescriptors
xworker.lang.MetaDescriptor3/@thing
sextends
xworker.lang.actions.SelfAction
smany
true
seditCols
2
sinitialization
false
sgroup
io.codec
smodifier
public
sinheritDescription
false
sdescription
<p>调用Codec编码数据。</p>
sth_createIndex
true
sth_registThing
child|xworker.lang.actions.Actions
@/@Encode/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
@/@Encode/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import ognl.Ognl;

//codec事物
if(self.codecPath == null || self.codecPath == ""){
    log.warn("CoderActions.Ecnode: codecPath is null");
    return null;
}
def codec = world.getThing(Ognl.getValue(self.codecPath, actionContext));
if(codec == null){
    log.warn("CoderActions.Encode: codec is null, codecPath=" + self.codecPath);
}

//要编码的数据
if(self.inputVarName == null || self.inputVarName == ""){
    log.warn("CoderActions.Encode: inputVarName is null");
    return null;
}
def inputVar = Ognl.getValue(self.inputVarName, actionContext);
if(inputVar == null){
    log.warn("CoderActions.Encode: inputVar is null, inputVarName=" + self.inputVarName);
    return null;
}

//执行编码
def output = codec.doAction("startEncode", actionContext, ["data": inputVar]);

if(self.outputVarName != null && self.outputVarName != ""){
    def bindings = self.doAction("getVarScope", actionContext);
    if(bindings != null){
        bindings.put(self.outputVarName, output);
    }
}

return output;
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@/@Encode/@name
sname
name
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Encode/@label
sname
label
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Encode/@codecPath
sname
codecPath
sinputtype
openWindow
ssize
60
scolspan
2
sinputattrs
xworker.lang.attributeEditors.openWins.SelectThingOpenWindow/@shell|descriptor=xworkercodecCoder,returnType=path
sreadOnly
false
sinheritDescription
false
sdescription
<p>使用Ognl表达式从actionContext中取，如果是常量字符串，那么需要用半角引号&quot;括起来。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Encode/@inputVarName
sname
inputVarName
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Encode/@outputVarName
sname
outputVarName
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Decode
sname
Decode
sdescriptors
xworker.lang.MetaDescriptor3/@thing
sextends
xworker.lang.actions.SelfAction
smany
true
seditCols
2
sinitialization
false
sgroup
io.codec
smodifier
public
sinheritDescription
false
sdescription
<p>调用Codec解码数据。</p>
sth_createIndex
true
sth_registThing
child|xworker.lang.actions.Actions
@/@Decode/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
@/@Decode/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import ognl.Ognl;

import org.apache.mina.core.buffer.IoBuffer;
import java.nio.ByteBuffer;

//codec事物
if(self.codecPath == null || self.codecPath == ""){
    log.warn("CoderActions.Decode: codecPath is null");
    return null;
}
def codec = world.getThing(Ognl.getValue(self.codecPath, actionContext));
if(codec == null){
    log.warn("CoderActions.Decode: codec is null, codecPath=" + self.codecPath);
}

//数据流
if(self.inputVarName == null || self.inputVarName == ""){
    log.warn("CoderActions.Decode: inputVarName is null");
    return null;
}
def inputVar = Ognl.getValue(self.inputVarName, actionContext);
if(inputVar == null){
    log.warn("CoderActions.Decode: inputVar is null, inputVarName=" + self.inputVarName);
    return null;
}

def buffer = inputVar;
if(inputVar instanceof byte[]){
    buffer = IoBuffer.wrap(inputVar);
}else if(inputVar instanceof ByteBuffer){  
    buffer = IoBuffer.warp(inputVar);
}else if(inputVar instanceof IoBuffer){    
}else{
    log.warn("CodeAction.Decode: not support data source: " + inputVar.getClass());
    return null;
}

//执行解码
def output = codec.doAction("startDecode", actionContext, ["buffer": buffer]);

if(self.outputVarName != null && self.outputVarName != ""){
    def bindings = self.doAction("getVarScope", actionContext);
    if(bindings != null){
        bindings.put(self.outputVarName, output);
    }
}

return output;
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@/@Decode/@name
sname
name
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Decode/@label
sname
label
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Decode/@codecPath
sname
codecPath
sinputtype
openWindow
ssize
60
scolspan
2
sinputattrs
xworker.lang.attributeEditors.openWins.SelectThingOpenWindow/@shell|descriptor=xworkercodecCoder,returnType=path
sreadOnly
false
sinheritDescription
false
sdescription
<p>使用Ognl表达式从actionContext中取，如果是常量字符串，那么需要用半角引号&quot;括起来。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Decode/@inputVarName
sname
inputVarName
sreadOnly
false
sinheritDescription
false
sdescription
<p>源可以使byte[]，ByteBuffer或IoBuffer。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@/@Decode/@outputVarName
sname
outputVarName
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
