@xworker.codec.attribute.StringCoder
sname
StringCoder
slabel
StringCoder
sdescriptors
xworker.lang.MetaDescriptor3
sextends
xworker.codec.Coder
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@actions/@encode
sname
encode
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def bytes = null;
def str = data;
if(self.propertyPath == null || self.propertyPath == ""){
    str = self.getString("defaultValue");
}
if(str != null){
    str = str.toString();
    if(self.charset != null && self.charset != ""){
        bytes = str.getBytes(self.charset);
    }else{
        bytes = str.getBytes();
    }
    
    if(self.getBoolean("removeBOM")){
        if(bytes.length >= 3 && (bytes[0] & 0xFF) == 0xEF && (bytes[1] & 0xFF) == 0xBB && (bytes[2] & 0xFF) == 0xBF){
            byte[] bs = new byte[bytes.length - 3];
            System.arraycopy(bytes, 3, bs, 0, bs.length);
            bytes = bs;
        }else if(bytes.length >= 2 && (bytes[0] & 0xFF) == 0xFE && (bytes[1] & 0xFF) == 0xFF){
            byte[] bs = new byte[bytes.length - 2];
            System.arraycopy(bytes, 2, bs, 0, bs.length);
            bytes = bs;
        }else if(bytes.length >= 2 && (bytes[0] & 0xFF) == 0xFF && (bytes[1] & 0xFF) == 0xFE){
            byte[] bs = new byte[bytes.length - 2];
            System.arraycopy(bytes, 2, bs, 0, bs.length);
            bytes = bs;
        }else if(bytes.length >= 4 && (bytes[0] & 0xFF) == 0xFF && (bytes[1] & 0xFF) == 0xFE && (bytes[2] & 0xFF) == 0 && (bytes[3] & 0xFF) == 0){
            byte[] bs = new byte[bytes.length - 4];
            System.arraycopy(bytes, 4, bs, 0, bs.length);
            bytes = bs;
        }else if(bytes.length >= 4 && (bytes[2] & 0xFF) == 0xFE && (bytes[3] & 0xFF) == 0xFF && (bytes[0] & 0xFF) == 0 && (bytes[1] & 0xFF) == 0){
            byte[] bs = new byte[bytes.length - 4];
            System.arraycopy(bytes, 4, bs, 0, bs.length);
            bytes = bs;
        }
    }
}else{
    bytes = new byte[0];
}
def size = bytes.length;
switch(self.sizeType){
    case "byte":
        size = size & 0xFF;
        buffer.put((byte) size);
        break;
    case "int":
        buffer.putInt(size);
        break;
    default:
        size = size & 0xFFFF;
        buffer.putShort((short) size);
        break;
}

buffer.put(bytes);
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@actions/@decode
sname
decode
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def size = 0;
switch(self.sizeType){
    case "byte":
        size = buffer.get();
        break;
    case "int":
        size = buffer.getInt();
        break;
    default:
        size = buffer.getShort();
        break;
}

def bytes = new byte[size];
buffer.get(bytes);

if(self.charset != null && self.charset != ""){
    return new String(bytes, self.charset);
}else{
    return new String(bytes);
}
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@name
sname
name
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@label
sname
label
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@charset
sname
charset
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@sizeType
sname
sizeType
sinputtype
select
sreadOnly
false
sdefault
short
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@sizeType/@byte
sname
byte
slabel
byte
svalue
byte
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@sizeType/@short
sname
short
slabel
short
svalue
short
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@sizeType/@int
sname
int
slabel
int
svalue
int
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.codec.attribute.StringCoder/@removeBOM
sname
removeBOM
sinputtype
truefalse
sreadOnly
false
sdefault
false
sinheritDescription
false
Sdescription
#$@text#$@
<p>是否移除unicode的BOM。</p>
<p>
<table border="1">
    <tbody>
        <tr>
            <td><b>Encoding</b></td>
            <td><b>Representation (hexadecimal)</b></td>
            <td><b>Representation (decimal)</b></td>
        </tr>
        <tr>
            <td>UTF-8</td>
            <td>EF BB BF</td>
            <td>239 187 191</td>
        </tr>
        <tr>
            <td>UTF-16 (BE)</td>
            <td>FE FF</td>
            <td>254 255</td>
        </tr>
        <tr>
            <td>UTF-16 (LE)</td>
            <td>FF FE</td>
            <td>255 254</td>
        </tr>
        <tr>
            <td>UTF-32 (BE)</td>
            <td>00 00 FE FF</td>
            <td>0 0 254 255</td>
        </tr>
        <tr>
            <td>UTF-32 (LE)</td>
            <td>FF FE 00 00</td>
            <td>255 254 0 0</td>
        </tr>
    </tbody>
</table>
</p>
#$@text#$@
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
