^1557107449521
@
sname
Coder
slabel
Coder
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p>把Data编码（encode）成byte[]，把byte[]解码成Data。</p>
<p>startEncode和startDecode方法是调用编码和解码的方法，encode和decode是具体实现编码和解码的方法。</p>
<p>编码和解码时有两个临时变量，rootData和data，rootData是编码解码时的根数据，data是当前节点的数据，比如编码一个List，List是rootData，遍历List中的元素时这个元素是data。</p>
#$@text#$@
sth_createIndex
false
sid
Coder
  @/@actions
  sname
  actions
  sdescriptors
  xworker.lang.MetaDescriptor3/@actions
  sth_createIndex
  false
  sid
  actions
    @/@actions/@getData
    sname
    getData
    sisSynchronized
    false
    sthrowException
    true
    suseOtherAction
    false
    svarScope
    Local
    sdisableGlobalContext
    false
    Scode
#$@text#$@
import ognl.Ognl;

def dataSource = actionContext;
if(self.dataSource != null && self.dataSource != ""){
    dataSource = Ognl.getValue(self.dataSource, actionContext);
}

if(self.propertyPath != null && self.propertyPath != ""){
    return Ognl.getValue(self.propertyPath);
}else{
    return dataSource;
}
#$@text#$@
    sdescriptors
    xworker.lang.actions.Actions/@GroovyAction
    sth_createIndex
    false
    sid
    getData
    @/@actions/@encode
    sname
    encode
    sisSynchronized
    false
    sthrowException
    true
    suseOtherAction
    false
    svarScope
    Local
    sdisableGlobalContext
    false
    Scode
#$@text#$@
import ognl.Ognl;

//编码子节点
def data = actionContext.get("data");
for(child in self.getChilds()){
    if(child.propertyPath != null && child.propertyPath != ""){
        child.doAction("encode", actionContext, ["data": Ognl.getValue(child.propertyPath, data)]);
    }else{
        child.doAction("encode", actionContext, ["data":data]);
    }
}
#$@text#$@
    sdescription
    <p>默认实现是编码子节点。</p>
    sdescriptors
    xworker.lang.actions.Actions/@GroovyAction
    sth_createIndex
    false
    sid
    encode
    @/@actions/@decode
    sname
    decode
    sisSynchronized
    false
    sthrowException
    true
    suseOtherAction
    false
    svarScope
    Local
    sdisableGlobalContext
    false
    Scode
#$@text#$@
import ognl.Ognl;

//要编码的数据
def data = self.doAction("newInstance", actionContext);
try{
    def bindings = actionContext.push(null);
    if(actionContext.get("rootData") == null){
        bindings.put("rootData", data);
    }
    bindings.put("data", data);
    for(child in self.getChilds()){
        def value = child.doAction("decode", actionContext);
        if(child.propertyPath != null && child.propertyPath != ""){
            Ognl.setValue(child.propertyPath, data, value);
        }
    }
}finally{
    actionContext.pop();
}

return data;
#$@text#$@
    sdescription
    <p>默认实现一个集合事物的解码，如Map或对象等。</p>
    sdescriptors
    xworker.lang.actions.Actions/@GroovyAction
    sth_createIndex
    false
    sid
    decode
    @/@actions/@newInstance
    sname
    newInstance
    sdescription
    <p>创建一个数据的实例，Map和对象等时可能需要。</p>
    sdescriptors
    xworker.lang.actions.Actions/@NOOP
    sth_createIndex
    false
    sid
    newInstance
    @/@actions/@startEncode
    sname
    startEncode
    sisSynchronized
    false
    sthrowException
    true
    suseOtherAction
    false
    svarScope
    Local
    sdisableGlobalContext
    false
    Scode
#$@text#$@
import org.apache.mina.core.buffer.IoBuffer;

//创建buffer
def buffer = IoBuffer.allocate(self.getInt("capacity"), self.getBoolean("direct"));
buffer.setAutoExpand(self.getBoolean("autoExpand"));

//编码
try{
    def bindings = actionContext.push(null);
    bindings.put("buffer", buffer);
    bindings.put("rootData", data);
    
    self.doAction("encode", actionContext);
}finally{
    actionContext.pop();
}

//校验和
if(self.checksum != null && self.checksum != "" && self.checksum != "none"){    
    def array = buffer.array();
    def length = buffer.position();
    int checksum = 0;
    for(int i=0; i<length; i++){
        checksum += array[i];
    }
    
    switch(self.checksum){
        case "byte":
            buffer.put((byte) (checksum & 0xFF));
            break;
        case "short":
            buffer.putShort((byte) (checksum & 0xFFFF));
            break;
        case "int":
            buffer.putInt(checksum);
            break;
    }
}

//输出
switch(self.encodeReturnType){
    case "byte[]":
        def length = buffer.position();
        buffer.flip();
        def bs = new byte[length];
        buffer.get(bs);
        buffer.free();
        return bs;
    default:
        buffer.flip();
        return buffer;
}
#$@text#$@
    sdescription
    <p>要传入编码的数据。</p>
    sdescriptors
    xworker.lang.actions.Actions/@GroovyAction
    sth_createIndex
    false
    sid
    startEncode
      @/@actions/@startEncode/@ins
      sisValidate
      false
      sname
      ins
      sdescriptors
      xworker.lang.actions.Inout/@ins
      sth_createIndex
      false
      sid
      ins
        @/@actions/@startEncode/@ins/@data
        sname
        data
        stypeCheck
        false
        soptional
        true
        scheck
        false
        scheckLevel
        exception
        sdescriptors
        xworker.lang.actions.Inout/@ins/@param
        sth_createIndex
        false
        sid
        data
    @/@actions/@startDecode
    sname
    startDecode
    sisSynchronized
    false
    sthrowException
    true
    suseOtherAction
    false
    svarScope
    Local
    sdisableGlobalContext
    false
    scode
    return self.doAction("decode", actionContext, ["rootData":null, "data":null]);
    sdescriptors
    xworker.lang.actions.Actions/@GroovyAction
    sth_createIndex
    false
    sid
    startDecode
      @/@actions/@startDecode/@ins
      sisValidate
      false
      sname
      ins
      sdescriptors
      xworker.lang.actions.Inout/@ins
      sth_createIndex
      false
      sid
      ins
        @/@actions/@startDecode/@ins/@buffer
        sname
        buffer
        stypeCheck
        false
        soptional
        true
        scheck
        false
        scheckLevel
        exception
        sdescriptors
        xworker.lang.actions.Inout/@ins/@param
        sth_createIndex
        false
        sid
        buffer
  @/@name
  sname
  name
  sreadOnly
  false
  sinheritDescription
  false
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  name
  @/@label
  sname
  label
  sreadOnly
  false
  sinheritDescription
  false
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  label
  @/@propertyPath
  sname
  propertyPath
  ssize
  60
  scolspan
  2
  sreadOnly
  false
  sinheritDescription
  false
  sdescription
  <p>属性路径，使用Ognl从dataSource中取。</p>
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  propertyPath
  @/@defaultValue
  sname
  defaultValue
  sreadOnly
  false
  sinheritDescription
  false
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  defaultValue
  @/@checksum
  sname
  checksum
  slabel
  校验和
  sinputtype
  select
  sreadOnly
  false
  sdefault
  none
  sinheritDescription
  false
  Sdescription
#$@text#$@
<p>是否在末尾加一个校验和。</p>
<p>none是没有，不加。</p>
#$@text#$@
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  checksum
    @/@checksum/@none
    sname
    none
    slabel
    none
    svalue
    none
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    none
    @/@checksum/@byte
    sname
    byte
    slabel
    byte
    svalue
    byte
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    byte
    @/@checksum/@short
    sname
    short
    slabel
    short
    svalue
    short
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    short
    @/@checksum/@int
    sname
    int
    slabel
    int
    svalue
    int
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    int
  @/@capacity
  sname
  capacity
  sgroup
  encode
  sreadOnly
  false
  sdefault
  1024
  sinheritDescription
  false
  sdescription
  <p>编码时初始化buffer的大小。</p>
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  capacity
  @/@direct
  sname
  direct
  sinputtype
  truefalse
  sgroup
  encode
  sreadOnly
  false
  sdefault
  false
  sinheritDescription
  false
  sdescription
  <p><font face="Courier New">true</font> to get a direct buffer, <tt>false</tt> to get a heap buffer.</p>
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  direct
  @/@autoExpand
  sname
  autoExpand
  sinputtype
  truefalse
  sgroup
  encode
  sreadOnly
  false
  sdefault
  true
  sinheritDescription
  false
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  autoExpand
  @/@encodeReturnType
  sname
  encodeReturnType
  sinputtype
  select
  sgroup
  encode
  sreadOnly
  false
  sdefault
  IoBuffer
  sinheritDescription
  false
  sdescription
  <p>编码后的输出类型。</p>
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sid
  encodeReturnType
    @/@encodeReturnType/@IoBuffer
    sname
    IoBuffer
    slabel
    IoBuffer
    svalue
    IoBuffer
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    IoBuffer
    @/@encodeReturnType/@byte[]
    sname
    byte[]
    slabel
    byte[]
    svalue
    byte[]
    sdescriptors
    xworker.lang.MetaDescriptor3/@attribute/@value
    sth_createIndex
    false
    sid
    byte[]
  @/@description1
  sname
  description
  sinputtype
  html
  sshowLabel
  true
  slabelAlign
  right
  slabelVAlign
  baseline
  smodifier
  public
  sreadOnly
  false
  sinheritDescription
  false
  svalidateAllowBlank
  true
  LvalidateOnBlur
  true
  LallowDecimals
  true
  LallowNegative
  true
  snotXmlAttribute
  false
  sdescriptors
  xworker.lang.MetaDescriptor3/@attribute
  sth_createIndex
  false
  sth_registMyChilds
  false
  sth_registDisabled
  false
  sth_mark
  false
  sid
  description1
