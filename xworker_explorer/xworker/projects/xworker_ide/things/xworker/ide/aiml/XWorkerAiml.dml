^1465203751947
@
sname
XWorkerAiml
slabel
XWorkerAiml
sdescriptors
xworker.ai.chatterbean.Aiml
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
@/@category
sname
category
slabel
xworker 是 什么
stemplate
XWorker是一个整合性的应用平台，它通过模型把各种技术和功能整合在一起，然后大家可以在已有的模型的基础上快速开发自己的应用，也可以使用整合的各种功能。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@action
sname
action
slabel
打开 xworker 主页
sresult
XWorker已经为您打开。
sdescriptors
xworker.ai.chatterbean.Aiml/@action
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
action
@/@action/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@action/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@action/@actions/@doAction
sname
doAction
surl
http://www.xworker.org
surlIsTemplate
false
sxworkerUrl
false
sinterpretationType
Self
sattributeTemplate
false
schildsAttributeTemplate
false
svarScope
Local
sisSynchronized
false
sthrowException
true
suseOtherAction
false
screateLocalVarScope
false
ssaveReturn
false
sdisableGlobalContext
false
sdebugLog
false
sdescriptors
xworker.ide.worldExplorer.actions.ExplorerActions/@OpenThing11
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
doAction
@/@category1
sname
category
slabel
计算 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@category1"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category1
@/@category1/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@category1/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import ognl.Ognl;

//获取原始输入
def context = bot.getContext();
def question = context.getRequests(0);
def script = question.getOriginal();
script = script.substring(3, script.length() - 2);

//使用Ognl计算
try{
    return "计算结果是: " + Ognl.getValue(script, actionContext);
}catch(Exception e){
    return "计算时发生异常，" + e.getMessage();
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@Categorys
sname
Categorys
slabel
面板功能
sdescription
<p>设置、打开SWT Composite的功能。</p>
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
Categorys
@/@Categorys/@category21
sname
category
slabel
记录 面板
stemplate
请输入面板的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category21
@/@Categorys/@category2
sname
category
slabel
设置 面板
stemplate
请输入面板的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
@/@Categorys/@category22
sname
category
slabel
添加 面板
stemplate
请输入面板的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category22
@/@Categorys/@category3
sname
category
slabel
*
sthat
请 输入 面板 的 名称
stemplate
请输入面板的事物路径。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category3
@/@Categorys/@category4
sname
category
slabel
*
sthat
请 输入 面板 的 事物 路径
stemplate
请输入面板要存储的地方。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category4
@/@Categorys/@please
sname
please
slabel
*
sthat
请 输入 面板 要 存储 的 地方
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@Categorys/@please"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
please
@/@Categorys/@please/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@Categorys/@please/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def action = world.getAction("xworker.ai.chatterbean.AliceLearnActions/@actions/@saveThing");

def req = context.getRequests(0).getOriginal();
req = req.trim();
def type = null;
if(req == "xworker"){
    type = "xworker";
}else if(req == "本地"){
    type = "local";
}else if(req == "工作"){
    type = "work";
}

def params = [
    configThingManager:"_local",
    configPath:"_local.xworker.config.AimlCompositeConfig",
    configForCopy:"xworker.ide.aiml.CompositeDefaultConfig",
    thingManagerName:"_local",
    type:type];
    
def result = action.run(actionContext, params); 
if(result == null){
    return "面板设置成功！";
}else{
    return result;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@Categorys/@category
sname
category
slabel
打开 面板 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@Categorys/@category"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@Categorys/@category/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@Categorys/@category/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlCompositeConfig",
     "_local", "xworker.ide.aiml.CompositeDefaultConfig")
if(config == null){
    return "还没有设置面板，请输入“设置面板。”添加新的面板。";
}

//查找顺序
def path = findComposite(param, config.getString("local"));
if(path == null){
    path = findComposite(param, config.getString("xworker"));
}
if(path == null){
    path = findComposite(param, config.getString("work"));
}
if(path == null){
    return "没有找到对应的面板，请输入“设置面板。”添加新的面板。";
}
def compositeThing = world.getThing(path);
if(compositeThing == null){
    return "面板事物已经不存在了，请重新设置。原有面板路径是：" + path + "。";
}

XWorkerUtils.ideOpenComposite(compositeThing);
return "面板已打开！";

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("path");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@Categorys/@category23
sname
category
slabel
* 面板 列表 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@Categorys/@category23"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category23
@/@Categorys/@category23/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@Categorys/@category23/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlCompositeConfig",
     "_local", "xworker.ide.aiml.CompositeDefaultConfig")
if(config == null){
    return "还没有设置面板，请输入“设置面板。”添加新的面板。";
}

//面板列表
def list = "输入\"打开面板xxx。\"来打开具体面板。面板列表：[";
list = getAll(list, config.getString("local"));
list = getAll(list, config.getString("xworker"));
list = getAll(list, config.getString("work"));

return list + "]";

def getAll(list, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            def a = "<a href=\"javascript:invoke('tab:";
            a = a + child.getString("path");
            a = a + "')\">";
            a = a + child.getString("label") + "</a>";

            list = list + a + "&nbsp;";
        }
    }
    
    return list;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@Categorys/@category24
sname
category
slabel
移除 面板 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@Categorys/@category24"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category24
@/@Categorys/@category24/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@Categorys/@category24/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlCompositeConfig",
     "_local", "xworker.ide.aiml.CompositeDefaultConfig")
param = param.substring(4, param.length() - 1);

//面板配置
def config = world.getThing("_local.xworker.config.AimlCompositeConfig");
if(config == null){
    return "还没有设置面板，请输入“设置面板。”添加新的面板。";
}

//面板列表
removeAll(param, config.getString("local"));
removeAll(param, config.getString("xworker"));
removeAll(param, config.getString("work"));

return "面板" + param + "已经移除。";

def removeAll(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        boolean removed = false;
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                thing.removeChild(child);
            }
        }

        if(removed){
            thing.save();
        }
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@sells
sname
sells
slabel
窗口功能
sdescription
<p>设置、打开SWT Shell的功能。</p>
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
sells
@/@sells/@category21
sname
category
slabel
记录 窗口
stemplate
请输入窗口的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category21
@/@sells/@category2
sname
category
slabel
设置 窗口
stemplate
请输入窗口的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
@/@sells/@category22
sname
category
slabel
添加 窗口
stemplate
请输入窗口的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category22
@/@sells/@category3
sname
category
slabel
*
sthat
请 输入 窗口 的 名称
stemplate
请输入窗口的事物路径。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category3
@/@sells/@category4
sname
category
slabel
*
sthat
请 输入 窗口 的 事物 路径
stemplate
请输入窗口要存储的地方。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category4
@/@sells/@please
sname
please
slabel
*
sthat
请 输入 窗口 要 存储 的 地方
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@sells/@please"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
please
@/@sells/@please/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@sells/@please/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def action = world.getAction("xworker.ai.chatterbean.AliceLearnActions/@actions/@saveThing");

def req = context.getRequests(0).getOriginal();
req = req.trim();
def type = null;
if(req == "xworker"){
    type = "xworker";
}else if(req == "本地"){
    type = "local";
}else if(req == "工作"){
    type = "work";
}

def params = [
    configThingManager:"_local",
    configPath:"_local.xworker.config.AimlShellConfig",
    configForCopy:"xworker.ide.aiml.ShellDefaultConfig",
    thingManagerName:"_local",
    type:type];
    
def result = action.run(actionContext, params); 
if(result == null){
    return "窗口设置成功！";
}else{
    return result;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@sells/@category
sname
category
slabel
打开 窗口 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@sells/@category"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@sells/@category/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@sells/@category/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);
//println("name=" + param);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlShellConfig",
     "_local", "xworker.ide.aiml.ShellDefaultConfig")
if(config == null){
    return "还没有设置窗口\"" + param + "\"，请输入“设置窗口。”添加新的窗口。";
}

//查找顺序
def path = findComposite(param, config.getString("local"));
if(path == null){
    path = findComposite(param, config.getString("xworker"));
}
if(path == null){
    path = findComposite(param, config.getString("work"));
}
if(path == null){
    return "没有找到对应的窗口，请输入“设置窗口。”添加新的窗口。";
}
def compositeThing = world.getThing(path);
if(compositeThing == null){
    return "窗口事物已经不存在了，请重新设置。原有窗口路径是：" + path + "。";
}

self.doAction("openShell", actionContext,
    ["shellPath":compositeThing.getMetadata().getPath(),
     "parent": XWorkerUtils.getIDEShell()]);
return "窗口已打开！";

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("path");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@sells/@category/@actions/@openShell
sname
openShell
sparent
var:parent
sshellPath
var:shellPath
ssingleInstance
true
sinterpretationType
Self
sattributeTemplate
false
schildsAttributeTemplate
false
svarScope
Local
sisSynchronized
false
sthrowException
true
suseOtherAction
false
screateLocalVarScope
false
ssaveReturn
false
sdisableGlobalContext
false
sdebugLog
false
sdescriptors
xworker.swt.actions.ShellActionsNew/@OpenShell
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
openShell
@/@sells/@category23
sname
category
slabel
* 窗口 列表 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@sells/@category23"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category23
@/@sells/@category23/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@sells/@category23/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlShellConfig",
     "_local", "xworker.ide.aiml.ShellDefaultConfig")
if(config == null){
    return "还没有设置窗口，请输入“设置窗口。”添加新的窗口。";
}

//面板列表
def list = "输入\"打开窗口xxx。\"来打开具体窗口。窗口列表：[";
list = getAll(list, config.getString("local"));
list = getAll(list, config.getString("xworker"));
list = getAll(list, config.getString("work"));

return  list + "]";

def getAll(list, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            def a = "<a href=\"javascript:invoke('shell:";
            a = a + child.getString("path");
            a = a + "')\">";
            a = a + child.getString("label") + "</a>";

            list = list + a + "&nbsp;";
        }
    }
    
    return list;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@sells/@category24
sname
category
slabel
移除 窗口 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@sells/@category24"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category24
@/@sells/@category24/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@sells/@category24/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlShellConfig",
     "_local", "xworker.ide.aiml.ShellDefaultConfig")
if(config == null){
    return "还没有设置窗口，请输入“设置窗口。”添加新的窗口。";
}

//面板列表
removeAll(param, config.getString("local"));
removeAll(param, config.getString("xworker"));
removeAll(param, config.getString("work"));

return "窗口" + param + "已经移除。";

def removeAll(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        boolean removed = false;
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                thing.removeChild(child);
            }
        }

        if(removed){
            thing.save();
        }
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@thingFunctions
sname
thingFunctions
slabel
事物功能
sdescription
<p>设置、打开事物的功能。</p>
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
thingFunctions
@/@thingFunctions/@category21
sname
category
slabel
记录 事物
stemplate
请输入事物的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category21
@/@thingFunctions/@category2
sname
category
slabel
设置 事物
stemplate
请输入事物的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
@/@thingFunctions/@category22
sname
category
slabel
添加 事物
stemplate
请输入事物的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category22
@/@thingFunctions/@category3
sname
category
slabel
*
sthat
请 输入 事物 的 名称
stemplate
请输入事物的路径。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category3
@/@thingFunctions/@category4
sname
category
slabel
*
sthat
请 输入 事物 的 路径
stemplate
请输入事物要存储的地方。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category4
@/@thingFunctions/@please
sname
please
slabel
*
sthat
请 输入 事物 要 存储 的 地方
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@thingFunctions/@please"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
please
@/@thingFunctions/@please/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@thingFunctions/@please/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def action = world.getAction("xworker.ai.chatterbean.AliceLearnActions/@actions/@saveThing");

def req = context.getRequests(0).getOriginal();
req = req.trim();
def type = null;
if(req == "xworker"){
    type = "xworker";
}else if(req == "本地"){
    type = "local";
}else if(req == "工作"){
    type = "work";
}

def params = [
    configThingManager:"_local",
    configPath:"_local.xworker.config.AimlThingConfig",
    configForCopy:"xworker.ide.aiml.ThingDefaultConfig",
    thingManagerName:"_local",
    type:type];
    
def result = action.run(actionContext, params); 
if(result == null){
    return "事物设置成功！";
}else{
    return result;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@thingFunctions/@category
sname
category
slabel
打开 事物 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@thingFunctions/@category"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@thingFunctions/@category/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@thingFunctions/@category/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);
//println("name=" + param);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlThingConfig",
     "_local", "xworker.ide.aiml.ThingDefaultConfig")

if(config == null){
    return "还没有设置事物\"" + param + "\"，请输入“设置事物。”添加新的事物。";
}

//查找顺序
def path = findComposite(param, config.getString("local"));
if(path == null){
    path = findComposite(param, config.getString("xworker"));
}
if(path == null){
    path = findComposite(param, config.getString("work"));
}
if(path == null){
    return "没有找到对应的事物，请输入“设置事物。”添加新的事物。";
}
def compositeThing = world.getThing(path);
if(compositeThing == null){
    return "事物已经不存在了，请重新设置。原有事物路径是：" + path + "。";
}

XWorkerUtils.ideOpenThing(compositeThing);
return "事物已打开！";

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("path");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@thingFunctions/@category23
sname
category
slabel
* 事物 列表 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@thingFunctions/@category23"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category23
@/@thingFunctions/@category23/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@thingFunctions/@category23/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlThingConfig",
     "_local", "xworker.ide.aiml.ThingDefaultConfig")
if(config == null){
    return "还没有设置事物，请输入“设置事物。”添加新的事物。";
}

//面板列表
def list = "输入\"打开事物xxx。\"来打开具体事物。事物列表：[";
list = getAll(list, config.getString("local"));
list = getAll(list, config.getString("xworker"));
list = getAll(list, config.getString("work"));

return  list + "]";

def getAll(list, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            def a = "<a href=\"javascript:invoke('thing:";
            a = a + child.getString("path");
            a = a + "')\">";
            a = a + child.getString("label") + "</a>";

            list = list + a + "&nbsp;";
        }
    }
    
    return list;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@thingFunctions/@category24
sname
category
slabel
移除 事物 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@thingFunctions/@category24"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category24
@/@thingFunctions/@category24/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@thingFunctions/@category24/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlThingConfig",
     "_local", "xworker.ide.aiml.ThingDefaultConfig")
if(config == null){
    return "还没有设置事物，请输入“设置事物。”添加新的事物。";
}

//面板列表
removeAll(param, config.getString("local"));
removeAll(param, config.getString("xworker"));
removeAll(param, config.getString("work"));

return "事物" + param + "已经移除。";

def removeAll(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        boolean removed = false;
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                thing.removeChild(child);
            }
        }

        if(removed){
            thing.save();
        }
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@functions
sname
functions
slabel
功能
sdescription
<p>设置、打开事物的功能。</p>
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
functions
@/@functions/@category21
sname
category
slabel
记录 功能
stemplate
请输入功能的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category21
@/@functions/@category2
sname
category
slabel
设置 功能
stemplate
请输入功能的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
@/@functions/@category22
sname
category
slabel
添加 功能
stemplate
请输入功能的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category22
@/@functions/@category3
sname
category
slabel
*
sthat
请 输入 功能 的 名称
stemplate
请输入功能的路径。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category3
@/@functions/@category4
sname
category
slabel
*
sthat
请 输入 功能 的 路径
stemplate
请输入功能要存储的地方。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category4
@/@functions/@please
sname
please
slabel
*
sthat
请 输入 功能 要 存储 的 地方
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@functions/@please"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
please
@/@functions/@please/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@functions/@please/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def action = world.getAction("xworker.ai.chatterbean.AliceLearnActions/@actions/@saveThing");

def req = context.getRequests(0).getOriginal();
req = req.trim();
def type = null;
if(req == "xworker"){
    type = "xworker";
}else if(req == "本地"){
    type = "local";
}else if(req == "工作"){
    type = "work";
}

def params = [
    configThingManager:"_local",
    configPath:"_local.xworker.config.AimlFunctionConfig",
    configForCopy:"xworker.ide.aiml.DefaultFunctionConfig",
    thingManagerName:"_local",
    type:type];
    
def result = action.run(actionContext, params); 
if(result == null){
    return "功能设置成功！";
}else{
    return result;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@functions/@category
sname
category
slabel
打开 功能 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@functions/@category"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@functions/@category/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@functions/@category/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);
//println("name=" + param);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlFunctionConfig",
     "_local", "xworker.ide.aiml.DefaultFunctionConfig");

if(config == null){
    return "还没有设置功能\"" + param + "\"，请输入“设置功能。”添加新的功能。";
}

//查找顺序
def path = findComposite(param, config.getString("local"));
if(path == null){
    path = findComposite(param, config.getString("xworker"));
}
if(path == null){
    path = findComposite(param, config.getString("work"));
}
if(path == null){
    return "没有找到对应的功能，请输入“设置功能。”添加新的功能。";
}
def compositeThing = world.getThing(path);
if(compositeThing == null){
    return "功能已经不存在了，请重新功能。原有功能路径是：" + path + "。";
}

XWorkerUtils.ideOpenThingTab(compositeThing);
return "功能已打开！";

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("path");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@functions/@category23
sname
category
slabel
* 功能 列表 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@functions/@category23"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category23
@/@functions/@category23/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@functions/@category23/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlFunctionConfig",
     "_local", "xworker.ide.aiml.DefaultFunctionConfig")

if(config == null){
    return "还没有设置功能，请输入“设置功能。”添加新的功能。";
}

//面板列表
def list = "输入\"打开功能xxx。\"来打开具体功能。功能列表：[";
list = getAll(list, config.getString("local"));
list = getAll(list, config.getString("xworker"));
list = getAll(list, config.getString("work"));

return  list + "]";

def getAll(list, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            def a = "<a href=\"javascript:invoke('thingTab:";
            a = a + child.getString("path");
            a = a + "')\">";
            a = a + child.getString("label") + "</a>";

            list = list + a + "&nbsp;";
        }
    }
    
    return list;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@functions/@category24
sname
category
slabel
移除 功能 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@functions/@category24"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category24
@/@functions/@category24/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@functions/@category24/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlFunctionConfig",
     "_local", "xworker.ide.aiml.DefaultFunctionConfig")

if(config == null){
    return "还没有设置功能，请输入“设置功能。”添加新的功能。";
}

//面板列表
removeAll(param, config.getString("local"));
removeAll(param, config.getString("xworker"));
removeAll(param, config.getString("work"));

return "功能" + param + "已经移除。";

def removeAll(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        boolean removed = false;
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                thing.removeChild(child);
            }
        }

        if(removed){
            thing.save();
        }
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help
sname
help
slabel
帮助
sdescription
<p>设置、打开SWT Shell的功能。</p>
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
help
@/@help/@category21
sname
category
slabel
记录 帮助
stemplate
请输入帮助的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category21
@/@help/@category2
sname
category
slabel
设置 帮助
stemplate
请输入帮助的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
@/@help/@category22
sname
category
slabel
添加 帮助
stemplate
请输入帮助的名称。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category22
@/@help/@category3
sname
category
slabel
*
sthat
请 输入 帮助 的 名称
stemplate
请输入帮助的内容。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category3
@/@help/@category4
sname
category
slabel
*
sthat
请 输入 帮助 的 内容
stemplate
请输入帮助要存储的地方。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category4
@/@help/@please
sname
please
slabel
*
sthat
请 输入 帮助 要 存储 的 地方
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@please"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
please
@/@help/@please/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@please/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def action = world.getAction("xworker.ai.chatterbean.AliceLearnActions/@actions/@saveThing");

def req = context.getRequests(0).getOriginal();
req = req.trim();
def type = null;
if(req == "xworker"){
    type = "xworker";
}else if(req == "本地"){
    type = "local";
}else if(req == "工作"){
    type = "work";
}

def params = [
    configThingManager:"_local",
    configPath:"_local.xworker.config.AimlHelpConfig",
    configForCopy:"xworker.ide.aiml.HelpDefaultConfig",
    thingManagerName:"_local",
    contentAttribute:"description",
    type:type];
    
def result = action.run(actionContext, params); 
if(result == null){
    return "帮助设置成功！";
}else{
    return result;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@category
sname
category
slabel
打开 帮助 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@category"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@help/@category/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@category/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);
//println("name=" + param);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlHelpConfig",
     "_local", "xworker.ide.aiml.HelpDefaultConfig")
if(config == null){
    return "还没有设置帮助，请输入“设置帮助。”添加新的帮助。";
}

//查找顺序
def content = findComposite(param, config.getString("local"));
if(content == null){
    content = findComposite(param, config.getString("xworker"));
}
if(content == null){
    content = findComposite(param, config.getString("work"));
}
if(content == null){
    return "没有找到对应的帮助，请输入“设置帮助。”添加新的帮助。";
}

return content;

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("description");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@category23
sname
category
slabel
* 帮助 列表 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@category23"></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category23
@/@help/@category23/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@category23/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlHelpConfig",
     "_local", "xworker.ide.aiml.HelpDefaultConfig")
if(config == null){
    return "还没有设置帮助，请输入“设置帮助。”添加新的帮助。";
}

//面板列表
def list = "输入\"打开帮助xxx。\"来打开具体帮助。帮助列表：[";
list = getAll(list, config.getString("local"));
list = getAll(list, config.getString("xworker"));
list = getAll(list, config.getString("work"));

return list + "]";

def getAll(list, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            def a = "<a href=\"javascript:invoke('thingDesc:";
            a = a + child.getMetadata().getPath();
            a = a + "')\">";
            a = a + child.getString("label") + "</a>";

            list = list + a + "&nbsp;";
        }
    }
    
    return list;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@category24
sname
category
slabel
移除 帮助 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@category24"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category24
@/@help/@category24/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@category24/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlHelpConfig",
     "_local", "xworker.ide.aiml.HelpDefaultConfig")
if(config == null){
    return "还没有设置帮助，请输入“设置帮助。”添加新的帮助。";
}

//面板列表
removeAll(param, config.getString("local"));
removeAll(param, config.getString("xworker"));
removeAll(param, config.getString("work"));

return "帮助" + param + "已经移除。";

def removeAll(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        boolean removed = false;
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                thing.removeChild(child);
            }
        }

        if(removed){
            thing.save();
        }
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@帮助
sname
category
slabel
帮助
Stemplate
#$@text#$@
&lt;p&gt;&lt;strong&gt;获取帮助的常见方法有：&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;&lt;strong&gt;帮助列表&lt;/strong&gt;&lt;br /&gt;
	在对话框上输入帮助列表，我会列出可的帮助列表。&lt;br /&gt;
	&amp;nbsp;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;帮助小精灵&lt;/strong&gt;&lt;br /&gt;
	在XWorker的右上角有一个帮助小精灵的按钮，点击它会弹出一个界面，然后用鼠标点击界面上你想要获得帮助的控件，一般会在帮助小精灵中显示出相应的文档。&lt;br /&gt;
	&amp;nbsp;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;事物问题&lt;/strong&gt;&lt;br /&gt;
	一个事物模型的文档在编辑它时可以看到，鼠标移动到属性会弹出属性文档，在概要栏和编辑器的标题也可以看到事物的文档。&lt;br /&gt;
	&amp;nbsp;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;概要&lt;/strong&gt;&lt;br /&gt;
	XWorker最右面的概要栏一般用于显示文档。&lt;br /&gt;
	&amp;nbsp;&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;其它&lt;/strong&gt;&lt;br /&gt;
	在XWorker中还有其它的帮助文档，可能分散到各个角落里。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
#$@text#$@
Sdescription
#$@text#$@
<p><strong>获取帮助的常见方法有：</strong></p>

<ul>
	<li><strong>帮助列表</strong><br />
	在对话框上输入帮助列表，我会列出可的帮助列表。<br />
	&nbsp;</li>
	<li><strong>帮助小精灵</strong><br />
	在XWorker的右上角有一个帮助小精灵的按钮，点击它会弹出一个界面，然后用鼠标点击界面上你想要获得帮助的控件，一般会在帮助小精灵中显示出相应的文档。<br />
	&nbsp;</li>
	<li><strong>事物问题</strong><br />
	一个事物模型的文档在编辑它时可以看到，鼠标移动到属性会弹出属性文档，在概要栏和编辑器的标题也可以看到事物的文档。<br />
	&nbsp;</li>
	<li><strong>概要</strong><br />
	XWorker最右面的概要栏一般用于显示文档。<br />
	&nbsp;</li>
	<li><strong>其它</strong><br />
	在XWorker中还有其它的帮助文档，可能分散到各个角落里。</li>
</ul>

<p>&nbsp;</p>
#$@text#$@
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
帮助
@/@help/@category25
sname
category
slabel
*
sthat
我 可以 为你 做 些 什么
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@category25"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category25
@/@help/@category25/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@category25/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
//println("name=" + param);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlHelpConfig",
     "_local", "xworker.ide.aiml.HelpDefaultConfig")
if(config == null){
    return "还没有设置帮助，请输入“设置帮助。”添加新的帮助。";
}

//查找顺序
def content = findComposite(param, config.getString("local"));
if(content == null){
    content = findComposite(param, config.getString("xworker"));
}
if(content == null){
    content = findComposite(param, config.getString("work"));
}
if(content == null){
    return "没有找到对应的帮助，请输入“设置帮助。”添加新的帮助。";
}

return content;

def findComposite(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                return child.getString("description");
            }
        }
    }
    
    return null;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@category26
sname
category
slabel
请求 * 帮助 *
stemplate
<srai>帮助</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category26
@/@help/@category27
sname
category
slabel
请求 * 帮忙 *
stemplate
<srai>帮助</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category27
@/@help/@category28
sname
category
slabel
* 帮帮 * 我 *
stemplate
<srai>帮助</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category28
@/@help/@category29
sname
category
slabel
* 帮助 * 我 *
stemplate
<srai>帮助</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category29
@/@help/@category30
sname
category
slabel
编辑 帮助 *
stemplate
<action path="xworker.ide.aiml.XWorkerAiml/@help/@category30"><star/></action>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category30
@/@help/@category30/@actions
sname
actions
sdescriptors
xworker.ai.chatterbean.Aiml/@category/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@help/@category30/@actions/@run
sname
run
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.XWorkerUtils;

//参数
def param = context.getRequests(0).getOriginal().trim();
param = param.substring(4, param.length() - 1);

//面板配置
def config = XWorkerUtils.getThingIfNotExistsCopy("_local.xworker.config.AimlHelpConfig",
     "_local", "xworker.ide.aiml.HelpDefaultConfig")
if(config == null){
    return "还没有设置帮助，请输入“设置帮助。”添加新的帮助。";
}

//面板列表
if(edit(param, config.getString("local"))){
   return "已打开编辑的帮助事物。";
}
if(edit(param, config.getString("xworker"))){
   return "已打开编辑的帮助事物。";
}
if(edit(param, config.getString("work"))){
   return "已打开编辑的帮助事物。";
}else{
    return "找不不到对应的帮助事物，'" + param + "'。";
}

def edit(name, thingPath){
    def thing = world.getThing(thingPath);
    if(thing != null){
        for(child in thing.getChilds()){
            if(child.getString("label") == name){
                XWorkerUtils.ideOpenThing(child);
                return true;
            }
        }

        return false;
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
run
@/@help/@category31
sname
category
slabel
* 哪些 * 帮助 *
stemplate
<srai>显示 帮助 列表</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category31
@/@help/@category32
sname
category
slabel
* 什么 * 帮助 *
stemplate
<srai>显示 帮助 列表</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category32
@/@help/@category33
sname
category
slabel
* 什么样 * 帮助 *
stemplate
<srai>显示 帮助 列表</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category33
@/@model
sname
model
slabel
模型相关
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
model
@/@model/@useModel
sname
useModel
slabel
使用模型
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
useModel
@/@model/@useModel/@category
sname
category
slabel
* 使用 * 模型 *
stemplate
在“分类信息”标签中的1 基础->动态模型中有模型的介绍，在“分类信息”标签页中的2 开发 -> 基础模型 -> 元事物中也有模型的基本使用方法介绍。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@model/@useModel/@category1
sname
category
slabel
* 模型 * 表示 *
stemplate
可以用模型表示对象、函数和行为方法等，具体请参看“信息分类”中的信息。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category1
@/@Categorys1
sname
Categorys
slabel
基本表情等
sdescriptors
xworker.ai.chatterbean.Aiml/@Categorys
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
Categorys1
@/@Categorys1/@category1
sname
category
slabel
啊
stemplate
有什么大惊小怪的呢。
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category1
@/@Categorys1/@category
sname
category
slabel
！
stemplate
<srai>啊</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category
@/@Categorys1/@category2
sname
category
slabel
!
stemplate
<srai>啊</srai>
sdescriptors
xworker.ai.chatterbean.Aiml/@category
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
category2
