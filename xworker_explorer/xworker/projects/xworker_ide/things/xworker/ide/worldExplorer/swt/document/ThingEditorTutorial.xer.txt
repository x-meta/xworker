@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial
sname
ThingEditorTutorial
slabel
ThingEditorTutorial
sdescriptors
xworker.http.ControlSet
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@index
sname
index
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@index/@forms
sname
forms
sbelongToHtml
true
sstyle
default
SotherHeads
#$@text#$@
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<LINK REL ="stylesheet" TYPE="text/css" HREF="fckeditor/editor/css/fck_editorarea.css" TITLE="Style"/>
#$@text#$@
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@index/@forms/@htmlCode
sname
htmlCode
ShtmlCode
#$@text#$@
<p><span style="font-size: small"><b>事物编辑表单</b></span></p>
<p>&nbsp;&nbsp;&nbsp; 事物编辑表单是通过事物的描述者事物动态生成的，事物的描述者定义了如何生成编辑表单的属性或方法。</p>
<p>&nbsp;&nbsp;&nbsp; 动态创建事物编辑表单时同时会创建一个从SWT控件上设置和读取属性值的Model，通过Model可以设置、读取和校验属性值。</p>
#$@text#$@
sdescriptors
xworker.html.base.container.childs/@htmlCode
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@index/@success
sname
success
stype
form
scontentType
text/html;
svalue
xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@index/@forms
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingForm
sname
thingForm
sdescription
<p>事物编辑表单。</p>
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingForm/@forms
sname
forms
sbelongToHtml
true
sstyle
default
SotherHeads
#$@text#$@
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<LINK REL ="stylesheet" TYPE="text/css" HREF="fckeditor/editor/css/fck_editorarea.css" TITLE="Style"/>
<script type="text/javascript" src="js/xworker/InnerBrowserUtil.js"></script>
#$@text#$@
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingForm/@forms/@htmlCode
sname
htmlCode
ShtmlCode
#$@text#$@
<p><span style="font-size: small"><b>如何定义事物编辑表单</b><span style="font-size: xx-small"><b><a onClick="invoke('thing:xworker.ide.worldExplorer.swt.document.ThingEditorTutorial:/@thingForm/@forms/@htmlCode')" href="javascript:void(0)">edit</a></b></span></span></p>
<p><b>事物编辑表单是根据事物的描述者动态创建的</b></p>
<p>&nbsp;&nbsp;&nbsp; 事物的编辑表单是根据事物的描述者动态创建的，默认的创建表单的方法是通过事物及其属性子事物创建的。</p>
<p><b>描述者定义事物编辑表单简介</b></p>
<p>&nbsp;&nbsp;&nbsp; 通过描述者默认创建一个ScrollComposite，ScrollComposite使用GridLayout布局，GridLayout的一些信息是通过描述者定义的。</p>
<p style="text-align: center">&nbsp;<img height="131" alt="" width="461" src="/files/Image/thingexplorer/thingEditorTutorial/thingDescriptorForm.jpg" /></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 如上图其中编辑列数＝2定义了编辑表单GridLayout的栏目数是4（(标题+编辑控件)*编辑列数）。</p>
<p>&nbsp;&nbsp;&nbsp; 表单中个元素是有描述者的属性子事物定义的，各属性子事物定义自己的表单，如：</p>
<p style="text-align: center">&nbsp;<img height="216" alt="" width="513" src="/files/Image/thingexplorer/thingEditorTutorial/thingDesAttributeForm.jpg" /></p>
<p style="text-align: left">&nbsp;&nbsp;&nbsp; 其中和属性输入有关的属性有：</p>
<ul>
    <li>输入方式<br />
    此属性使用什么方式编辑，可以选择的编辑方式有文本框、文本区域、Html格式编辑、下拉选择框、多选、单选、日期输入、颜色输入、字体输入、数据选择、输入选择、真假、代码输入等。</li>
    <li>默认值<br />
    新建事物时改属性的默认值。</li>
    <li>可选<br />
    可选表示此属性可以为空，否则在编辑时如果为空会提示为空需要输入。</li>
    <li>长度<br />
    一般在文本框、日期输入、颜色输入、字体输入、数据选择等输入方法时有效，表示这些控件的宽度。</li>
    <li>模式<br />
    事物属性编辑快控件的显示格式。</li>
    <li>跨行<br />
    事物属性编辑控件的GriData跨行设置。</li>
    <li>跨列<br />
    事物属性编辑控件的快列设置。</li>
    <li>分组<br />
    属性的分组名称相同的会放入到同组Group中，如果分组为空那么没有Group或放入基础属性Group中。</li>
    <li>分组索引<br />
    分组的按照分组索引的大小的排列顺序。</li>
    <li>输入扩展属性<br />
    和具体的输入方式对应，对输入方式做进一步约束控制的属性。</li>
</ul>
<p><b>示例</b></p>
<p>&nbsp;&nbsp;&nbsp; 事物<a onClick="invoke('thing.xworker.example.tutorialthingEditor.BaseEditor')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.BaseEditor</a>是一个描述者，使用它创建事物可以展示默认输入表单，比如事物<a onClick="invoke('thingxworker.exampletutorialthingEditor.ThingCreatedByBaseEditor')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.ThingCreatedByBaseEditor</a>正是通过xworker.exampletutorialthingEditor.BaseEditor创建的，它的属性输入表单如图。</p>
<p style="text-align: center"><img height="453" alt="" width="480" src="/files/Image/thingexplorer/thingEditorTutorial/defaultEditorExample.jpg" /></p>
<p style="text-align: center">&nbsp;</p>
#$@text#$@
sdescriptors
xworker.html.base.container.childs/@htmlCode
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingForm/@success
sname
success
stype
form
scontentType
text/html;
svalue
xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingForm/@forms
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore
sname
thingEditorMore
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore/@forms
sname
forms
sbelongToHtml
true
sstyle
default
SotherHeads
#$@text#$@
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<LINK REL ="stylesheet" TYPE="text/css" HREF="fckeditor/editor/css/fck_editorarea.css" TITLE="Style"/>
<script type="text/javascript" src="js/xworker/InnerBrowserUtil.js"></script>
#$@text#$@
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore/@forms/@htmlCode
sname
htmlCode
ShtmlCode
#$@text#$@
<p><b><span style="font-size: small">如何定义事物属性编辑控件</span><span style="font-size: xx-small"><span><a onClick="invoke('thing:xworker.ide.worldExplorer.swt.document.ThingEditorTutorial:/@thingEditorMore/@forms/@htmlCode')" href="javascript:void(0)">edit</a></span></span></b></p>
<p><b>扩充属性编辑控件的属性</b></p>
<p>&nbsp;&nbsp;&nbsp; 可以通过定义属性事物的SWT编辑设置子事物添加输入控件的事件处理、前景、背景等扩充。</p>
<p>&nbsp;&nbsp;&nbsp; 添加的方法如下：</p>
<ol>
    <li>添加属性事物的SWT编辑设置子事物，<br />
    &nbsp;<img height="116" alt="" width="285" src="/files/Image/thingexplorer/thingEditorTutorial/attr_addSwtObj.jpg" /></li>
    <li>SWT编辑设置添加后添加SWT编辑设置的输入扩充子事物，<br />
    <img height="129" alt="" width="282" src="/files/Image/thingexplorer/thingEditorTutorial/attr_extendSwt.jpg" /></li>
    <li>输入扩充子事物添加后，可以向输入扩充添加以下子事物。<br />
    <img height="186" alt="" width="285" src="/files/Image/thingexplorer/thingEditorTutorial/attr_extendSwtchild.jpg" /></li>
</ol>
<p><b>自定义属性编辑控件</b></p>
<div>&nbsp;&nbsp;&nbsp; 可以在属性事物的SWT编辑设置下自定义属性编辑控件，方法如下：</div>
<ol>
    <li>添加属性事物的SWT编辑设置子事物，<br />
    &nbsp;<img height="116" alt="" width="285" src="/files/Image/thingexplorer/thingEditorTutorial/attr_addSwtObj.jpg" /></li>
    <li>SWT编辑设置添加后添加SWT编辑设置的输入编辑器子事物，<br />
    &nbsp; <img height="132" alt="" width="281" src="/files/Image/thingexplorer/thingEditorTutorial/attr_addeditor.jpg" /></li>
    <li>在输入编辑器事物控件下可以添加编辑属性输入控件子事物，<br />
    &nbsp; <img height="289" alt="" width="283" src="/files/Image/thingexplorer/thingEditorTutorial/attr_editor_child.jpg" /></li>
</ol>
<p>&nbsp;&nbsp;&nbsp; 自定义的属性输入控件本质上是调用输入编辑器的create方法创建属性编辑控件，默认的create方法是依次调用属性输入控件下的所有子事物的create方法，可以重载create方法。</p>
<p><b>自定义Model</b></p>
<p>&nbsp;&nbsp;&nbsp; Model的主要用于对属性控件的取值和赋值，默认情况下会根据属性事物创建一个Model，也可以通过自定义Model取代默认创建的Model。</p>
<p>&nbsp;&nbsp;&nbsp; 自定义Model的方法如下：可以在属性事物的SWT编辑设置下自定义属性编辑控件，方法如下：</p>
<ol>
    <li>添加属性事物的SWT编辑设置子事物，<br />
    &nbsp;<img height="116" alt="" width="285" src="/files/Image/thingexplorer/thingEditorTutorial/attr_addSwtObj.jpg" /></li>
    <li>SWT编辑设置添加后添加SWT编辑设置的输入输入模型子事物，<br />
    &nbsp; <img height="128" alt="" width="284" src="/files/Image/thingexplorer/thingEditorTutorial/attr_addModel.jpg" /></li>
    <li>编辑输入模型。<br />
    &nbsp; <img height="247" alt="" width="482" src="/files/Image/thingexplorer/thingEditorTutorial/attr_modeledit.jpg" /></li>
</ol>
<p><b>属性输入控件示例</b></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 事物<a onClick="invoke('thing.xworker.example.tutorialthingEditor.EditorMore')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.EditorMore</a>展示了如何自定义属性的输入控件，可以打开<a onClick="invoke('thingxworker.exampletutorialthingEditor.ThingCreatedByEditorMore')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.ThingCreatedByEditorMore</a>事物查看具体效果。</p>
<p style="text-align: center">&nbsp;<img height="82" alt="" width="453" src="/files/Image/thingexplorer/thingEditorTutorial/attr_xworker.example.jpg" /></p>
#$@text#$@
sdescriptors
xworker.html.base.container.childs/@htmlCode
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore/@success
sname
success
stype
form
scontentType
text/html;
svalue
xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore/@forms
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore1
sname
thingEditorMore1
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore1/@forms
sname
forms
sbelongToHtml
true
sstyle
default
SotherHeads
#$@text#$@
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<LINK REL ="stylesheet" TYPE="text/css" HREF="fckeditor/editor/css/fck_editorarea.css" TITLE="Style"/>
<script type="text/javascript" src="js/xworker/InnerBrowserUtil.js"></script>
#$@text#$@
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore1/@forms/@htmlCode
sname
htmlCode
ShtmlCode
#$@text#$@
<p><span style="font-size: small"><b>如何自定义事物编辑表单<a onClick="invoke('thing:xworker.ide.worldExplorer.swt.document.ThingEditorTutorial:/@thingEditorMore1/@forms/@htmlCode')" href="javascript:void(0)"><span style="font-size: xx-small">edit</span></a></b></span></p>
<p>&nbsp;<b>扩充事物编辑器</b></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 可以通过定义描述者事物的SWT编辑设置子事物添加表单扩充。</p>
<p>&nbsp;&nbsp;&nbsp; 添加的方法如下：</p>
<ol>
    <li>添加属事物的SWT编辑设置子事物，<br />
    <img height="186" alt="" width="280" src="/files/Image/thingexplorer/thingEditorTutorial/thing_addEditor.jpg" />&nbsp;</li>
    <li>SWT编辑设置添加后添加SWT编辑设置的SWT编辑器输入扩充子事物。<br />
    <img height="122" alt="" width="278" src="/files/Image/thingexplorer/thingEditorTutorial/thing_addExtendChild.jpg" /></li>
    <li>可以添加SWT编辑器输入扩充定义的子事物。<br />
    SWT编辑输入扩充继承了Composite，可以添加Composite相关的子事物。<br />
    &nbsp;&nbsp;</li>
</ol>
<p><b>自定义事物编辑器</b></p>
<div>&nbsp;&nbsp;&nbsp; 可以在属性事物的SWT编辑设置下自定义属性编辑控件，方法如下：</div>
<ol>
    <li>添加属性事物的SWT编辑设置子事物。<br />
    &nbsp;<img height="186" alt="" width="280" src="/files/Image/thingexplorer/thingEditorTutorial/thing_addEditor.jpg" /></li>
    <li>SWT编辑设置添加后添加SWT编辑设置的输入编辑器子事物。<br />
    <img height="117" alt="" width="279" src="/files/Image/thingexplorer/thingEditorTutorial/thing_addEditor1.jpg" /><br />
    &nbsp;&nbsp;</li>
</ol>
<p>&nbsp;&nbsp;&nbsp; 自定义的事物编辑表单本质上是调用编辑器的create方法创建事物编辑表单，默认的create方法是依次调用事物编辑器事物下的所有子事物的create方法，可以重载create方法。</p>
<p>&nbsp;&nbsp;&nbsp; 自定义事物编辑表单时需要定义表单的Model，所以需要实现createModel方法。</p>
<p><b>属性输入控件示例</b></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 事物<a onClick="invoke('thing.xworker.example.tutorialthingEditor.EditorMore1')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.EditorMore1</a>展示了如何自定义的事物编辑表单，可以打开<a onClick="invoke('thingxworker.exampletutorialthingEditor.ThingCreatedByEditorMore1')" href="javascriptvoid(0)">xworker.exampletutorialthingEditor.ThingCreatedByEditorMore1</a>事物查看具体效果。</p>
<p style="text-align: center">&nbsp;<img height="60" alt="" width="609" src="/files/Image/thingexplorer/thingEditorTutorial/thing_editor_xworker.example1.jpg" /></p>
<p style="text-align: center"><img height="88" alt="" width="535" src="/files/Image/thingexplorer/thingEditorTutorial/thing_editor_xworker.example2.jpg" /></p>
<p style="text-align: center">&nbsp;</p>
#$@text#$@
sdescriptors
xworker.html.base.container.childs/@htmlCode
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore1/@success
sname
success
stype
form
scontentType
text/html;
svalue
xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingEditorMore1/@forms
sdescriptors
xworker.http.controls.SimpleControl/@result
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingMenu
sname
thingMenu
sdescriptors
xworker.http.ControlSet/@SimpleControl
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingMenu/@forms
sname
forms
sbelongToHtml
true
sstyle
default
SotherHeads
#$@text#$@
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<LINK REL ="stylesheet" TYPE="text/css" HREF="fckeditor/editor/css/fck_editorarea.css" TITLE="Style"/>
<script type="text/javascript" src="js/xworker/InnerBrowserUtil.js"></script>
#$@text#$@
sdescriptors
xworker.http.controls.SimpleControl/@view
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingMenu/@forms/@htmlCode
sname
htmlCode
ShtmlCode
#$@text#$@
<p><span style="font-size: small"><b>如何定义事物功能菜单<a onClick="invoke('thing:xworker.ide.worldExplorer.swt.document.ThingEditorTutorial:/@thingMenu/@forms/@htmlCode')" href="javascript:void(0)"><span style="font-size: xx-small">edit</span></a></b></span></p>
<p>&nbsp;&nbsp;&nbsp; 事物的功能菜单能够处理当前编辑的事物，在默认事物编辑器上以下拉菜单的方式显示。</p>
<p>&nbsp;&nbsp;&nbsp; 事物的功能菜单的定义有两种方式，一是直接在事物的描述者中定义，另一种方法是在每个项目的config事物管理器下的名为ProjectMenuSwt下定义。</p>
<p><b>通过描述者定义功能菜单</b></p>
<p>&nbsp;&nbsp;&nbsp; 定义事物的描述者时可以增加swtMenus（Swt菜单集合），方法如下：</p>
<ol>
    <li>添加swtMenus子事物。 <br />
    <img height="186" alt="" width="281" src="/files/Image/thingexplorer/thingEditorTutorial/menu_addSwtMenus.jpg" />&nbsp;<br />
    &nbsp;</li>
    <li>在swtMenus子事物下添加menuDefine（菜单定义）子事物&nbsp; 。<br />
    <img height="114" alt="" width="280" src="/files/Image/thingexplorer/thingEditorTutorial/menu_addMenuDefine.jpg" /><br />
    菜单定义定义了一级菜单的名称，比如象常用的菜单File, Edit, View, Help等。系统默认的一级菜单有file,thing,edit,view,project,world,tool,help等，如果只使用这些菜单那么可以不添加菜单定义子事物。 <br />
    &nbsp;</li>
    <li>在swtMenus子事物下添加menuSetting（菜单设置）子事物。<br />
    &nbsp;<img height="115" alt="" width="283" src="/files/Image/thingexplorer/thingEditorTutorial/menu_addMenuSetting.jpg" /> <br />
    在在单设置事物中通过所属菜单设置第一级菜单的名称，如果没有对应的第一级菜单，那么有可能菜单不能正确起作用。<br />
    &nbsp;<img height="85" alt="" width="398" src="/files/Image/thingexplorer/thingEditorTutorial/menu_menuSetting.jpg" /> <br />
    &nbsp;</li>
    <li>在菜单设置子事物下定义具体的菜单事物。<br />
    &nbsp;<img height="257" alt="" width="472" src="/files/Image/thingexplorer/thingEditorTutorial/menu_menuItem.jpg" /></li>
</ol>
<p><b>设置全局菜单</b></p>
<p>&nbsp;&nbsp;&nbsp; 每一个项目下的config事物管理器下的ProjectMenuSet事物是默认的设置全局菜单的地方。</p>
<p>&nbsp;&nbsp;&nbsp; 全局菜单的定义和在描述者定义菜单基本相同，只是在全局菜单设置用要选择类型和数据名称，这些是作为过滤菜单的条件。</p>
<p><b>菜单的功能实现</b></p>
<p>&nbsp;&nbsp;&nbsp; 菜单条目事物中的地址属性可以指向一个脚本，可以通过这个脚本执行一定的功能。</p>
<p>&nbsp;&nbsp;&nbsp; 菜单执行时会传入特定的变量上下文。</p>
<p><b>示例</b></p>
<p>&nbsp;&nbsp;&nbsp; 参看描述者<a onClick="invoke('thing.xworker.example.tutorialbase.FirstThing')" href="javascriptvoid(0)">xworker.exampletutorialbase.FirstThing</a>如何定义菜单，可以通过<a onClick="invoke('thingxworker.exampletutorialbase.CreatedByFirstThing')" href="javascriptvoid(0)">xworker.exampletutorialbase.CreatedByFirstThing</a>事物查看具体效果。</p>
#$@text#$@
sdescriptors
xworker.html.base.container.childs/@htmlCode
@xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingMenu/@success
sname
success
stype
form
scontentType
text/html;
svalue
xworker.ide.worldExplorer.swt.document.ThingEditorTutorial/@thingMenu/@forms
sdescriptors
xworker.http.controls.SimpleControl/@result
