@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer
sname
ExceptionViewer
slabel
ExceptionViewer
sid
ExceptionViewer
sdescriptors
xworker.swt.widgets.Display
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell
sname
shell
stext
"异常查看器"
sNO_TRIM
false
sCLOSE
true
sTITLE
true
sMIN
true
sMAX
true
sBORDER
false
sRESIZE
true
sON_TOP
false
sTOOL
false
sNO_FOCUS
false
swidth
-1
sheight
-1
scenterScreen
true
spack
false
smaximized
false
sfullScreen
false
sH_SCROLL
false
sV_SCROLL
false
sNO_BACKGROUND
false
sNO_MERGE_PAINTS
false
sNO_REDRAW_RESIZE
false
sNO_RADIO_GROUP
false
sEMBEDDED
false
sDOUBLE_BUFFERED
false
scapture
false
senabled
true
sredraw
true
svisible
true
sid
shell
sdescriptors
xworker.swt.widgets.Display/@Shell
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@shellFillLayout
sname
shellFillLayout
stype
SWT.HORIZONTAL
sid
shellFillLayout
slabel
shellFillLayout
sdescriptors
xworker.swt.Layouts/@FillLayout
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash
sname
mainSash
sstyle
HORIZONTAL
sSMOOTH
false
sweights
20,80
sBORDER
false
sH_SCROLL
false
sV_SCROLL
false
sNO_BACKGROUND
false
sNO_FOCUS
false
sNO_MERGE_PAINTS
false
sNO_REDRAW_RESIZE
false
sNO_RADIO_GROUP
false
sEMBEDDED
false
sDOUBLE_BUFFERED
false
scapture
false
senabled
true
sredraw
true
svisible
true
sid
mainSash
sdescriptors
xworker.swt.Widgets/@SashForm
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@exceptionList
sname
exceptionList
sstyle
SINGLE
sH_SCROLL
true
sV_SCROLL
true
sBORDER
true
scapture
false
senabled
true
sredraw
true
svisible
true
sid
exceptionList
slabel
exceptionList
sdescriptors
xworker.swt.Widgets/@List
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@exceptionList/@Listeners
sname
Listeners
sid
Listeners
slabel
Listeners
sdescriptors
xworker.swt.widgets.Widget/@Listeners
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@exceptionList/@Listeners/@exceptionListSelection
sname
exceptionListSelection
stype
Selection
sid
exceptionListSelection
slabel
exceptionListSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@exceptionList/@Listeners/@exceptionListSelection/@GroovyAction
sname
GroovyAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.TableItem;

import org.xmeta.Action;
import org.xmeta.Thing;

for(item in causeTable.getItems()){
    item.dispose();
}
for(item in callerTable.getItems()){
    item.dispose();
}

def index = exceptionList.getSelectionIndex() ;
def exp = exps.get(index);

def causes = [:];
causes.put(exp, exp);
def item = new TableItem(causeTable, SWT.NONE);
item.setData(exp.exception);
item.setText([exp.exception.toString()]);
def cause = exp.exception.getCause();
while(true){
    if(cause != null && causes.get(cause) == null){
        causes.put(cause, cause);
        def item1 = new TableItem(causeTable, SWT.NONE, 0);
        item1.setData(cause);
        item1.setText([cause.toString()]);	
        cause = cause.getCause();
    }else{
        break;
    }
}
for(caller in exp.getCallerStack()){
    //log.info("caller =" + caller);
    def thing = caller;
    if(caller instanceof Action){
        thing = caller.getThing();
    }
    if(thing != null){
        def item1 = new TableItem(callerTable, SWT.NONE, 0);
        item1.setData(thing);
        item1.setText([thing.metadata.path]);	
    }
}
#$@text#$@
sid
GroovyAction
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm
sname
rightSashForm
sstyle
VERTICAL
sSMOOTH
false
sweights
30,80
sBORDER
false
sH_SCROLL
false
sV_SCROLL
false
sNO_BACKGROUND
false
sNO_FOCUS
false
sNO_MERGE_PAINTS
false
sNO_REDRAW_RESIZE
false
sNO_RADIO_GROUP
false
sEMBEDDED
false
sDOUBLE_BUFFERED
false
scapture
false
senabled
true
sredraw
true
svisible
true
sid
rightSashForm
sdescriptors
xworker.swt.Widgets/@SashForm
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder
sname
tabFolder
sstyle
TOP
sBORDER
false
sFLAT
false
sCLOSE
false
sSINGLE
false
sMRUVisible
false
ssimple
false
sH_SCROLL
false
sV_SCROLL
false
sNO_BACKGROUND
false
sNO_FOCUS
false
sNO_MERGE_PAINTS
false
sNO_REDRAW_RESIZE
false
sNO_RADIO_GROUP
false
sEMBEDDED
false
sDOUBLE_BUFFERED
false
scapture
false
senabled
true
sredraw
true
svisible
true
sxw_cl_global
false
sid
tabFolder
sdescriptors
xworker.swt.Widgets/@CTabFolder
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab
sname
exceptionTab
stext
Exceptions
sCLOSE
false
sid
exceptionTab
slabel
exceptionTab
sdescriptors
xworker.swt.custom.CTabFolder/@CTabItem
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab/@causeTable
sname
causeTable
sselectStyle
SINGLE
sV_SCROLL
true
sH_SCROLL
true
sCHECK
false
sFULL_SELECTION
true
sHIDE_SELECTION
false
sBORDER
true
slineVisible
true
smultipleColumns
true
sheaderVisible
true
ssortIndicator
true
smoveableColumns
true
sheadImages
false
ssubImages
false
sVIRTUAL
false
scapture
false
senabled
true
sredraw
true
svisible
true
sxw_cl_global
false
sid
causeTable
slabel
causeTable
sdescriptors
xworker.swt.Widgets/@Table
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab/@causeTable/@messageColumn
sname
messageColumn
stext
"错误信息"
swidth
600
sid
messageColumn
slabel
messageColumn
sdescriptors
xworker.swt.widgets.Table/@TableColumn
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab/@causeTable/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab/@causeTable/@listeners/@causeTableSelection
sname
causeTableSelection
stype
Selection
sid
causeTableSelection
slabel
causeTableSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@exceptionTab/@causeTable/@listeners/@causeTableSelection/@GroovyAction
sname
GroovyAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;

import org.eclipse.swt.SWT;
import org.eclipse.swt.custom.StyleRange;

def out = new ByteArrayOutputStream();
def writer = new PrintWriter(out);

def exp = causeTable.getSelection()[0].getData();
exp.printStackTrace(writer);
writer.flush();

consoleText.setText("");
String lineStr = out.toString();
def lines = lineStr.split("\n");
for(int i=0; i<lines.length; i++){
    def line = lines[i];
    int lineOffset = consoleText.getText().length();
     consoleText.append(line + "\n");
     
     def offset = consoleText.getText().length();
     consoleText.setCaretOffset(offset);
     consoleText.setSelection(offset, offset);
     consoleText.showSelection();
            
     if(line.startsWith("\tat ")){         
         //判断是Exception的情况            
         String clss = line.substring(4, line.indexOf("("));
         clss = clss.substring(0, clss.lastIndexOf("."));
                    
         //为提高速度，始终显示                           
         //def scriptObj = UtilAction.getActionThing(clss);
         //if(scriptObj != null){
         if(true){
             //println clss;
             try{
                 int start = 4;
                 int length = clss.length();
                 def colorBlue = shell.getDisplay().getSystemColor(SWT.COLOR_DARK_BLUE );
                 StyleRange range = new StyleRange(lineOffset + start, length, colorBlue, null);
                 range.underline = true;
             
                 consoleText.setStyleRange(range);
             }catch(Exception eeeee){
                 log.info(eeeee);
             }
         }
         
         continue;
     }
     
     int leftIndex = line.indexOf("(");
     int rightIndex = line.indexOf(")");
     int commerIndex = line.indexOf(":", leftIndex);
     if(leftIndex != -1 && rightIndex != -1 && (commerIndex > leftIndex && commerIndex < rightIndex)){
         //是Log4j的输出格式
         def clss = line.substring(leftIndex + 1, commerIndex); 
         //println clss;
         //def scriptObj =  UtilAction.getActionThing(clss);
         //if(scriptObj != null){
         if(true){
             //println clss;
             try{
                 int start = leftIndex + 1;
                 int length = clss.length();
                 def colorBlue = shell.getDisplay().getSystemColor(SWT.COLOR_DARK_BLUE );
                 StyleRange range = new StyleRange(lineOffset + start, length, colorBlue, null);
                 range.underline = true;
                 consoleText.setStyleRange(range);
             }catch(Exception eeeee){
             }
         }
     }                 
 }
#$@text#$@
sid
GroovyAction
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab
sname
stackTab
stext
Callers
sCLOSE
false
sid
stackTab
slabel
stackTab
sdescriptors
xworker.swt.custom.CTabFolder/@CTabItem
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab/@causeTable
sname
callerTable
sselectStyle
SINGLE
sV_SCROLL
true
sH_SCROLL
true
sCHECK
false
sFULL_SELECTION
true
sHIDE_SELECTION
true
sBORDER
true
slineVisible
true
smultipleColumns
true
sheaderVisible
true
ssortIndicator
true
smoveableColumns
true
sheadImages
false
ssubImages
false
sVIRTUAL
false
scapture
false
senabled
true
sredraw
true
svisible
true
sxw_cl_global
false
sid
causeTable
slabel
callerTable
sdescriptors
xworker.swt.Widgets/@Table
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab/@causeTable/@messageColumn
sname
messageColumn
stext
"调用栈列表"
swidth
600
sid
messageColumn
slabel
messageColumn
sdescriptors
xworker.swt.widgets.Table/@TableColumn
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab/@causeTable/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab/@causeTable/@listeners/@causeTableSelection
sname
causeTableSelection
stype
DefaultSelection
sid
causeTableSelection
slabel
causeTableSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@tabFolder/@stackTab/@causeTable/@listeners/@causeTableSelection/@GroovyAction
sname
GroovyAction
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
def thing = event.item.getData();
explorerActions.doAction("openThing", ["thing":thing]);
#$@text#$@
sid
GroovyAction
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText
sname
consoleText
sstyle
MULTI
sFULL_SELECTION
false
sREAD_ONLY
true
sWRAP
false
sH_SCROLL
true
sV_SCROLL
true
sBORDER
true
salign
LEFT
slabel
consoleText
sid
stackText
sdescriptors
xworker.swt.Widgets/@StyledText
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@font
sname
font
sid
font
slabel
font
sdescriptors
xworker.swt.Commons/@font
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@font/@consoleText
sname
consoleTextFont
slabel
consoleTextFont
sfontData
"Courier New|10|0|#000000"
sid
consoleText
sdescriptors
xworker.swt.Commons/@font/@Font
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@listeners/@consoleTextMouseHover
sname
consoleTextMouseMove
stype
MouseMove
sid
consoleTextMouseHover
slabel
consoleTextMouseMove
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@listeners/@consoleTextMouseHover/@GroovyAction
sname
GroovyAction
sisSynchronized
true
sthrowException
true
suseOtherAction
false
svarScope
Global
Scode
#$@text#$@
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Point;

Point p = new Point(event.x, event.y);
try{
    int offset = consoleText.getOffsetAtLocation(p);
    def range = consoleText.getStyleRangeAtOffset(offset);

    if(range != null && range.underline == true){
        //是类    
        def cursor = shell.getDisplay().getSystemCursor(SWT.CURSOR_HAND);
        def oldCursor = consoleText.getCursor();
        if(oldCursor != cursor){
            consoleText.setData("oldCursor", oldCursor);
        }
        consoleText.setCursor(cursor);
    }else{
        def cur = consoleText.getData("oldCursor");
        if(cur != null){
            consoleText.setCursor(cur);
            consoleText.setData("oldCursor", null);
        }
    }
}catch(Exception e){
    def cur = consoleText.getData("oldCursor");
    if(cur != null){
        consoleText.setCursor(cur);
        consoleText.setData("oldCursor", null);
    }
}
#$@text#$@
sid
GroovyAction
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@listeners/@consoleTextMouseDown
sname
consoleTextMouseDown
stype
MouseDown
sid
consoleTextMouseDown
slabel
consoleTextMouseDown
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@mainSash/@rightSashForm/@stackText/@listeners/@consoleTextMouseDown/@GroovyAction
sname
GroovyAction
sisSynchronized
true
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.util.UtilAction;

import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.MessageBox;

if(event.button == 1){
    Point p = new Point(event.x, event.y);
    try{
        int offset = -1;
        def range = null;
        try{
            offset = consoleText.getOffsetAtLocation(p);
            range = consoleText.getStyleRangeAtOffset(offset);
        }catch(Exception e){
        }
  
        if(range != null && range.underline == true){
            int lineIndex = consoleText.getLineAtOffset(offset);
            int lineStart = consoleText.getOffsetAtLine(lineIndex);
            int lineEnd = consoleText.getOffsetAtLine(lineIndex + 1);            
            String className = "";
            def line = consoleText.getText(lineStart, lineEnd - 1);
            //println line;
            for(r in consoleText.getStyleRanges(lineStart, lineEnd - lineStart - 1)){
                if(r.underline == true && r.length > 0){
                    //println r.start + ":" + r.length;
                    className += consoleText.getText(r.start, r.start + r.length - 1);
                }else{
                    break;
                }
            }
            //println className;
            className = className.split("[\$]")[0];
            def scriptObject = UtilAction.getActionThing(className);
            //log.info(scriptObject);
            if(scriptObject != null){
                //打开数据对象，返回数据对象所在binding
                //log.info("dd");
                def bin = explorerActions.doAction("openThing", ["thing":scriptObject]);
                def modelBin = bin.get("currentModelContext");
                def input = modelBin.get("codeInput");
                if(input != null){
                    int leftIndex = line.indexOf("(");
                    String lineCount = line.substring(line.indexOf(":", leftIndex) + 1, line.lastIndexOf(")"));
                    try{
                        int lIndex = Integer.parseInt(lineCount) - 4;                    
                        offset = input.getOffsetAtLine(lIndex);
                        input.setCaretOffset(offset);
                        input.setSelection(offset, offset);
                        input.showSelection();
                    }catch(Exception ){
                    }
                }
            }else{
                //查看是否是在源文件目录下的对象
                def fileName = className.replace('.', '/');
                fileName = "src/xworker/" + fileName + ".java";
                File f = new File(fileName);
                //log.info(f.getAbsolutePath());
                if(!f.exists()){
                     fileName = "src/core/" + fileName + ".java";  
                     f = new File(fileName);
                }
                
                if(f.exists()){
                     explorerActions.doAction("openTextFile", ["file":f]);
                }else{
                     
                }
            }
        }
    }catch(Exception e){
        e.printStackTrace();
    }
}
#$@text#$@
sid
GroovyAction
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@xworker.ide.worldexplorer.swt.debuger.ExceptionViewer/@shell/@init
sname
init
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.debug.Debuger;

def debuger = Debuger.getDebuger();
def exceptions = debuger.getLastExceptions();

def exps = [];
for(i=0; i<exceptions.size(); i++){
    exps.add(exceptions.get(i));
}

for(exp in exps){
    def excetpion = exp.exception;
    exceptionList.add(excetpion.toString());
}

actionContext.getScope(0).put("exps", exps);
#$@text#$@
sid
init
sdescriptors
xworker.swt.Widgets/@Code
