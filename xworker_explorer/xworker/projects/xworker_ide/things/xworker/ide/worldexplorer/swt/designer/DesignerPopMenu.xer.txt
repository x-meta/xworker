^1440134714651
@
sname
DesignerPopMenu
sstyle
DROP_DOWN
sNO_RADIO_GROUP
false
salign
LEFT_TO_RIGHT
sid
DesignerPopMenu
slabel
DesignerPopMenu
sdescriptors
xworker.swt.widgets.Menu
@/@openThingItem
sname
openThingItem
stext
res:res.w_exp:openThing:打开事物
sstyle
PUSH
sselected
false
senabled
true
sid
openThingItem
slabel
openThingItem
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@openThingItem/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@/@openThingItem/@listeners/@openThingItemSelection
sname
openThingItemSelection
stype
Selection
sref
xworker.ide.worldexplorer.swt.designer.DesignerPopMenu/@actions/@openThing
sid
openThingItemSelection
slabel
openThingItemSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@/@sep0
sname
sep0
sstyle
SEPARATOR
sselected
false
senabled
true
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@quickEditItem
sname
quickEditItem
stext
label:xworker.ide.worldexplorer.swt.i18n.I18nResource/@projectTreePopMenu/@quickEdit
sselected
false
senabled
true
sid
quickEditItem
slabel
quickEditItem
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@quickEditItem/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@/@quickEditItem/@listeners/@quickEditItemSelection
sname
quickEditItemSelection
stype
Selection
sref
xworker.ide.worldexplorer.swt.designer.DesignerPopMenu/@actions/@quickEdit
sid
quickEditItemSelection
slabel
quickEditItemSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@/@viewActionContextItem
sname
viewActionContextItem
stext
label:xworker.ide.worldexplorer.swt.i18n.I18nResource/@common/@ActionContext
sstyle
PUSH
sselected
false
senabled
true
sid
viewActionContextItem
slabel
viewActionContextItem
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@viewActionContextItem/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@/@viewActionContextItem/@listeners/@helpAndNotesSelection
sname
viewActionContextSelection
stype
Selection
sid
helpAndNotesSelection
slabel
viewActionContextSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@/@viewActionContextItem/@listeners/@helpAndNotesSelection/@viewActinContxt
sname
viewActinContxt
sactionContextName
var:context
sswtControl
var:control
sinterpretationType
Self
sattributeTemplate
false
schildsAttributeTemplate
false
svarScope
Local
sisSynchronized
false
sthrowException
true
suseOtherAction
false
screateLocalVarScope
false
ssaveReturn
false
sdisableGlobalContext
false
sid
viewActinContxt
sdescriptors
xworker.ide.debug.action.DebugActions/@ActionContextViewer
@/@sep1
sname
sep1
sstyle
SEPARATOR
sid
sep1
slabel
sep1
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@helpAndNotes
sname
helpAndNotes
stext
label:xworker.ide.worldexplorer.swt.i18n.I18nResource/@swtdesinger/@helpAndNotes
sstyle
PUSH
sselected
false
senabled
true
sid
helpAndNotes
slabel
helpAndNotes
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@helpAndNotes/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@/@helpAndNotes/@listeners/@helpAndNotesSelection
sname
helpAndNotesSelection
stype
Selection
sref
xworker.ide.worldexplorer.swt.designer.DesignerPopMenu/@actions/@openHelpAndNotes
sid
helpAndNotesSelection
slabel
helpAndNotesSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@/@sep4
sname
sep4
sstyle
SEPARATOR
sselected
false
senabled
true
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
sth_createIndex
false
sth_mark
false
@/@openSelfItem
sname
openSelfItem
stext
label:xworker.ide.worldexplorer.swt.i18n.I18nResource/@projectTreeMenu/@editCuffentMenu
sstyle
PUSH
sselected
false
senabled
true
sid
openSelfItem
slabel
openSelfItem
sdescriptors
xworker.swt.widgets.Menu/@MenuItem
@/@openSelfItem/@listeners
sname
listeners
sid
listeners
slabel
listeners
sdescriptors
xworker.swt.events.Listeners/@listeners
@/@openSelfItem/@listeners/@openSelfSelection
sname
openSelfSelection
stype
Selection
sref
xworker.ide.worldexplorer.swt.designer.DesignerPopMenu/@actions/@openSelf
sid
openSelfSelection
slabel
openSelfSelection
sdescriptors
xworker.swt.events.Listeners/@listeners/@Listener
@/@actions
sname
actions
sid
actions
slabel
actions
sdescriptors
xworker.lang.MetaThing/@actions
@/@actions/@quickEdit
sname
quickEdit
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.swt.design.Designer;
import org.xmeta.ActionContext;

def explorerDisplay = Designer.getExplorerDisplay();
def explorerActions = Designer.getExplorerActions();

if(explorerDisplay != null && explorerActions != null){
	def thing = world.getThing(thingPath);
	//log.info("thng=" + thing);
	if(thing != null){
	    def parentShell = Designer.getExplorerShell();
	    def ac = new ActionContext();
	    ac.put("explorerActions", explorerActions);
	    ac.put("explorerContext", explorerActions.getActionContext());
	    ac.put("parent", parentShell);
	    ac.put("thing", thing);
	    ac.put("control", control);
	    //def shellThing = world.getThing("xworker.ide.worldexplorer.swt.designer.QuickEditor/@shell");
	    def shellThing = world.getThing("xworker.ide.worldexplorer.swt.designer.DesignerToolbarDialog");
	    def shell = shellThing.doAction("create", ac);
	    shell.open();
	}else{
		log.warn("创建控件的事物为空！");
	}
}else{
	log.warn("没有指定打开事物的浏览器！");
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sid
quickEdit
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@openThing
sname
openThing
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.swt.design.Designer;

def explorerDisplay = Designer.getExplorerDisplay();
def explorerActions = Designer.getExplorerActions();

if(explorerDisplay != null && explorerActions != null){
	def thing = world.getThing(thingPath);
	if(thing != null){
		explorerDisplay.asyncExec([
			run :{
				def ac = explorerActions.getActionContext();
				def shell =  ac.get("shell");
				if(shell != null){
					shell.forceActive();
				}
				
				def parameters = [:];
				parameters.put("thing", thing);
				explorerActions.doAction("openThing", parameters);;
			}
		] as Runnable);
	}else{
		log.warn("创建控件的事物为空！");
	}
}else{
	log.warn("没有指定打开事物的浏览器！");
}
#$@text#$@
sid
openThing
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@refresh
sname
refresh
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
def composite = control.getParent();
			
def thing = world.getThing(thingPath);

if(thing != null && composite != null){
    def index = -1;
    def controls = composite.getChildren();
    for(int i=0; i<controls.length; i++){
        if(controls[i] == control){
            index = i;
            break;
        }
    }

    if(index != -1){        
        control.dispose();
    	def bindings = actionContext.push();
    	try{
    		bindings.put("parent", composite);
    		
    		def newControl = thing.doAction("create", actionContext);
    		if(newControl != null){
    		    controls = composite.getChildren();
    		    controls[index] = newControl;    		    
    		    composite.changed(controls);
                composite.layout();
    		    log.info("xxxxxxxxxxx");
    		}else{
       		    composite.layout();
       		}
    	}finally{
    		actionContext.pop();
    	}
    }
	
}
#$@text#$@
sinterpretationType
Action
sid
refresh
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@refreshParent
sname
refreshParent
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
def composite = control.getParent();
def parentThingPath =  composite.getData("_designer_thingPath");
def parentActionContext = composite.getData("_designer_actionContext");

if(parentThingPath == null){
	log.info("父控件没有创建者事物的路径！");
	return;
}

def thing = world.getThing(parentThingPath);

if(thing != null){
	for(control in composite.getChildren()){
		control.dispose();
	}

	def bindings = parentActionContext.push();
	try{
		bindings.put("parent", composite);
		
		for(child in thing.getAllChilds()){
			child.doAction("create", parentActionContext);
		}

		composite.layout();

	}finally{
		actionContext.pop();
	}
}
#$@text#$@
sid
refreshParent
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@refreshChild
sname
refreshChild
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import org.eclipse.swt.widgets.Composite;

def thing = world.getThing(thingPath);
def parentActionContext = control.getData("_designer_actionContext");			
if(thing != null){
	if(control instanceof Composite){
		def composite = control;
		for(childControl in composite.getChildren()){
			childControl.dispose();
		}
	}

	def bindings = parentActionContext.push();
	try{
		bindings.put("parent", control);
		
		for(child in thing.getAllChilds()){
			child.doAction("create", parentActionContext);
		}
		
		control.pack();
		if(control instanceof Composite){
		    control.layout();
		}
	}finally{
		parentActionContext.pop();
	}
}
#$@text#$@
sid
refreshChild
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@refreshControl
sname
refreshControl
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
def composite = control.getParent();
			
def thing = world.getThing(thingPath);

if(thing != null){
	control.dispose();
	def bindings = actionContext.push();
	try{
		bindings.put("parent", composite);
		
		thing.doAction("create", actionContext);
		
		composite.layout();
	}finally{
		actionContext.pop();
	}
}
#$@text#$@
sinterpretationType
Action
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
sth_mark
false
@/@actions/@openThingRelation
sname
openThingRelation
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import org.xmeta.ActionContext;
import org.xmeta.Thing;
import xworker.swt.design.Designer;

def explorerDisplay = Designer.getExplorerDisplay();
def explorerActions = Designer.getExplorerActions();

if(explorerDisplay != null && explorerActions != null){
	def thing = world.getThing(thingPath);
	if(thing != null){
	    def exploerActionContext = explorerActions.getActionContext();
        ActionContext context = new ActionContext();
        context.put("parent", exploerActionContext.shell);
        context.put("explorerActions", explorerActions);
        context.put("explorerContext", exploerActionContext);
        context.put("utilBrowser", exploerActionContext.utilBrowser);
        context.put("thing", thing);
        
        def robot = world.getThing("xworker.ide.assist.AlphaRobot");
        def session = new Thing("xworker.ide.assist.session.sessions.SwtUIDesignSession");
        robot.doAction("startSession", context, ["session":session]);
	}else{
		log.warn("创建控件的事物为空！");
	}
}else{
	log.warn("没有指定打开事物的浏览器！");
}
#$@text#$@
sid
openThingRelation
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@openSelf
sname
openSelf
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import xworker.swt.design.Designer;

def explorerDisplay = Designer.getExplorerDisplay();
def explorerActions = Designer.getExplorerActions();

if(explorerDisplay != null && explorerActions != null){
	def thing = world.getThing("xworker.ide.worldexplorer.swt.designer.DesignerPopMenu");
	if(thing != null){
		explorerDisplay.asyncExec([
			run :{
				def ac = explorerActions.getActionContext();
				def shell =  ac.get("shell");
				if(shell != null){
					shell.forceActive();
				}
				
				def parameters = [:];
				parameters.put("thing", thing);
				explorerActions.doAction("openThing", parameters);;
			}
		] as Runnable);
	}else{
		log.warn("创建控件的事物为空！");
	}
}else{
	log.warn("没有指定打开事物的浏览器！");
}
#$@text#$@
sid
openSelf
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
@/@actions/@openHelpAndNotes
sname
openHelpAndNotes
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import org.xmeta.ActionContext;
import org.xmeta.Thing;
import xworker.swt.design.Designer;

def explorerDisplay = Designer.getExplorerDisplay();
def explorerActions = Designer.getExplorerActions();

if(explorerDisplay != null && explorerActions != null){
	def thing = world.getThing(thingPath);
	if(thing != null){
	    def exploerActionContext = explorerActions.getActionContext();
        ActionContext context = new ActionContext();
        context.put("parent", exploerActionContext.shell);
        context.put("explorerActions", explorerActions);
        context.put("explorerContext", exploerActionContext);
        context.put("utilBrowser", exploerActionContext.utilBrowser);
        context.put("thing", thing);
        
        def shellThing = world.getThing("xworker.lang.relations.SwtNotesDialog/@shell");
        def shell = shellThing.doAction("create", context);
        shell.open();
	}else{
		log.warn("创建控件的事物为空！");
	}
}else{
	log.warn("没有指定打开事物的浏览器！");
}
#$@text#$@
sid
openHelpAndNotes
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
