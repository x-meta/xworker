@xworker.zest.layouts.LayoutRelationship
sname
LayoutRelationship
sclassName
org.eclipse.zest.layouts.LayoutRelationship
smodifier
public
stype
interface
Sdescription
#$@text#$@

This represents a single relationship, providing the layout algorithms with 
 a common interface to run on.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Casey Best, Chris Callendar</DD>
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper
@xworker.zest.layouts.LayoutRelationship/@9844
smany
false
sname
clearBendPoints
sclassName
void
smodifier
public
stype
class
Sdescription
#$@text#$@
Clear bend points and related bounds
 If you are updating an existing application you can just implement this 
 method to do nothing.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9845
smany
false
sname
getDestinationInLayout
sclassName
<A HREF="../../../../org/eclipse/zest/layouts/LayoutEntity.html" title="interface in org.eclipse.zest.layouts">LayoutEntity</A>
smodifier
public
stype
class
Sdescription
#$@text#$@
Gets the destinationEntity of this SimpleRelation whether the relation is
 exchangeable or not.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9846
smany
false
sname
getLayoutInformation
sclassName
java.lang.Object
smodifier
public
stype
class
sdescription
Returns the internal relationship object.
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9847
smany
false
sname
getSourceInLayout
sclassName
<A HREF="../../../../org/eclipse/zest/layouts/LayoutEntity.html" title="interface in org.eclipse.zest.layouts">LayoutEntity</A>
smodifier
public
stype
class
Sdescription
#$@text#$@
Gets the sourceEntity of this SimpleRelation whether the relation is
 exchangeable or not.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9848
smany
false
sname
populateLayoutConstraint
sclassName
void
smodifier
public
stype
class
sdescription
Classes should update the specirfied layout constraint if recognized
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9849
smany
false
sname
setBendPoints
sclassName
void
smodifier
public
stype
class
sdescription
Specify a set of bend points.
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9850
smany
false
sname
setLayoutInformation
sclassName
void
smodifier
public
stype
class
sdescription
Sets the internal relationship object.
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9851
smodifier
public
sname
clearBendPoints
Sdescription
#$@text#$@
Clear bend points and related bounds
 If you are updating an existing application you can just implement this 
 method to do nothing.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9852
smodifier
public
sname
getDestinationInLayout
Sdescription
#$@text#$@
Gets the destinationEntity of this SimpleRelation whether the relation is
 exchangeable or not.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9853
smodifier
public
sname
getLayoutInformation
sdescription
Returns the internal relationship object.
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9854
smodifier
public
sname
getSourceInLayout
Sdescription
#$@text#$@
Gets the sourceEntity of this SimpleRelation whether the relation is
 exchangeable or not.
#$@text#$@
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9855
smodifier
public
sname
populateLayoutConstraint
sdescription
Classes should update the specirfied layout constraint if recognized
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9855/@9856
sname
constraint
sclassName
org.eclipse.zest.layouts.constraints.LayoutConstraint
sdescriptors
xworker.lang.ClassWrapper/@thing/@parameter
@xworker.zest.layouts.LayoutRelationship/@9857
smany
false
sname
bendpoints
sclassName
org.eclipse.zest.layouts.LayoutBendPoint
smodifier
public
stype
class
ssetMethod
setBendPoints
sdescription
Specify a set of bend points.
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9858
smodifier
public
sname
setBendPoints
sdescription
Specify a set of bend points.
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9858/@9859
sname
bendPoints
sclassName
org.eclipse.zest.layouts.LayoutBendPoint
sdescriptors
xworker.lang.ClassWrapper/@thing/@parameter
@xworker.zest.layouts.LayoutRelationship/@9860
smany
false
sname
layoutinformation
sclassName
java.lang.Object
smodifier
public
stype
class
ssetMethod
setLayoutInformation
sdescription
Sets the internal relationship object.
sdescriptors
xworker.lang.ClassWrapper/@childThing
@xworker.zest.layouts.LayoutRelationship/@9861
smodifier
public
sname
setLayoutInformation
sdescription
Sets the internal relationship object.
sdescriptors
xworker.lang.ClassWrapper/@thing
@xworker.zest.layouts.LayoutRelationship/@9861/@9862
sname
layoutInformation
sclassName
java.lang.Object
sdescriptors
xworker.lang.ClassWrapper/@thing/@parameter
