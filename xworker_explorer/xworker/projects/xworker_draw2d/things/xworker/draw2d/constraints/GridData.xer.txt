@xworker.draw2d.constraints.GridData
sname
GridData
slabel
GridData
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
sdescription
<p><code>GridData</code> is the layout data object associated with <code>GridLayout</code>. To set a <code>GridData</code> object into a <code>Figure</code>, you use the <code>setConstraint()</code> method of <code>GridLayout</code> to map the <code>Figure</code> to its layout <code>GridData</code>.</p>
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@create
sname
create
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@create/@create
sname
create
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import org.eclipse.draw2d.GridData;

def data = new GridData();

data.grabExcessHorizontalSpace = self.getBoolean("grabExcessHorizontalSpace");
data.grabExcessVerticalSpace = self.getBoolean("grabExcessVerticalSpace");

if(self.horizontalSpan != null && self.horizontalSpan != ""){
    data.horizontalSpan = self.getInt("horizontalSpan");
}
if(self.verticalSpan != null && self.verticalSpan != ""){
    data.verticalSpan = self.getInt("verticalSpan");
}
if(self.heightHint != null && self.heightHint != ""){
    data.heightHint = self.getInt("heightHint");
}
if(self.widthHint != null && self.widthHint != ""){
    data.widthHint = self.getInt("widthHint");
}

switch(self.horizontalAlignment){
    case "BEGINNINGR":
        data.horizontalAlignment = GridData.BEGINNING;
        break;
    case "CENTER":
        data.horizontalAlignment = GridData.CENTER;
        break;
    case "END":
        data.horizontalAlignment = GridData.END;
        break;
    case "FILL":
        data.horizontalAlignment = GridData.FILL;
        break;
}

switch(self.verticalAlignment){
    case "BEGINNINGR":
        data.verticalAlignment = GridData.BEGINNING;
        break;
    case "CENTER":
        data.verticalAlignment = GridData.CENTER;
        break;
    case "END":
        data.verticalAlignment = GridData.END;
        break;
    case "FILL":
        data.verticalAlignment = GridData.FILL;
        break;
}

return data;
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalAlignment
sname
horizontalAlignment
sinputtype
select
sreadOnly
false
sdefault
BEGINNING
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalAlignment/@BEGINNING
sname
BEGINNING
svalue
BEGINNING
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalAlignment/@CENTER
sname
CENTER
svalue
CENTER
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalAlignment/@END
sname
END
svalue
END
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalAlignment/@FILL
sname
FILL
svalue
FILL
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@verticalAlignment
sname
verticalAlignment
sextends
xworker.draw2d.constraints.GridData/@horizontalAlignment
sinputtype
select
sreadOnly
false
sdefault
BEGINNING
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@grabExcessHorizontalSpace
sname
grabExcessHorizontalSpace
sinputtype
truefalse
sreadOnly
false
sdefault
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@grabExcessVerticalSpace
sname
grabExcessVerticalSpace
sinputtype
truefalse
sreadOnly
false
sdefault
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@horizontalSpan
sname
horizontalSpan
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@verticalSpan
sname
verticalSpan
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@heightHint
sname
heightHint
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
@xworker.draw2d.constraints.GridData/@widthHint
sname
widthHint
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
