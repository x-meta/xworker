<?xml version="1.0" encoding="utf-8"?>

<thing name="ShutdownHandler" descriptors="xworker.lang.MetaDescriptor3" extends="xworker.http.server.jetty.Handlers">
    <description><![CDATA[<p>A handler that shuts the server down on a valid request. Used to do &quot;soft&quot; restarts from Java.</p>

<p>If _exitJvm is set to true a hard System.exit() call is being made. If _sendShutdownAtStart is set to true, starting the server will try to shut down an existing server at the same port. If _sendShutdownAtStart is set to true, make a http call to &quot;http://localhost:&quot; + port + &quot;/shutdown?token=&quot; + shutdownCookie in order to shut down the server. This handler is a contribution from Johannes Brodwall: https://bugs.eclipse.org/bugs/show_bug.cgi?id=357687 Usage:</p>

<pre>
    Server server = new Server(8080);
    HandlerList handlers = new HandlerList();
    handlers.setHandlers(new Handler[]
    { someOtherHandler, new ShutdownHandler(&quot;secret password&quot;, false, true) });
    server.setHandler(handlers);
    server.start();
   </pre>

<pre>
   public static void attemptShutdown(int port, String shutdownCookie) {
        try {
            URL url = new URL(&quot;http://localhost:&quot; + port + &quot;/shutdown?token=&quot; + shutdownCookie);
            HttpURLConnection connection = (HttpURLConnection)url.openConnection();
            connection.setRequestMethod(&quot;POST&quot;);
            connection.getResponseCode();
            logger.info(&quot;Shutting down &quot; + url + &quot;: &quot; + connection.getResponseMessage());
        } catch (SocketException e) {
            logger.debug(&quot;Not running&quot;);
            // Okay - the server is not running
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
  </pre>
]]></description>
    <actions>
        <JavaAction name="create" outerClassName="xworker.jetty.handlers.HandlerActions" methodName="createShutdownHandler"></JavaAction>
        <GetString name="getShutdownToken" _xmeta_id_="5653" descriptors="xworker.lang.actions.ActionUtil/@GetString"
             attributeName="shutdownToken"></GetString>
        <GetBoolean name="isExitJvm" _xmeta_id_="5654" descriptors="xworker.lang.actions.ActionUtil/@GetBoolean"
             attributeName="exitJvm"></GetBoolean>
        <GetBoolean name="isSendShutdownAtStart" _xmeta_id_="5655" descriptors="xworker.lang.actions.ActionUtil/@GetBoolean"
             attributeName="sendShutdownAtStart"></GetBoolean>
        <NOOP name="init">
            <ins>
                <param name="handler" _xmeta_id_="context1" type="org.eclipse.jetty.webapp.WebAppContext"></param>
            </ins>
        </NOOP>
    </actions>
    <attribute name="name"></attribute>
    <attribute name="label"></attribute>
    <attribute name="shutdownToken" size="50"></attribute>
    <attribute name="exitJvm" inputtype="truefalseselect"></attribute>
    <attribute name="sendShutdownAtStart" inputtype="truefalseselect"></attribute>
    <attribute name="description" inputtype="html"></attribute>
    <VariablesDescs descriptors="xworker.lang.MetaThing/@VariablesDesc">
        <Variable name="var" varName="_thingName_" className="org.eclipse.jetty.server.handler.ShutdownHandler"></Variable>
    </VariablesDescs>
</thing>