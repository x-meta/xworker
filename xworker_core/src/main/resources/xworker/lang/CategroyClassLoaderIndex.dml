<?xml version="1.0" encoding="utf-8"?>

<ThingIndex name="CategroyClassLoaderIndex" descriptors="xworker.lang.util.ThingIndex" group="xworker.lang"
     contentDisplayType="Composite" defaultViewer="xworker.lang.prototypes.CategoryClassLoaderViewer"
     th_createIndex="true" th_registThing="child|xworker.lang.util.ThingIndex">
    <description><![CDATA[<p>可以通过CategoryClassLoader<strong>加载额外的类库</strong>。</p>

<p><strong>加载到Category下(局部类库）</strong></p>

<p>&nbsp;&nbsp;&nbsp; 执行CategoryClassLoader的run方法会生成一个ClassLoader对象，并设置到指定的Category下，这样该Category及子Category下的模型使用该ClassLoader。</p>

<p><strong>拷贝到XWorker的lib下（全局类库）</strong></p>

<p>&nbsp;&nbsp;&nbsp; 执行CategoryClassLoader的copyToXWorker方法将把相应的类库拷贝到xworker/lib/ccl/&lt;thingpath&gt;/目录下，当XWorker重启后会自动加载这些类库。</p>

<p><strong>CategoryClassLoader常用方法</strong></p>

<ul>
	<li><strong>void apply()</strong><br />
	应用ClassLoader到目标Category或其它CategoryClassLoader下。<br />
	&nbsp;</li>
	<li><strong>void apply(true)</strong><br />
	强制初始化ClassLoader并应用。此时会使用自己定义的方式初始化ClassLoader，会清掉其它方式如其它CategoryClassLoader设置的ClassLoader。<br />
	&nbsp;</li>
	<li><strong>void copyToXWorker()</strong><br />
	拷贝相关类库到&lt;xworker&gt;/lib/ccl/xxx/目录下，其中xxx是CategoryClassLoader模型的路径，这样重启XWorker后类库会作为全局类库自动加载。</li>
</ul>
]]></description>
</ThingIndex>