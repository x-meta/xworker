^1461044000032
@
sname
DataSourceSelector
slabel
DataSourceSelector
sdescriptors
xworker.lang.MetaDescriptor3
sextends
xworker.swt.layout.LayoutDatas
smany
true
seditCols
2
sinitialization
false
sgroup
xworker.app
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p>一个选择数据库数据源的界面，含有确定和取消等按钮。</p>

<p><strong>变量和SWT控件</strong></p>

<p>&nbsp;&nbsp;&nbsp; 保存到变量上下文的是新的ActionContext，返回的Composite。</p>

<p><strong>需要重写的监听方法：</strong></p>

<ul>
	<li><strong>selected(Thing dataSource)</strong><br />
	数据源已选择的监听事件。<br />
	&nbsp;</li>
	<li><strong>canceled()</strong><br />
	取消事件，如果点击了取消按钮的话会触发。</li>
</ul>

<p>&nbsp;</p>
#$@text#$@
snotXmlAttribute
false
sjson_isArray
false
sth_createIndex
true
sth_registThing
child|xworker.swt.Widgets
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
@/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
actions
@/@actions/@create
sname
create
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import org.xmeta.ActionContext;

//变量上下文
def ac = new ActionContext();
ac.put("parent", parent);
ac.put("parentContext", actionContext);
ac.put("selector", self);

//创建组件
def thing = world.getThing("xworker.app.swt.wdigets.prototypes.DataSourceSelector/@mainComposite");
def composite = thing.doAction("create", ac);
if(self.getBoolean("cancelButton") == false){
    ac.cancelButton.dispose();
}

//创建子节点
actionContext.peek().put("parent", composite);
for(child in self.getChilds()){
    child.doAction("create", actionContext);
}

//保存到变量上下文
actionContext.g().put(self.getMetadata().getName(), ac);

return composite;
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
create
@/@name
sname
name
sshowLabel
true
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
snotXmlAttribute
false
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
name
@/@label
sname
label
sshowLabel
true
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
snotXmlAttribute
false
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
label
@/@cancelButton
sname
cancelButton
sinputtype
truefalse
sshowLabel
true
sreadOnly
false
sdefault
true
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
snotXmlAttribute
false
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
cancelButton
@/@description
sname
description
sinputtype
html
sshowLabel
true
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
snotXmlAttribute
false
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
sid
description
@/@actions1
sname
actions
slabel
Actions
sdescriptors
xworker.lang.MetaDescriptor2/@thing
sextends
xworker.lang.actions.Actions
smany
true
seditCols
2
Sdescription
#$@text#$@
<p><strong>动作集合</strong></p>

<p>&nbsp;&nbsp;&nbsp; 通过动作可以定义事物的行为，事物的行为即动作，可以用多种语言和方式编写。</p>

<p><strong>self变量</strong></p>

<p>&nbsp;&nbsp;&nbsp; 当一个动作作为一个事物的行为执行时，会把该事物以self变量传给动作。</p>

<p><strong>第一个动作集合生效</strong></p>

<p>&nbsp;&nbsp;&nbsp; 只有事物的第一个actions子节点才被认为是行为的定义集合，第二个及以后不算。</p>
#$@text#$@
szh_label
动作
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
Sen_description
#$@text#$@
<p><strong>Actions</strong></p>

<p>&nbsp;&nbsp;&nbsp; Use actions can define behaviors of the&nbsp;thing. Behavior is action, can be defined by many program languages or other things.</p>

<p><strong>Variable self</strong></p>

<p>&nbsp;&nbsp;&nbsp; When a action is executed as a behavior, in the actionContext will have a virable named &#39;self&#39;, self like this in java, self is it&#39;s onwer thing.</p>

<p><strong>First actions is validate</strong></p>

<p>&nbsp;&nbsp;&nbsp; Only first actions node is behaviros collections.</p>
#$@text#$@
sth_mark
false
sid
actions1
@/@actions1/@name
sname
name
sdescriptors
xworker.lang.MetaDescriptor2/@attribute
sid
name
