^1454581195423
@
sname
DefaultCategoryDataset
slabel
DefaultCategoryDataset
sdescriptors
xworker.lang.MetaDescriptor3
sextends
xworker.jfreechart.data.Dataset
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p>默认分类数据。</p>

<p><strong>设置方法</strong></p>

<p>当type=Var时从ActionContext上下文中获取，否则创建一个新的DataCategoryDataset。</p>

<p><strong>数据来源</strong></p>

<p>数据来源是DataStore，通过添加子节点DataStore或DataStores实现，其中DataStores下含有特殊功能的DataStore，如行转列的DataStore等。</p>

<p><strong>分类数据的属性解释的示例：</strong></p>

<p>&nbsp;&nbsp;&nbsp; 水果（苹果、西瓜、香蕉等）的每月（1月、2二月...等）的产量</p>

<p>以示例解释三个主要属性：</p>

<ul>
	<li><strong>rowKey</strong><br />
	行关键字，行相当于系列，对应示例中的月份，但也可以反过来水果作为行，。<br />
	&nbsp;</li>
	<li><strong>columnKey</strong><br />
	列关键字，列相当于类别，对应示例中的水果，但也可以反过来月份作为列，列可以为空。<br />
	&nbsp;</li>
	<li><strong>valueName</strong><br />
	值字段，数字，对应示例中的产量。</li>
</ul>
#$@text#$@
sth_createIndex
false
@/@actions
sname
actions
sdescriptors
xworker.lang.MetaDescriptor3/@actions
sth_createIndex
false
sid
actions
@/@actions/@createDateset
sname
createDataset
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import org.jfree.data.category.DefaultCategoryDataset;

import ognl.Ognl;

//log.info("createDataset, type=" + self.type);
if(self.type == "Var"){
    return Ognl.getValue(self.varName, actionContext);
}else{
    return new DefaultCategoryDataset();
}
#$@text#$@
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sth_createIndex
false
sid
createDateset
@/@actions/@loaded
sname
onLoaded
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Global
sdisableGlobalContext
false
Scode
#$@text#$@
import ognl.Ognl;

//log.info("self=" + self + ":" + self.get("dataset"));
if(self.type == "Var"){
    return;
}

def self = self;
def store = store;
def log = log;

//先移除旧的数据
def dataset = self.dataset;
if(self.display != null){
    self.display.asyncExec({
        dataset.clear();

        //重新加载数据
        String rowKey = self.rowKey;
        String columnKey = self.columnKey;
        String valueName = self.valueName;
        String includeRowValues = self.includeRowValues;
        String excludeRowValues = self.excludeRowValues;
        String includeColValues = self.includeColValues;
        String excludeColValues = self.excludeColValues;
        //如果值太多显示很慢，因此按间隔选择
        int interval = 1;
        if(store.records.size() > 100){
            interval = store.records.size / 100;
        }
        int index = 0;
        for(record in store.records){            
            if(index % interval != 0){
                index ++;
                continue;
            }
            index ++;
            def row = "";
            def column = "";
            def value = 0d;
            if(rowKey != null && rowKey != ""){
                row = Ognl.getValue(rowKey, record);
            }
            if(includeRowValues != null && includeRowValues != ""){
                boolean have = false;
                for(includeRowValue in includeRowValues.split("[,]")){
                    if(includeRowValue == row){
                         have = true;
                         break;
                    }
                }
                if(!have){
                    continue;
                }
            }else if(excludeRowValues != null && excludeRowValues != ""){
                boolean have = false;
                for(excludeRowValue in excludeRowValues.split("[,]")){
                    log.info(excludeRowValue + "=" + row);
                    if(excludeRowValue == row){
                         have = true;
                         break;
                    }
                }
                if(have){
                    continue;
                }
            }
            
            if(columnKey != null && columnKey != ""){
                column = Ognl.getValue(columnKey, record);
            }
            if(row == null){
                //log.info("row=null, rowKey=" + rowKey);
                row = "";
            }
            if(column == null){
                //log.info("column=null, columnKey=" + columnKey);
                column = "";
            }
            if(includeColValues != null && includeColValues != ""){
                boolean have = false;
                for(includeColValue in includeColValues.split("[,]")){
                    if(includeColValue == column){
                         have = true;
                         break;
                    }
                }
                if(!have){
                    continue;
                }
            }else if(excludeColValues != null && excludeColValues != ""){
                boolean have = false;
                for(excludeColValue in excludeColValues.split("[,]")){
                    //log.info(excludeColValue + "=" + column);
                    if(excludeColValue == column){
                         have = true;
                         break;
                    }
                }
                if(have){
                    continue;
                }
            }
            
            value = Ognl.getValue(valueName, record);
            //log.info("row=" + row + ",column=" + column + ",value=" + value);
            dataset.addValue(value, row, column);   
        }
    });
}else{
    dataset.clear();
    
    //重新加载数据
    String rowKey = self.rowKey;
    String columnKey = self.columnKey;
    String valueName = self.valueName;
    //如果值太多显示很慢，因此按间隔选择
    int interval = 1;
    if(store.records.size() > 100){
        interval = store.records.size / 100;
    }
    int index = 0;
    for(record in store.records){
        if(index % interval != 0){
            index ++;
            continue;
        } 
        
        def row = "";
        def column = "";
        def value = 0;
        if(rowKey != null && rowKey != ""){
            row = Ognl.getValue(rowKey, record);
        }
        if(columnKey != null && columnKey != ""){
            column = Ognl.getValue(columnKey, record);
        }
        if(row == null){
            //log.info("row=null, rowKey=" + rowKey);
            row = "";
        }
        if(column == null){
            //log.info("column=null, columnKey=" + columnKey);
            column = "";
        }
        
        value = Ognl.getValue(valueName, record);
        //log.info("row=" + row + ",column=" + column + ",value=" + value);
        dataset.addValue(value, row, column);   
    }
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sid
loaded
@/@actions/@loaded/@ins
sisValidate
false
sname
ins
sdescriptors
xworker.lang.actions.Inout/@ins
sid
ins
@/@actions/@loaded/@ins/@store
sname
store
stypeCheck
false
soptional
true
scheck
false
scheckLevel
exception
sdescriptors
xworker.lang.actions.Inout/@ins/@param
sid
store
@/@name
sname
name
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
name
@/@label
sname
label
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
label
@/@type
sname
type
sinputtype
select
sshowLabel
true
sreadOnly
false
sdefault
DefaultCategoryDataset
sinheritDescription
false
Sdescription
#$@text#$@
<p>取值的方式：</p>
<ul>
    <li>calculate<br />
    根据数据值计算。<br />
    &nbsp;</li>
    <li>statistics<br />
    数据仓库已提供箱线图的数据，只是从结果里取出来。</li>
</ul>
<p>各种属性对应的是DataStore数据的列名（属性名）。</p>
#$@text#$@
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
snotXmlAttribute
false
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
type
@/@type/@calculate
sname
Var
svalue
Var
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
sid
calculate
@/@type/@statistics
sname
DefaultCategoryDataset
svalue
DefaultCategoryDataset
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
sid
statistics
@/@varName
sname
varName
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
varName
@/@dataStore
sname
dataStore
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
dataStore
@/@rowKey
sname
rowKey
sreadOnly
false
sinheritDescription
false
sdescription
<p>可能是分类的主类，对应数据的主类的列名称。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
rowKey
@/@rowKeyType
sname
rowKeyFormatType
sinputtype
select
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
rowKeyType
@/@rowKeyType/@number
sname
number
slabel
number
svalue
number
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
sid
number
@/@rowKeyType/@date
sname
date
slabel
date
svalue
date
sdescriptors
xworker.lang.MetaDescriptor3/@attribute/@value
sth_createIndex
false
sid
date
@/@rowKeyPattern
sname
rowKeyPattern
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
rowKeyPattern
@/@columnKey
sname
columnKey
sreadOnly
false
sinheritDescription
false
sdescription
<p>可能是分类的子类，对应数据的子类列的名称。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
columnKey
@/@valueName
sname
valueName
sreadOnly
false
sinheritDescription
false
sdescription
<p>提供用于计算箱线数据的数据列名称。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
valueName
@/@includeRowValues
sname
includeRowValues
ssize
60
scolspan
2
sreadOnly
false
sinheritDescription
false
sdescription
<p>仅包含指定的RowValue，其他放弃。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
includeRowValues
@/@excludeRowValues
sname
excludeRowValues
ssize
60
scolspan
2
sreadOnly
false
sinheritDescription
false
sdescription
<p>排除指定的RowValue，当includeRowValues未设置时有效。</p>
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
excludeRowValues
@/@includeColValues
sname
includeColValues
ssize
60
scolspan
2
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
includeColValues
@/@excludeColValues
sname
excludeColValues
ssize
60
scolspan
2
sreadOnly
false
sinheritDescription
false
svalidateAllowBlank
true
LvalidateOnBlur
true
LallowDecimals
true
LallowNegative
true
sdescriptors
xworker.lang.MetaDescriptor3/@attribute
sth_createIndex
false
sid
excludeColValues
