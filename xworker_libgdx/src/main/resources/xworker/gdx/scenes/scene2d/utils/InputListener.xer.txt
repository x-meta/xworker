^1374832506029
@xworker.gdx.scenes.scene2d.utils.InputListener
sname
InputListener
slabel
InputListener
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
Sdescription
#$@text#$@
<p><span style="background-color:rgb(255, 255, 255); color:rgb(53, 56, 51)">EventListener for low-level input events. Unpacks </span><a href="http://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/scenes/scene2d/InputEvent.html" style="font: 13px/normal Helvetica, Tahoma, Arial, sans-serif; text-align: left; color: blue; text-transform: none; text-indent: 0px; letter-spacing: normal; text-decoration: none; word-spacing: 0px; white-space: normal; font-size-adjust: none; font-stretch: normal; background-color: rgb(255, 255, 255); -webkit-text-stroke-width: 0px;" title="class in com.badlogic.gdx.scenes.scene2d"><code>InputEvent</code></a><span style="background-color:rgb(255, 255, 255); color:rgb(53, 56, 51)">s and calls the appropriate method. By default the methods here do nothing with the event. Users are expected to override the methods they are interested in, like this:</span></p>

<pre style="text-align: left;">
 actor.addListener(new InputListener() {
        public boolean touchDown (InputEvent event, float x, float y, int pointer, int button) {
                Gdx.app.log(&quot;Example&quot;, &quot;touch started at (&quot; + x + &quot;, &quot; + y + &quot;)&quot;);
        }
 
        public void touchUp (InputEvent event, float x, float y, int pointer, int button) {
                Gdx.app.log(&quot;Example&quot;, &quot;touch done at (&quot; + x + &quot;, &quot; + y + &quot;)&quot;);
        }
 });
 </pre>
#$@text#$@
sth_createIndex
false
sregistMyChilds
false
sth_mark
false
