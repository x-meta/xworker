^1459697062198
@
sname
AnimationTest
slabel
AnimationTest
sdescriptors
xworker.libgdx.Screen
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
@/@actions
sname
actions
sdescriptors
xworker.libgdx.Screen/@actions1
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
actions
@/@actions/@render
sname
render
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import com.badlogic.gdx.Gdx;

batch.begin();
try{
    for (int i = 0; i < cavemen.length; i++) {
    	def caveman = cavemen[i];
    	def frame = caveman.headsLeft ? leftWalk.getKeyFrame(caveman.stateTime, true) : rightWalk.getKeyFrame(
    				caveman.stateTime, true);
    	batch.draw(frame, caveman.pos.x, caveman.pos.y);
    }
}finally{
batch.end();
}

for (int i = 0; i < cavemen.length; i++) {
	cavemen[i].update(Gdx.graphics.getDeltaTime());
}

fpsLog.log();
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.lang.actions.Actions/@GroovyAction
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
render
@/@Resources
sname
Resources
sdescriptors
xworker.libgdx.Screen/@Resources
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
Resources
@/@Resources/@texture
sname
texture
stype
texture
sfile
\data\walkanim.png
sdescriptors
xworker.libgdx.Resources/@FileResource
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
texture
@/@Resources/@batch
sname
batch
sconstructor
default
sdescriptors
xworker.libgdx.Resources/@SpriteBatch
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
batch
@/@Resources/@log
sname
fpsLog
sdescriptors
xworker.libgdx.Resources/@FPSLogger
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
log
@/@init
sname
init
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.FPSLogger;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Animation;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.math.Vector2;

TextureRegion[] leftWalkFrames = TextureRegion.split(texture, 64, 64)[0];
TextureRegion[] rightWalkFrames = new TextureRegion[leftWalkFrames.length];
for (int i = 0; i < rightWalkFrames.length; i++) {
	TextureRegion frame = new TextureRegion(leftWalkFrames[i]);
	frame.flip(true, false);
	rightWalkFrames[i] = frame;
}
leftWalk = new Animation(0.25f, leftWalkFrames);
rightWalk = new Animation(0.25f, rightWalkFrames);

cavemen = new Caveman[100];
for (int i = 0; i < 100; i++) {
	cavemen[i] = new Caveman((float)(Math.random() * Gdx.graphics.getWidth()),
				(float)(Math.random() * Gdx.graphics.getHeight()), Math.random() > 0.5 ? true : false);
}
		
class Caveman{
        static final float VELOCITY = 20;
		public final Vector2 pos;
		public final boolean headsLeft;
		public float stateTime;

		public Caveman (float x, float y, boolean headsLeft) {
			pos = new Vector2().set(x, y);
			this.headsLeft = headsLeft;
			this.stateTime = (float)Math.random();
		}

		public void update (float deltaTime) {
			stateTime += deltaTime;
			pos.x = pos.x + (headsLeft ? -VELOCITY * deltaTime : VELOCITY * deltaTime);
			if (pos.x < -64) pos.x = Gdx.graphics.getWidth();
			if (pos.x > Gdx.graphics.getWidth() + 64) pos.x = -64;
		}
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.libgdx.Screen/@Code
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
sid
init
