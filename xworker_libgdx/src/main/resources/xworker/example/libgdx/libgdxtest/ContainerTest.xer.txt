^1440389414639
@
sname
ContainerTest
slabel
ContainerTest
sdescriptors
xworker.libgdx.Screen
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
@/@Resources
sname
Resources
sdescriptors
xworker.libgdx.Screen/@Resources
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@Resources/@skin
sname
skin
stype
skin
sfile
\data\uiskin.json
sdescriptors
xworker.libgdx.Resources/@FileResource
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@Resources/@texture
sname
texture
stype
texture
sfile
\data\badlogic.jpg
sdescriptors
xworker.libgdx.Resources/@FileResource
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@Stages
sname
Stages
sdescriptors
xworker.libgdx.Screen/@Stages
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@Stages/@stage
sname
stage
sconstructor
default
sdescriptors
xworker.libgdx.Screen/@Stages/@Stage
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
@/@init
sname
init
sisSynchronized
false
sthrowException
true
suseOtherAction
false
svarScope
Local
sdisableGlobalContext
false
Scode
#$@text#$@
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.ui.Container;
import com.badlogic.gdx.scenes.scene2d.ui.Label;
import com.badlogic.gdx.scenes.scene2d.ui.Skin;
import com.badlogic.gdx.scenes.scene2d.ui.Table;
import com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable;

TextureRegionDrawable logo = new TextureRegionDrawable(new TextureRegion(texture));
def skin = skin;
Table root = new Table();
root.setFillParent(true);
root.debug().defaults().space(6).size(110);
stage.addActor(root);

root.add(new Container(label("center")));
root.add(new Container(label("top")).top());
root.add(new Container(label("right")).right());
root.add(new Container(label("bottom")).bottom());
root.add(new Container(label("left")).left());
root.row();
root.add(new Container(label("fill")).fill());
root.add(new Container(label("fillX")).fillX());
root.add(new Container(label("fillY")).fillY());
root.add(new Container(label("fill 75%")).fill(0.75f, 0.75f));
root.add(new Container(label("fill 75% br")).fill(0.75f, 0.75f).bottom().right());
root.row();
root.add(new Container(label("padTop 5\ntop")).padTop(5).top());
root.add(new Container(label("padBottom 5\nbottom")).padBottom(5).bottom());
root.add(new Container(label("padLeft 15")).padLeft(15));
root.add(new Container(label("pad 10 fill")).pad(10).fill());
root.add(new Container(label("pad 10 tl")).pad(10).top().left());
root.row();
root.add(new Container(label("bg")).background(logo));
root.add(new Container(label("bg height 50")).background(logo).height(50));

Container transformBG = new Container(label("bg transform")).background(logo);
transformBG.setTransform(true);
transformBG.setOrigin(55, 55);
transformBG.rotateBy(90);
root.add(transformBG);

Container transform = new Container(label("transform"));
transform.setTransform(true);
transform.setOrigin(55, 55);
transform.rotateBy(90);
root.add(transform);

Container clip = new Container(label("clip1clip2clip3clip4"));
clip.setClip(true);
root.add(clip);

def  label (String text) {
	Table table = new Table().debug();
	table.add(new Label(text, skin)).fill().expand();
	return table;
}
#$@text#$@
sinterpretationType
Action
screateLocalVarScope
false
ssaveReturn
false
sdebugLog
false
sdescriptors
xworker.libgdx.Screen/@Code
sinheritDescription
false
sth_createIndex
false
sth_registMyChilds
false
sth_mark
false
