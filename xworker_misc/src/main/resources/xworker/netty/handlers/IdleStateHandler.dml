<?xml version="1.0" encoding="utf-8"?>

<thing name="IdleStateHandler" descriptors="xworker.lang.MetaDescriptor3">
    <description><![CDATA[<p>Triggers an&nbsp;IdleStateEvent&nbsp;when a&nbsp;Channel&nbsp;has not performed read, write, or both operation for a while.</p>

<p>如果属性event=true，那么可以监听<strong>onReaderIdle</strong>、<strong>onWriterIdle</strong>和<strong>onAllIdel</strong>事件。</p>
]]></description>
    <actions>
        <JavaAction name="create" outerClassName="xworker.io.netty.handlers.HandlerActions"
             methodName="createIdleStateHandler"></JavaAction>
        <GetInt name="getReaderIdleTimeSeconds" descriptors="xworker.lang.actions.ActionUtil/@GetInt"
             attributeName="readerIdleTimeSeconds" usage="params"></GetInt>
        <GetInt name="getWriterIdleTimeSeconds" descriptors="xworker.lang.actions.ActionUtil/@GetInt"
             attributeName="writerIdleTimeSeconds" usage="params"></GetInt>
        <GetInt name="getAllIdleTimeSeconds" descriptors="xworker.lang.actions.ActionUtil/@GetInt"
             attributeName="allIdleTimeSeconds" usage="params"></GetInt>
        <JavaAction name="onReaderIdle" outerClassName="xworker.io.netty.handlers.IdleThingHandler"
             methodName="onReaderIdle" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </JavaAction>
        <NOOP name="onWriterIdel" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </NOOP>
        <NOOP name="onAllIdel" usage="event">
            <ins>
                <param name="ctx" type="io.netty.channel.ChannelHandlerContext"></param>
                <param name="evt" type="io.netty.handler.timeout.IdleStateEvent"></param>
            </ins>
        </NOOP>
        <GetBoolean name="isEvent" descriptors="xworker.lang.actions.ActionUtil/@GetBoolean"
             attributeName="event" usage="params"></GetBoolean>
    </actions>
    <attribute name="name"></attribute>
    <attribute name="label"></attribute>
    <attribute name="readerIdleTimeSeconds" default="15"></attribute>
    <attribute name="writerIdleTimeSeconds" default="5"></attribute>
    <attribute name="allIdleTimeSeconds" default="0"></attribute>
    <attribute name="event" inputtype="truefalse">
        <description><![CDATA[<p>如果选中，那么会同时添加一个Handler处理相关的事件，此Hanlder将调用本模型的相关方法。</p>

<ul>
	<li><strong>onReaderIdle(ChannelHandlerContext ctx, Object evt)</strong><br />
	读空闲。默认实现ctx.close();<br />
	&nbsp;</li>
	<li><strong>onWriterIdel(ChannelHandlerContext ctx, Object evt)</strong><br />
	写空闲。默认实现不操作，应该发送一个心跳之类的数据包。<br />
	&nbsp;</li>
	<li><strong>onAllIdel(ChannelHandlerContext ctx, Object evt)</strong><br />
	所有空闲。默认实现不操作。</li>
</ul>

<p>&nbsp;&nbsp;</p>
]]></description>
    </attribute>
    <attribute name="description" inputtype="html"></attribute>
</thing>