<?xml version='1.0' encoding='utf-8'?>

<QuickContent name="HttpClientDoc" descriptors="xworker.content.QuickContent" label="httpclient"
     type="thingDesc" group="xworker.httpclient" groupDescriptor="true" icon="icons/html.png"
     simpleBrowser="true" th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">&#xd;
    <description><![CDATA[<h1>httpclient</h1>

<h2>1.简介</h2>

<p>&nbsp;&nbsp;&nbsp; 是对Apache的HttpClient的简单封装。HttpClient的作用是可以向HTTP服务器发送请求，并且能够处理收到的回复。</p>

<h2>2.基本知识</h2>

<h3>2.1.HttpClient</h3>

<p>&nbsp;&nbsp;&nbsp; Http请求是通过HttpClient执行的。代理、验证等等也是在HttpClient上设置的。可以使用HttpClientBuilder来生成HttpClient。</p>

<p>&nbsp;&nbsp;&nbsp; 执行Http各种请求必须要设置HttpClient，如果没有设置，XWorker中的模型使用的是默认的HttpClientBuilder无参数构造的HttpClient。</p>

<h3>2.2.HttpRequest</h3>

<p>&nbsp;&nbsp;&nbsp; 客户端向服务器端发送的请求。根据HTTP的协议，HttpClien支持以下方法。</p>

<p>&nbsp;&nbsp;&nbsp; Get、Post、Delete、Head、Trace、Options、Patch、Put等。</p>

<h3>2.3.HttpResponse</h3>

<p>&nbsp;&nbsp;&nbsp; 是服务端的返回。</p>

<h3>2.4.HttpEntity</h3>

<p>&nbsp;&nbsp;&nbsp; 是Http的内容体。如每一个HttpResponse都会一个HttpEntity，HttpEntity的内容可以是文本、二进制数据等等。在HttpResponse里Post、Patch和Put可以包含Entitiy，即它们可以发送内容体到服务器，比如可以使用Post上传一个文件到服务器。</p>

<p>&nbsp;</p>]]></description>&#xd;
    <en_description><![CDATA[<h1>httpclient</h1>

<h2>1. Introduction</h2>

<p>&nbsp;&nbsp;&nbsp; is a simple encapsulation of Apache's HttpClient. The function of HttpClient is to send requests to the HTTP server and to process the received replies. </p>

<h2>2. Basic knowledge</h2>

<h3>2.1.HttpClient</h3>

<p>&nbsp;&nbsp;&nbsp; Http requests are executed through HttpClient. Proxy, authentication, etc. are also set on HttpClient. You can use HttpClientBuilder to generate HttpClient. </p>

<p>&nbsp;&nbsp;&nbsp; HttpClient must be set to execute various Http requests. If it is not set, the model in XWorker uses the default HttpClientBuilder parameterless HttpClient. </p>

<h3>2.2.HttpRequest</h3>

<p>&nbsp;&nbsp;&nbsp; The request sent by the client to the server. According to the HTTP protocol, HttpClien supports the following methods. </p>

<p>&nbsp;&nbsp;&nbsp; Get, Post, Delete, Head, Trace, Options, Patch, Put, etc. </p>

<h3>2.3.HttpResponse</h3>

<p>&nbsp;&nbsp;&nbsp; is the return from the server. </p>

<h3>2.4.HttpEntity</h3>

<p>&nbsp;&nbsp;&nbsp; is the content body of Http. For example, every HttpResponse will have an HttpEntity, and the content of HttpEntity can be text, binary data, and so on. Post, Patch, and Put in HttpResponse can contain Entitiy, that is, they can send content to the server, for example, you can use Post to upload a file to the server. </p>

<p>&nbsp;</p>]]></en_description>&#xd;
</QuickContent>