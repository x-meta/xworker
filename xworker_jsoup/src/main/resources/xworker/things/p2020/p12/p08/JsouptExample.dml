<?xml version='1.0' encoding='utf-8'?>

<QuickContent name="jsoup" _xmeta_id_="JsouptExample" descriptors="xworker.content.QuickContent"
     type="composite" group="xworker.jsoup" groupDescriptor="true" icon="icons/application.png"
     th_createIndex="true" th_registThing="child|xworker.example.ExamplesIndex">&#xd;
    <description><![CDATA[<h1>Jsoup示例</h1>

<p>&nbsp;&nbsp;&nbsp; Jsoup可以用来分析网页，可以做网络爬虫。</p>]]></description>&#xd;
    <en_description><![CDATA[<h1>Jsoup example</h1>

<p>&nbsp;&nbsp;&nbsp; Jsoup can be used to analyze web pages and can be used as a web crawler. </p>]]></en_description>&#xd;
    <Composite label="Jsoup Example">&#xd;
        <FillLayout name="FillLayout"/>&#xd;
        <SashForm name="mainSashForm" style="VERTICAL" weights="60,40">&#xd;
            <SashForm name="topSashForm" weights="30,70">&#xd;
                <Composite name="menuComposite" BORDER="true">&#xd;
                    <GridLayout name="GridLayout"/>&#xd;
                    <Tree name="tree" FULL_SELECTION="false" HIDE_SELECTION="false" lineVisible="false"
                         multipleColumns="false" headerVisible="false" sortIndicator="false"
                         moveableColumns="false">&#xd;
                        <Listeners>&#xd;
                            <Listener name="treeSelection">&#xd;
                                <GroovyAction name="GroovyAction">&#xd;
                                    <code><![CDATA[def thing = event.item.getData();

executeButton.setEnabled(true	);

thingEditor.doAction("setThing", actionContext, "thing", thing);]]></code>&#xd;
                                </GroovyAction>&#xd;
                            </Listener>&#xd;
                        </Listeners>&#xd;
                        <GridData name="GridData" style="FILL_BOTH"/>&#xd;
                    </Tree>&#xd;
                    <Button name="executeButton" text="lang:d=执行&amp;en=Execute" enabled="false">&#xd;
                        <Event name="onSelection">&#xd;
                            <GroovyAction name="executeButtonSelection">&#xd;
                                <code><![CDATA[import xworker.lang.executor.Executor;

logText.setText("");
def executorService = executorService;
def thing = tree.getSelection()[0].getData();
def actionContext = actionContext;
new Thread({
    Executor.push(executorService);
    try{
        thing.doAction("run", actionContext);
    }finally{
        Executor.pop();
    }
}).start();]]></code>&#xd;
                            </GroovyAction>&#xd;
                        </Event>&#xd;
                        <GridData name="GridData" horizontalAlignment="END"/>&#xd;
                    </Button>&#xd;
                </Composite>&#xd;
                <ThingEditor name="thingEditor" saveActionContainer="true"/>&#xd;
            </SashForm>&#xd;
            <StyledText name="logText" style="MULTI" READ_ONLY="true" H_SCROLL="true" V_SCROLL="true">&#xd;
                <GridData name="GridData" descriptors="xworker.swt.layout.LayoutDatas/@GridData"
                     style="FILL_BOTH"/>&#xd;
            </StyledText>&#xd;
            <TextExecutorService name="executorService" descriptors="xworker.lang.executor.swt.TextExecutorService"
                 text="var:logText"/>&#xd;
        </SashForm>&#xd;
        <Code name="init">&#xd;
            <code><![CDATA[import org.eclipse.swt.SWT;
import org.eclipse.swt.widgets.TreeItem;
import xworker.swt.util.XWorkerTreeUtil;

def thing = world.getThing("xworker.things.p2020.p12.p08.JsoupExampleActions");
for(child in thing.getChilds()){
    def item = new TreeItem(tree, SWT.NONE);
    item.setData(child);
    XWorkerTreeUtil.initItem(item, child, actionContext);
}]]></code>&#xd;
        </Code>&#xd;
    </Composite>&#xd;
</QuickContent>