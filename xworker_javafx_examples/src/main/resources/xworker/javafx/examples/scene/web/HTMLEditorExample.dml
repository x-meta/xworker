<?xml version="1.0" encoding="utf-8"?>

<Stage name="HTMLEditorExample" descriptors="xworker.javafx.stage.Stage">
    <Nodes>
        <VBox name="rootNode" _xmeta_id_="VBox">
            <HTMLEditor name="HTMLEditor">
                <htmlText><![CDATA[<h2>Full HTMLEditor Example</h2>

<p>
    Here is first a full JavaFX <code>HTMLEditor</code> example so you can see what using the <code>HTMLEditor</code>
    looks like in code:
</p>

<pre class="codeBox">
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.VBox;
import javafx.scene.web.HTMLEditor;
import javafx.stage.Stage;

public class HtmlEditorExample extends Application {

    public static void main(String[] args) {
        launch(args);
    }

    public void start(Stage primaryStage) {

        HTMLEditor htmlEditor = new HTMLEditor();

        VBox vBox = new VBox(htmlEditor);
        Scene scene = new Scene(vBox);

        primaryStage.setScene(scene);
        primaryStage.setTitle("JavaFX App");

        primaryStage.show();
    }
}
</pre>



<a name="create-an-htmleditor"></a>
<h2>Create an HTMLEditor</h2>

<p>
    Before you can use a JavaFX <code>HTMLEditor</code> in your code, you must first create an instance of it.
    Here is an example of creating an instance of a JavaFX <code>HTMLEditor</code>:
</p>

<pre class="codeBox">
 HTMLEditor htmlEditor = new HTMLEditor();
</pre>




<a name="get-html-from-htmleditor"></a>
<h2>Get HTML From HTMLEditor</h2>

<p>
    Sooner or later you will probably want to obtain the HTML text that was edited in the <code>HTMLEditor</code> by
    the user. You obtain the HTML from the <code>HTMLEditor</code> via its <code>getHtmlText()</code> method.
    Here is an example of getting the HTML from a JavaFX <code>HTMLEditor</code> instance:
</p>

<pre class="codeBox">
String htmlText = htmlEditor.getHtmlText();
</pre>

<p>
    As you can see, the HTML is returned as a standard <a href="/java/strings.html">Java String</a>.
</p>




<a name="set-html-in-htmleditor"></a>
<h2>Set HTML in HTMLEditor</h2>
<p>
    You can also set the HTML to be edited in a JavaFX <code>HTMLEditor</code> via its <code>setHtmlText()</code>
    method. Here is an example of setting the HTML to be edited in a JavaFX <code>HTMLEditor</code> instance:
</p>

<pre class="codeBox">
String htmlText = "&lt;b&gt;Bold text&lt;/b&gt;";

htmlEditor.setHtmlText(htmlText);
</pre>]]></htmlText>
            </HTMLEditor>
        </VBox>
    </Nodes>
    <Scene name="Scene" root="var:rootNode"></Scene>
</Stage>