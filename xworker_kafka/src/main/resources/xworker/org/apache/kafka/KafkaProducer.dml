<?xml version="1.0" encoding="utf-8"?>

<thing name="KafkaProducer" descriptors="xworker.lang.MetaDescriptor3" extends="xworker.org.apache.kafka.Kafka">
    <description><![CDATA[<p>Kafka的生产者。更多文档请参看帮助小精灵。</p>

<p><strong>常用方法：</strong></p>

<ul>
	<li><strong>KafkaProducer getKafkaProducer()</strong><br />
	返回KafkaProducer示例。<br />
	&nbsp;</li>
	<li><strong>void close()</strong><br />
	关闭KafkaProducer。<br />
	&nbsp;</li>
	<li><strong>Future&lt;RecordMetadata&gt; send(String topic, Object key, Object value)</strong><br />
	发送消息。</li>
</ul>

<p><strong>可以监听的事件</strong></p>

<ul>
	<li><strong>void beforeInit(Properties config)</strong><br />
	创建生产者之前的事件。<br />
	&nbsp;</li>
	<li><strong>void afterInit(KafkaProducer producer)</strong><br />
	创建生产者之后的事件。</li>
</ul>

<p>&nbsp;</p>
]]></description>
    <actions>
        <GetString name="getKeySerializer" _xmeta_id_="18430" descriptors="xworker.lang.actions.ActionUtil/@GetString"
             attributeName="keySerializer" usage="params"></GetString>
        <GetString name="getValueSerializer" _xmeta_id_="18431" descriptors="xworker.lang.actions.ActionUtil/@GetString"
             attributeName="valueSerializer" usage="params"></GetString>
        <GetProperties name="getConfig" _xmeta_id_="18432" descriptors="xworker.lang.actions.ActionUtil/@GetProperties"
             attributeName="config" usage="params"></GetProperties>
        <NOOP name="beforeInit" _xmeta_id_="onInit" usage="event">
            <ins>
                <param name="config" _xmeta_id_="properties" type="java.util.Properties"></param>
            </ins>
        </NOOP>
        <NOOP name="afterInit" usage="event">
            <ins>
                <param name="producer" _xmeta_id_="consumer" type="org.apache.kafka.clients.producer.KafkaProducer"></param>
            </ins>
        </NOOP>
        <JavaAction name="close" outerClassName="xworker.org.apache.kafka.XWorkerKafkaProducer"
             methodName="close" actionClassLoader="xworker.org.apache.kafka.KafkaClassLoader"></JavaAction>
        <JavaAction name="getKafkaProducer" _xmeta_id_="getKafkaConsumer" outerClassName="xworker.org.apache.kafka.XWorkerKafkaProducer"
             methodName="getXWorkerKafkaProducer" actionClassLoader="xworker.org.apache.kafka.KafkaClassLoader"></JavaAction>
        <JavaAction name="send" outerClassName="xworker.org.apache.kafka.XWorkerKafkaProducer"
             methodName="send">
            <ins>
                <param name="key"></param>
                <param name="value"></param>
                <param name="topic" type="java.lang.String"></param>
            </ins>
        </JavaAction>
        <GroovyAction name="forceClose">
            <code><![CDATA[def key = "PRODUCER";
def producer = self.getStaticData(key);
if(producer == null){
    return;
}
producer.close();
self.setStaticData(key, null);]]></code>
        </GroovyAction>
    </actions>
    <attribute name="name"></attribute>
    <attribute name="label"></attribute>
    <attribute name="keySerializer" _xmeta_id_="keyDeserializer" inputtype="inputSelect"
         default="org.apache.kafka.common.serialization.StringSerializer">
        <value name="ByteArraySerializer" _xmeta_id_="ByteArrayDeserializer" value="org.apache.kafka.common.serialization.ByteArraySerializer"></value>
        <value name="ByteBufferSerializer" _xmeta_id_="ByteBufferDeserializer" value="org.apache.kafka.common.serialization.ByteBufferSerializer"></value>
        <value name="BytesSerializer" _xmeta_id_="BytesDeserializer" value="org.apache.kafka.common.serialization.BytesSerializer"></value>
        <value name="DoubleSerializer" _xmeta_id_="DoubleDeserializer" value="org.apache.kafka.common.serialization.DoubleSerializer"></value>
        <value name="FloatSerializer" _xmeta_id_="FloatDeserializer" value="org.apache.kafka.common.serialization.FloatSerializer"></value>
        <value name="IntegerSerializer" _xmeta_id_="IntegerDeserializer" value="org.apache.kafka.common.serialization.IntegerSerializer"></value>
        <value name="LongSerializer" _xmeta_id_="LongDeserializer" value="org.apache.kafka.common.serialization.LongSerializer"></value>
        <value name="SessionWindowedSerializer" _xmeta_id_="SessionWindowedDeserializer"
             value="org.apache.kafka.streams.kstream.SessionWindowedSerializer"></value>
        <value name="ShortSerializer" _xmeta_id_="ShortDeserializer" value="org.apache.kafka.common.serialization.ShortSerializer"></value>
        <value name="StringSerializer" _xmeta_id_="StringDeserializer" value="org.apache.kafka.common.serialization.StringSerializer"></value>
        <value name="TimeWindowedSerializer" _xmeta_id_="_TimeWindowedDeserializer"
             value="org.apache.kafka.streams.kstream.TimeWindowedSerializer"></value>
        <value name="UUIDSerializer" _xmeta_id_="UUIDDeserializer" value="org.apache.kafka.common.serialization.UUIDSerializer"></value>
        <value name="VoidSerializer" _xmeta_id_="VoidDeserializer" value="org.apache.kafka.common.serialization.VoidSerializer"></value>
    </attribute>
    <attribute name="valueSerializer" _xmeta_id_="valueDeserializer" extends="xworker.org.apache.kafka.KafkaProducer/@keyDeserializer"
         inputtype="inputSelect" default="org.apache.kafka.common.serialization.StringSerializer"></attribute>
    <attribute name="config" inputtype="textarea">
        <default><![CDATA[bootstrap.servers=
group.id=
enable.auto.commit=true
auto.commit.interval.ms=1000]]></default>
    </attribute>
    <attribute name="description" inputtype="html">
        <default><![CDATA[bootstrap.servers=localhost:9092
acks=all
retries=0
linger.ms=1]]></default>
    </attribute>
    <VariablesDescs descriptors="xworker.lang.MetaThing/@VariablesDesc">
        <Variable name="var" varName="_thingName_" passive="true" scope="1" className="xworker.org.apache.kafka.KafkaProducerRunner"></Variable>
    </VariablesDescs>
</thing>