<?xml version="1.0" encoding="utf-8"?>

<thing name="TimeWindowedKStream" descriptors="xworker.lang.MetaDescriptor3">
    <description><![CDATA[<p>SessionWindowedKStream is an abstraction of a windowed record stream of KeyValue pairs. It is an intermediate representation after a grouping and windowing of a KStream before an aggregation is applied to the new (partitioned) windows resulting in a windowed KTable (a windowed KTable is a KTable with key type Windowed).</p>
]]></description>
    <actions>
        <JavaAction name="build" outerClassName="xworker.org.apache.kafka.streams.kstream.KStreamActions"
             methodName="build"></JavaAction>
    </actions>
    <thing name="Aggregate" extends="xworker.org.apache.kafka.streams.kstream.KTable,xworker.org.apache.kafka.streams.kstream.Initializers,xworker.org.apache.kafka.streams.kstream.Aggregators,xworker.org.apache.kafka.streams.kstream.Mergers">
        <description><![CDATA[<p><strong>封装以下方法</strong></p>

<p>Aggregate the values of records in this stream by the grouped key.</p>

<p>&nbsp;&nbsp;&nbsp; &lt;VR&gt; KTable&lt;K,VR&gt;&nbsp;aggregate(Initializer&lt;VR&gt; initializer, Aggregator&lt;? super K,? super V,VR&gt; aggregator)<br />
&nbsp;&nbsp;&nbsp; &lt;VR&gt; KTable&lt;K,VR&gt;&nbsp;aggregate(Initializer&lt;VR&gt; initializer, Aggregator&lt;? super K,? super V,VR&gt; aggregator, Materialized&lt;K,VR,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)<br />
&nbsp;&nbsp;&nbsp; &lt;VR&gt; KTable&lt;K,VR&gt;&nbsp;aggregate(Initializer&lt;VR&gt; initializer, Aggregator&lt;? super K,? super V,VR&gt; aggregator, Named named, Materialized&lt;K,VR,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)</p>

<p>其中参数由子节点的create方法创建，根据参数选择合适的方法执行。</p>

<p><strong>执行子节点的build方法</strong></p>

<p>&nbsp;&nbsp;&nbsp; 如果KTable成功创建，那么会遍历子节点执行void build(KTable ktable)方法。</p>
]]></description>
        <actions>
            <JavaAction name="build" _xmeta_id_="create" outerClassName="xworker.org.apache.kafka.streams.kstream.TimeWindowedKStreamActions"
                 methodName="buildAggregate"></JavaAction>
        </actions>
        <thing name="Named" extends="xworker.org.apache.kafka.streams.kstream.Named"
             group="params" inheritDescription="true"></thing>
        <thing name="Materialized" extends="xworker.org.apache.kafka.streams.kstream.Materialized"
             group="params" inheritDescription="true"></thing>
    </thing>
    <thing name="Count" extends="xworker.org.apache.kafka.streams.kstream.KTable">
        <description><![CDATA[<p><strong>封装以下方法</strong></p>

<p>Count the number of records in this stream by the grouped key.</p>

<p>&nbsp;&nbsp;&nbsp; KTable&lt;K,Long&gt;&nbsp;count()<br />
&nbsp;&nbsp;&nbsp; KTable&lt;K,Long&gt;&nbsp;count(Materialized&lt;K,Long,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)<br />
&nbsp;&nbsp;&nbsp; KTable&lt;K,Long&gt;&nbsp;count(Named named)<br />
&nbsp;&nbsp;&nbsp; KTable&lt;K,Long&gt;&nbsp;count(Named named, Materialized&lt;K,Long,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)</p>

<p>其中参数由子节点的create方法创建，根据参数选择合适的方法执行。</p>

<p><strong>执行子节点的build方法</strong></p>

<p>&nbsp;&nbsp;&nbsp; 如果KTable成功创建，那么会遍历子节点执行void build(KTable ktable)方法。</p>
]]></description>
        <actions>
            <JavaAction name="build" _xmeta_id_="create" outerClassName="xworker.org.apache.kafka.streams.kstream.TimeWindowedKStreamActions"
                 methodName="buildCount"></JavaAction>
        </actions>
        <thing name="Named" extends="xworker.org.apache.kafka.streams.kstream.Named"
             group="params" inheritDescription="true"></thing>
        <thing name="Materialized" extends="xworker.org.apache.kafka.streams.kstream.Materialized"
             group="params" inheritDescription="true"></thing>
    </thing>
    <thing name="Reduce" extends="xworker.org.apache.kafka.streams.kstream.KTable,xworker.org.apache.kafka.streams.kstream.Reducers">
        <description><![CDATA[<p><strong>封装以下方法</strong></p>

<p>Combine the values of records in this stream by the grouped key.</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;KTable&lt;K,V&gt;&nbsp;reduce(Reducer&lt;V&gt; reducer)<br />
&nbsp;&nbsp;&nbsp; KTable&lt;K,V&gt;&nbsp;reduce(Reducer&lt;V&gt; reducer, Materialized&lt;K,V,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)<br />
&nbsp;&nbsp;&nbsp; KTable&lt;K,V&gt;&nbsp;reduce(Reducer&lt;V&gt; reducer, Named named, Materialized&lt;K,V,KeyValueStore&lt;org.apache.kafka.common.utils.Bytes,byte[]&gt;&gt; materialized)</p>

<p>其中参数由子节点的create方法创建，根据参数选择合适的方法执行。</p>

<p><strong>执行子节点的build方法</strong></p>

<p>&nbsp;&nbsp;&nbsp; 如果KTable成功创建，那么会遍历子节点执行void build(KTable ktable)方法。</p>
]]></description>
        <actions>
            <JavaAction name="build" _xmeta_id_="create" outerClassName="xworker.org.apache.kafka.streams.kstream.TimeWindowedKStreamActions"
                 methodName="buildReduce"></JavaAction>
        </actions>
        <thing name="Named" extends="xworker.org.apache.kafka.streams.kstream.Named"
             group="params" inheritDescription="true"></thing>
        <thing name="Materialized" extends="xworker.org.apache.kafka.streams.kstream.Materialized"
             group="params" inheritDescription="true"></thing>
    </thing>
</thing>