<?xml version="1.0" encoding="utf-8"?>

<Shell name="HomePage" descriptors="xworker.swt.widgets.Shell">
    <description><![CDATA[<h2>应用和知识</h2>

<h3>1.使用</h3>

<p>&nbsp;&nbsp;&nbsp; 选择分类树菜单的节点，在右面的区域会根据菜单节点显示不同的内容，如网页和应用等。</p>

<p>&nbsp;&nbsp;&nbsp; 鼠标双击分类菜单的节点，可以在事物管理器编辑区域打开。</p>

<h3>2.新建</h3>

<p>&nbsp;&nbsp;&nbsp; 点击<img alt="" src="icons/house.png" />菜单的下拉列表或打开树菜单的鼠标右键菜单，在弹出菜单中点击<strong>新建事物</strong>菜单可以创建新的应用和知识。</p>
]]></description>
    <FillLayout name="FillLayout"></FillLayout>
    <Composite name="mainComposite" label="主页" en_label="Home" icon="icons/application_home.png">
        <ActionContainer name="actions" _xmeta_id_="actions1">
            <GroovyAction name="initOutline">
                <code><![CDATA[import xworker.util.XWorkerUtils;
import xworker.swt.util.SwtUtils;

def doc = world.getThing("xworker.ide.worldexplorer.swt.HomePage");
SwtUtils.setThingDesc(doc, outlineBrowser);]]></code>
            </GroovyAction>
        </ActionContainer>
        <FillLayout name="mainCompositeFillLayout"></FillLayout>
        <CTabFolder name="mainTabFolder" BORDER="true">
            <CTabItem name="appAndDocTabItem" _xmeta_id_="commandTabItem" text="label:xworker.ide.worldexplorer.swt.i18n.TopicI18n/@main/@appAndDocument">
                <Composite name="infoComposite">
                    <FillLayout name="infoCompositeFillLayout"></FillLayout>
                    <ThingRegistor name="infoRegistor" thing="xworker.command.Root" registType="command"
                         showDescBrowser="true" descBrowserRight="true" autoLoad="true">
                        <actions>
                            <GroovyAction name="defaultSelected">
                                <code><![CDATA[if(thing != null){
    thing.doAction("execute", actionContext);
}]]></code>
                            </GroovyAction>
                            <GroovyAction name="selected" _xmeta_id_="select">
                                <code><![CDATA[import xworker.util.XWorkerUtils;
import xworker.swt.util.SwtUtils;

if(actionContext.get("topicBrowser") == null){
    return;
}

if(thing != null){
    if("thingDesc" == thing.getString("type") || thing.getThingName() == "Word"){
        def docThing = world.getThing("xworker.ide.worldexplorer.swt.HomePage");
        topicBrowser.setUrl(XWorkerUtils.getThingDescUrl(docThing));
        SwtUtils.setThingDesc(docThing, topicBrowser);
    }else{
        SwtUtils.setThingDesc(thing, topicBrowser);
    }
}else{
    def docThing = world.getThing("xworker.ide.worldexplorer.swt.HomePage");
    SwtUtils.setThingDesc(docThing, topicBrowser);
}]]></code>
                            </GroovyAction>
                        </actions>
                    </ThingRegistor>
                    <InteractiveUI name="InteractiveUI" label="应用和知识" commandIndex="xworker.ide.worldexplorer.swt.help.commander.XWorkerInfoRegistor"
                         en_label="Applications &amp; Documents" en_group="Thing Explorer.Home"
                         group="事物管理器.主页"></InteractiveUI>
                </Composite>
            </CTabItem>
            <CTabItem name="thingIndexTabItem" text="label:xworker.ide.worldexplorer.swt.i18n.TopicI18n/@main/@thingIndex"
                 toolTipText="常见事物的索引导航">
                <ExtendWidget name="thingIndex" extendWidgetPath="xworker.ide.data.ThingIndexViewer/@mainComposite"></ExtendWidget>
            </CTabItem>
            <CTabItem name="standaloneAppTabItem" _xmeta_id_="manongTabItem1" text="lang:d=独立应用&amp;en=Standalone Application"
                 toolTipText="分享事物的平台">
                <ExtendWidget name="standaloneApp" _xmeta_id_="ExtendWidget" extendWidgetPath="xworker.lang.util.prototypes.StandaloneAppShell/@mainSashForm"></ExtendWidget>
            </CTabItem>
            <Listeners>
                <Listener name="mainTabFolderSelection">
                    <GroovyAction name="GroovyAction">
                        <code><![CDATA[import xworker.util.XWorkerUtils;

if(actionContext.get("topicBrowser") == null){
    return;
}

def docThing = world.getThing("xworker.ide.worldexplorer.swt.HomePage");
if(event.item == thingIndexTabItem){
    docThing = world.getThing("xworker.ui.topic.help.ThingIndexDoc");  
}else if(actionContext.get("manongTabItem") != null && event.item == manongTabItem){
    docThing = world.getThing("xworker.ui.topic.help.ManongDoc");  
}

topicBrowser.setUrl(XWorkerUtils.getThingDescUrl(docThing));]]></code>
                    </GroovyAction>
                </Listener>
            </Listeners>
        </CTabFolder>
        <ActionContainer name="actions">
            <GroovyAction name="setDoc"></GroovyAction>
            <GroovyAction name="ideInit">
                <code><![CDATA[if(actionContext.get("params") == null){
    return;
}

def tabItem = params.get("tabItem");
if(tabItem != null){
    if(tabItem == "category"){
        mainTabFolder.setSelection(commandTabItem);
    }else if(tabItem == "aclice"){
        mainTabFolder.setSelection(aliceTabItem);
    }else if(tabItem == "searchThing"){
        mainTabFolder.setSelection(searchThingTabItem);
    }else if(tabItem == "task"){
        mainTabFolder.setSelection(taskTabItem);
    }else if(tabItem == "message"){
        mainTabFolder.setSelection(messageTabItem);
    }else if(tabItem == "newThing"){
        mainTabFolder.setSelection(newThingTabFolder);
    }else if(tabItem == "thingIndex"){
        mainTabFolder.setSelection(thingIndexTabItem);
    }else if(tabItem == "manong"){
        mainTabFolder.setSelection(manongTabItem);
    }
}]]></code>
            </GroovyAction>
            <NOOP name="updated"></NOOP>
            <NOOP name="eventRemoved"></NOOP>
            <NOOP name="eventAdded"></NOOP>
            <GetVariable name="getOutline" varName="topicBrowser"></GetVariable>
        </ActionContainer>
        <Code name="init">
            <code><![CDATA[//初始化OutlineTree
createOutline(actionContext);
/*
if(actionContext.get("outlineComposite") != null && actionContext.get("topicBrowser") == null){
    actionContext.peek().put("parent", outlineComposite);
    def thing = world.getThing("xworker.ui.topic.TopicOutline/@mainComposite");
    def comp = thing.doAction("create", actionContext);
    
    if(actionContext.get("tab") != null){
        tab.setData("outlineTree", comp);
    }
}*/]]></code>
            <ActionDefined>
                <CreateOutline name="createOutline" descriptors="xworker.swt.app.AppActions/@CreateOutline"
                     outlineBrowserUrl="descurl:xworker.ui.topic.help._Topic" varName="topicBrowser"></CreateOutline>
            </ActionDefined>
        </Code>
        <InteractiveUI name="homeUi" label="主页" registThing="xworker.ide.worldexplorer.swt.HomePage/@mainComposite"
             registType="notes" en_label="Home" en_group="Thing Explorer.Home" group="事物管理器.主页">
            <description><![CDATA[<h2>主页</h2>

<p>&nbsp;&nbsp;&nbsp; 主页包含了XWorker的一些主要功能和索引，事物管理器启动后会自动打开。</p>]]></description>
        </InteractiveUI>
    </Composite>
</Shell>