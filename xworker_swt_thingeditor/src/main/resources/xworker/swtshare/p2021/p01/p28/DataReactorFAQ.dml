<?xml version="1.0" encoding="utf-8"?>

<QuickContent name="DataReactorFAQ" descriptors="xworker.content.QuickContent" label="FAQ" type="thingDesc"
     icon="icons/html.png" simpleBrowser="true" th_createIndex="true" th_registThing="command|xworker.swt.reactors.DataReactors">
    <description><![CDATA[<h1>DataReactor FAQ</h1>

<h2>1.什么是DataReactor</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; DataReactor的思想是当数据发生了变化，那么触发相应事件通知下一个DataReactor做相应的操作。</p>

<h2>2.有那么类型的数据变化事件</h2>

<ul>
	<li><strong>loaded(List&lt;Object&gt; datas)</strong><br />
	数据加载事件。</li>
	<li><strong>selected(List&lt;Object&gt; datas)</strong><br />
	数据选择事件。</li>
	<li><strong>unselected()</strong><br />
	没有选择任何数据的事件。</li>
	<li><strong>updated(List&lt;Object&gt; datas)</strong><br />
	数据更新的事件。</li>
	<li><strong>removed(List&lt;Object&gt; datas)</strong><br />
	数据移除的事件。</li>
	<li><strong>added(List&lt;Object&gt; datas)</strong><br />
	添加数据的事件。</li>
</ul>

<h2>3.数据响应器树</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 数据响应器是一个链条树，一个数据响应器可以添加一个或多个其它数据响应器。</p>

<h2>4.控件如何处理响应</h2>

<p>&nbsp;&nbsp;&nbsp; 可以把控件映射成数据响应器，此时数据响应器按照一般性原则处理响应。比如控件Text认为loaded、selected、updated、added等事件是为了把数据显示为文本，而unselected是清空文本，removed是移除相应数据再显示文本等。</p>

<h2>5.控件如何根据不同的事件触发数据变化事件</h2>

<p>&nbsp;&nbsp;&nbsp; 可以手工设置设置多个数据响应器并绑定到该控件上，不同的数据响应器处理不同的事件。</p>

<p>&nbsp;&nbsp;&nbsp; 例如urlText（URL文本框），goButton（打开网页按钮）和browser（浏览器)的里，默认urlText &gt; goButton &gt; browser，把urlText默认选择事件新建一个数据响应器，并指向browser。这样当urlText发生变化时会传给goButton，点击goButton会传给browser，但urlText默认选择事件时会直接传给browser。</p>

<h2>6.初始的loaded事件</h2>

<p>&nbsp;&nbsp;&nbsp; 在界面创建时就想触发一些数据响应器的loaded事件，那么可以在DataManager或DataReactors模型里设置fireLoadReactors属性，在该属性里设置要执行loaded事件的数据响应器。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;</p>

<p>&nbsp;</p>
]]></description>
</QuickContent>