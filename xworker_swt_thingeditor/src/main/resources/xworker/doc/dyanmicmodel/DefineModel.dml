^1614824585799
@
sname
MetaThingDoc
slabel
定义模型
stype
thingDesc
sgroup
dynamicModel.-10000|defineModel
sgroupDescriptor
true
sicon
icons/html.png
sstyledTextForInsert
parentContext.parentContext.codeText
suseTargetThingDoc
false
ssimpleBrowser
true
Sdescription
#$@text#$@
<h1>定义模型</h1>

<h2>1.面向对象</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型实现了面向对象的编程方法，在动态模型中类和对象都是普通的模型，一个模型既可以作为类也可以作为对象。</p>

<h3>1.1.描述者</h3>

<p>&nbsp;&nbsp;&nbsp; 在动态模型里类模型也称为描述者。</p>

<h2>2.编辑模型的规则</h2>

<p>&nbsp;&nbsp;&nbsp; XWorker提供过了一个编辑模型的规则，就是可以使用类模型来编辑对象模型。</p>

<h3>2.1.元事物</h3>

<p>&nbsp;&nbsp;&nbsp; 由于在动态模型中一个模型既可以作为类也可以作为对象，因此类模型也可以作为对象模型，此时类模型也可以有自己的类模型。一个类模型自身的类模型称为<strong>元事物</strong>。</p>

<p>&nbsp;&nbsp;&nbsp; 因为元事物是类模型的类模型，根据XWorker编辑模型的规则，元事物就是用来编辑和定义类模型的。使用元事物定义了类模型后，我们就可以使用类模型编写具体的对象模型了。</p>

<p>&nbsp;&nbsp;&nbsp; 比如，可以使用元事物定义人（类），然后使用人（类）来编辑张三（对象）。</p>

<h2>3.xworker.lang.MetaDescriptor3</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp;xworker.lang.MetaDescriptor3是XWorker中最常用的元事物。</p>

<h2>4.xworker.lang.MetaThing</h2>

<p>&nbsp;&nbsp;&nbsp; xworker.lang.MetaThing是XWorker定义的基类模型，任何模型都把它当作自己的基类，因此xworker.lang.MetaThing定义了所有模型都共有的属性和方法。</p>
#$@text#$@
sen_label
Define Model
sdescriptors
xworker.swt.xworker.ThingRegistThing
sinheritDescription
false
sth_createIndex
true
sth_registThing
child|xworker.example.ExamplesIndex
sth_registMyChilds
false
sth_registDisabled
false
sth_noThingRegistViewer
false
sth_fileMonitor
false
sth_deprecated
false
sth_mark
false
sth_registQueryOnlySelf
false
