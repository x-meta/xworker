^1627627400481
@
sname
CreateActionContext
slabel
创建动作上下文
stype
thingDesc
sgroup
dynamicModel.-990|Actions.variables
sgroupDescriptor
false
sicon
icons/html.png
sstyledTextForInsert
parentContext.parentContext.codeText
suseTargetThingDoc
false
ssimpleBrowser
true
shideOutline
false
Sdescription
#$@text#$@
<h1>创建动作上下文</h1>

<h2>1.在代码中创建</h2>

<p>&nbsp;&nbsp;&nbsp; 动作上下文的类是org.xmeta.ActitonContext，在代码中创建动作上下文如下面的Groovy代码示例。</p>

<pre class="brush:groovy;">
import org.xmeta.ActionContext;

ActionContext actionContext = new ActionContext();</pre>

<h2>2.何时创建动作上下文</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp;一般在执行第一个动作的时候创建，比如模型程序的入口处。如果是在一个动作里调用其它动作，一般会使用当前的动作上下文。</p>

<p>&nbsp;&nbsp;&nbsp; 有的时候也为了变量的隔离，会主动创建新的变量上下文，比如窗口程序点击一个按钮弹出新窗口时，新窗口的变量会放到新的动作上下文中。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;总之，动作上下文是由用户自行管理的，用户可以根据需要创建变量上下文。</p>

<h2>&nbsp;</h2>

<p>&nbsp;</p>
#$@text#$@
sen_label
Create ActionContext
sdescriptors
xworker.content.QuickContent
sinheritDescription
false
sth_createIndex
true
sth_registThing
child|xworker.example.ExamplesIndex
sth_registMyChilds
false
sth_registDisabled
false
sth_noThingRegistViewer
false
sth_fileMonitor
false
Sen_description
#$@text#$@
<h1>Create action context</h1>

<h2>1. Create in code</h2>

<p>&nbsp;&nbsp;&nbsp; The action context class is org.xmeta.ActitonContext, create the action context in the code as shown in the following Groovy code example. </p>

<pre class="brush:groovy;">
import org.xmeta.ActionContext;

ActionContext actionContext = new ActionContext();</pre>

<h2>2. When to create an action context</h2>

<p>&nbsp;&nbsp;&nbsp;&nbsp;It is usually created when the first action is executed, such as the entrance of a model program. If you call another action in an action, the current action context is generally used. </p>

<p>&nbsp;&nbsp;&nbsp; Sometimes, for variable isolation, a new variable context is actively created. For example, when a window program clicks a button to pop up a new window, the variables of the new window will be placed in the new action context. </p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;In short, the action context is managed by the user, and the user can create a variable context as needed. </p>

<h2>&nbsp;</h2>

<p>&nbsp;</p>
#$@text#$@
sth_mark
false
sth_registQueryOnlySelf
false
