^1624260405284
@
sname
ObjectAction
slabel
对象类动作
stype
thingDesc
sgroup
dynamicModel.-990|Actions.commonactions.objectaction
sgroupDescriptor
true
sicon
icons/html.png
sth_sortWeight
30
sstyledTextForInsert
parentContext.parentContext.codeText
suseTargetThingDoc
false
ssimpleBrowser
true
Sdescription
#$@text#$@
<h1>对象类动作</h1>

<p>&nbsp;&nbsp;&nbsp; 对象类动作通常是具体功能的封装，因此数量众多。对象类动作模型的特点如下。</p>

<h2>1.是对象</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型是对象，有自己的属性和行为。</p>

<h2>2.self变量是自己</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类动作模型需要实现run方法，在run方法里通过self变量访问自己。要想在run方法里访问动作模型自己，模型需要继承xworker.lang.actions.SelfAction。</p>

<h2>3.通过属性和行为传参数</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型一般通过属性和行为传参数。通常默认实现是通过属性获取参数的，通过属性可以获取常量和通过表达式获取一些简单的变量等。如果通过属性获取参数满足不了需求，用户可以通过重写相关方法来自定义获取参数的方法。</p>

<h2>4.事件</h2>

<p>&nbsp;&nbsp;&nbsp; 对象类模型可以有事件，事件起到类似回调的作用。比如一个对象动作是遍历文件目录下的文件，遍历到一个文件时，会触发相应的事件，用户可以通过重写事件来处理这个文件。</p>

<h2>5.语法</h2>

<p>&nbsp;&nbsp;&nbsp; 语法类的动作模型一般也是对象类的动作模型。</p>

<p>&nbsp;</p>
#$@text#$@
sen_label
Object action
sdescriptors
xworker.content.QuickContent
sinheritDescription
false
sth_createIndex
true
sth_registThing
child|xworker.example.ExamplesIndex
sth_registMyChilds
false
sth_registDisabled
false
sth_noThingRegistViewer
false
sth_fileMonitor
false
Sen_description
#$@text#$@
<h1>Object actions</h1>

<p>&nbsp;&nbsp;&nbsp; Object-like actions are usually the encapsulation of specific functions, so there are a large number of them. The characteristics of the object-based action model are as follows. </p>

<h2>1. Is the object</h2>

<p>&nbsp;&nbsp;&nbsp; The object class model is an object with its own properties and behaviors. </p>

<h2>2.self variable is self</h2>

<p>&nbsp;&nbsp;&nbsp; The object class action model needs to implement the run method, and access itself through the self variable in the run method. To access the action model itself in the run method, the model needs to inherit xworker.lang.actions.SelfAction. </p>

<h2>3. Passing parameters through attributes and behaviors</h2>

<p>&nbsp;&nbsp;&nbsp; Object class models generally pass parameters through attributes and behaviors. Usually the default implementation is to get parameters through properties, constants can be obtained through properties and some simple variables can be obtained through expressions. If obtaining parameters through attributes cannot meet the requirements, users can customize the method of obtaining parameters by overriding related methods. </p>

<h2>4. Event</h2>

<p>&nbsp;&nbsp;&nbsp; Object class models can have events, and events play a role similar to callbacks. For example, an object action is to traverse files in a file directory. When a file is traversed, a corresponding event will be triggered. The user can process this file by overwriting the event. </p>

<h2>5. Syntax</h2>

<p>&nbsp;&nbsp;&nbsp; The action model of the grammar class is generally the action model of the object class. </p>

<p>&nbsp;</p>
#$@text#$@
sth_mark
false
sth_registQueryOnlySelf
false
