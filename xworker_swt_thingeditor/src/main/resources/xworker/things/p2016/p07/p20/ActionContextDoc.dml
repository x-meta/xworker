%1468980334665
@
sname=ActionContextDoc
slabel=变量上下文
sgroup=文档
sicon=icons/folder_table.png
sth_sortWeight=2
Sdescription=
#$@text#$@
<h3>变量上下文</h3>

<p>&nbsp;&nbsp;&nbsp; 变量上下文是动作之间传递变量的容器。变量上下文对应的类是org.xmeta.ActionContext。每一个动作执行时都必有一个变量上下文对象。</p>

<h3>全局变量和局部变量</h3>

<p>&nbsp;&nbsp;&nbsp; 变量上下文拥有全局变量和局部变量的概念，它的作用类似Java的变量的作用范围。</p>

<ul>
	<li><strong>全局变量</strong><br />
	任何一个线程和任何地方都可以通过变量上下文设置或获取的变量。<br />
	<strong>&nbsp;</strong></li>
	<li><strong>局部变量</strong><br />
	只对当前线程可见，相当于Java的块级变量范围，由动作自行控制，如Begin、Do、While、Try/Catch、Switch等等动作一般会启动一个局部变量范围，这样它们的子动作就共享一个局部变量范围。<br />
	<span style="color:rgb(255, 140, 0)">由于局部变量为动作自己管理，所以局部变量有可能为null。</span></li>
</ul>

<h3>全局变量和局部变量的获取方法</h3>

<pre class="brush:java;">
import org.xmeta.ActionContext;
import org.xmeta.Bindings;

//创建一个
ActionContext actionContext = new ActionContext();

//获取全局变量范围
Bindings g = actionContext.g();

//获取局部变量范围
Bindings l = actionContext.l();</pre>

<h3>变量的获取和设置</h3>

<pre class="brush:java;">
//变量可以通过ActionContext直接获取
Object aobj = actionContext.get(&quot;aobj&quot;);

//从指定变量范围中获取变量
Object gobj = g.get(&quot;gobj&quot;);
Object lobj = l.get(&quot;lobj&quot;);

//设置变量时一般指定全局变量或局部变量来设置，如
g.put(&quot;gobj&quot;, gobj);
l.put(&quot;lobj&quot;, lobj);
</pre>

<h3>在脚本中使用变量上下文</h3>

<p>&nbsp;&nbsp;&nbsp; 比如在Groovy脚本中。</p>

<pre class="brush:java;">
//可以直接使用变量上下文
Object aobj = actionContext.get(&quot;aobj&quot;);

//全局变量，用特殊的_g变量
Object gobj = _g.get(&quot;gobj&quot;);

//局部变量
def l = actionContext.l();
if(l != null){
     Object lobj = l.get(&quot;lobj&quot;);
}
</pre>

<h3>变量上下文的栈层结构</h3>

<p>&nbsp;&nbsp;&nbsp; 变量上下文之所以能够体现出全局变量和局部变量，是因为它本身是一个栈。</p>

<pre class="brush:java;">
//压入一个栈
actionContext.push(new Bindings());

//获取一个栈
Bindings current = actionContext.peek();

//弹出一个栈
Bindings poped = actionContext.pop();

//全局变量栈其实就是最底层那个栈
Bindings g = actionContext.getScope(0);

//局部变量栈是有一个特殊标记的Bindings
Stack&lt;Bindings&gt; bindingsStack = getBindingStack();
for (int i = bindingsStack.size() - 1; i &gt;= 0; i--) {
	Bindings bindings = bindingsStack.get(i);
	if(bindings.isVarScopeFlag()){
		return bindings;
	}
}
		
//如果没有返回null
return null;</pre>

<p>&nbsp;</p>
#$@text#$@
sen_label=ActionContext
sen_group=Document
sdescriptors=xworker.command.Word
sinheritDescription=false
sth_createIndex=true
sth_registThing=command|xworker.lang.actions.Actions
sth_registMyChilds=false
sth_registDisabled=false
sth_mark=false
