^1461808443454
@
sname
BasicConcept
slabel
基本概念
sgroup
1 基本概念
sicon
icons/html.png
sth_sortWeight
-100
Sdescription
#$@text#$@
<h3>1.基本概念</h3>

<p>&nbsp;&nbsp;&nbsp; 在动态模型编程中存在一些概念，需要知道这些概念的定义，在其它文档或教程了就不再说明这些定义了。</p>

<h3>2.动态模型</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp;动态模型是一种以模型为基本元素的编程方法。</p>

<h3>3.模型</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 模型是像XML这样的树形结构的数据，在动态模型编程里模型不仅是数据，模型还是对象，模型也有类、继承和行为等概念。</p>

<h3>4.事物</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 在动态模型中有时也称模型为事物，所以模型、事物或事物模型都指的是一个概念，它们指的都是模型。</p>

<h3>5.动作</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 在动态模型编程的理论里，它假设任何一个模型都是可执行的，而执行前都会转化为动作，所以动态代表的是可执行的程序，动作是通过事物模型转化而来的。</p>

<h3>6.描述者、结构和类</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 动态模型编程是一个面向对象的编程方法，但它没有定义对象这个概念，而用的是事物模型这个概念，所以对应的它也没有类的概念，取而代之的是描述者这个概念。</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 所以描述者相当于类，在实际使用中也用描述者编辑模型，所以它是模型的结构。</p>

<h3>7.行为</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; 由于事物模型是树形结构，所以它可以有子节点，而因为每一个模型都可以转化为可执行的动作，所以可以认为一个模型的某些子节点是它的行为。所以行为是动作，它是一个事物的某些子事物，属于对应的事物。</p>

<h3>8.继承</h3>

<p>&nbsp;&nbsp;&nbsp; 一个模型可以继承另一个模型，从而继承目标事物模型的行为。</p>

<p>&nbsp;&nbsp;&nbsp; 除此之外，如果在继承上有其它需求，可以自行实现。比如当继承反生在描述者这种模型时，继承的意义就包含了属性、子事物和行为的定义的继承。比如A描述者定义了x属性，B事物继承了A，那么B就继承了x属性的定义，用B创建的对象模型就有x属性。</p>

<p>&nbsp;</p>
#$@text#$@
sdescriptors
xworker.command.Word
sinheritDescription
false
sth_createIndex
true
sth_registThing
command|xworker.things.p2016.p04.p27.MetaThingIndex
sth_registMyChilds
false
sth_registDisabled
false
sth_mark
false
