<?xml version="1.0" encoding="utf-8"?>

<ShellGuide name="ActionIntroduce" descriptors="xworker.swt.guide.ShellGuide" label="动作" en_label="Action"
     en_group="-20000|Dynamic Model.1000|Action" th_createIndex="true" th_registThing="child|xworker.lang.util.indexs.ShellGuideIndex"
     group="-20000|动态模型.1000|动作">
    <actions>
        <getIDEShell name="getMaskComposite" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIDEShell"></getIDEShell>
        <getIdeActionContext name="getActionContext" descriptors="xworker.lang.actions.utils.XWorkerActions/@getIdeActionContainer1"></getIdeActionContext>
    </actions>
    <Guide name="Guide" label="简介" activeControlThing="xworker.things.p2020.p07.p07.ActionIntroduce/@shell">
        <description><![CDATA[<h2>动作</h2>

<p>&nbsp;&nbsp;&nbsp; 动作相当于函数和方法，可以作为函数执行，也可以作为模型对象的方法。</p>

<p>&nbsp;</p>
]]></description>
    </Guide>
    <Guide name="Guide" _xmeta_id_="Guide1" label="转化为动作">
        <description><![CDATA[<h2>模型转化为动作</h2>

<p>&nbsp;&nbsp;&nbsp; 动态模型规定任何模型都可以转化为动作，如下面的示意代码。</p>

<pre class="brush:as3;">
import org.xmeta.Thing;
import org.xmeta.Action;

//模型
Thing thing = new Thing();

//转化为动作
Action action = thing.getAction();
</pre>
]]></description>
    </Guide>
    <Guide name="Guide" _xmeta_id_="Guide2" label="当作函数执行">
        <description><![CDATA[<h2>动作作为函数执行</h2>

<p>&nbsp;&nbsp;&nbsp; 动作可以当作函数来执行，如下面的示意代码。</p>

<pre class="brush:groovy;">
import org.xmeta.Thing;
import org.xmeta.Action;
import org.xmeta.ActionContext;

//模型
Thing thing = new Thing();

//转化为动作
Action action = thing.getAction();

//变量（动作）上下文，动作执行需要有上下文
ActionContext actionContext = new ActionContext();

//动作作为函数执行
Object result = action.run(actionContext);

//动作作为函数执行时传参数
Map&lt;String, Object&gt; params = ....;
//通过Map传参
result = action.run(actionContext, params);   
//通过Object[]传参
result = action.run(actionContext, &quot;param1&quot;, param1, &quot;param2&quot;, param2...); 

</pre>
]]></description>
    </Guide>
    <Guide name="Guide" _xmeta_id_="Guide3" label="作为模型对象的方法">
        <description><![CDATA[<h2>作为模型对象的方法</h2>

<p>&nbsp;&nbsp;&nbsp; 动作可以作为模型对象的方法。</p>

<h3>执行模型对象的方法</h3>

<p>&nbsp;&nbsp;&nbsp; 如下面的示意代码。</p>

<pre class="brush:groovy;">
import org.xmeta.Thing;
import org.xmeta.ActionContext;

//模型
Thing thing = new Thing();

//执行方法，actionName是字符串，是方法的名字
Object result = thing.doAction(actionName,  new ActionContext());
</pre>

<p>&nbsp;&nbsp;&nbsp;&nbsp;模型对象的doAction方法的示意代码如下，可以看到实际执行的是动作。</p>

<pre class="brush:groovy;">
//doAction是org.xmeta.Thing的方法
public Object doAction(String name, ActionContext actionContext){
    //获取方法的定义
    Thing actionThing = getActionThing(name);

    //把模型自己放到变量上下文中
    actionContext.push().put(&quot;self&quot;, this);
    try{
        //执行动作
        actionThing.getAction().run(actionContext);
    }finally{
        actionContext.pop();
    } 
}</pre>

<p>&nbsp;</p>
]]></description>
    </Guide>
</ShellGuide>