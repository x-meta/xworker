@xworker.draw2d.constants.ConstantsAction
sname
ConstantsAction
slabel
ConstantsAction
sisSynchronized
false
sthrowException
false
suseOtherAction
false
suseOuterJava
false
sclassName
ConstantsAction
smethodName
run
sdisableGlobalContext
false
Scode
#$@text#$@
import org.eclipse.draw2d.Orientable;
import org.eclipse.draw2d.PositionConstants;

import org.xmeta.ActionContext;

public class ConstantsAction{
    public static int getPositionConstants(String value){        
        if("ALWAYS_LEFT".equals(value)){
            return PositionConstants.ALWAYS_LEFT;
        }else if("ALWAYS_RIGHT".equals(value)){
            return PositionConstants.ALWAYS_RIGHT;
        }if("BOTTOM".equals(value)){
            return PositionConstants.BOTTOM;
        }else if("CENTER".equals(value)){
            return PositionConstants.CENTER;
        }if("EAST".equals(value)){
            return PositionConstants.EAST;
        }else if("EAST_WEST".equals(value)){
            return PositionConstants.EAST_WEST;
        }if("HORIZONTAL".equals(value)){
            return PositionConstants.HORIZONTAL;
        }else if("LEFT".equals(value)){
            return PositionConstants.LEFT;
        }if("LEFT_CENTER_RIGHT".equals(value)){
            return PositionConstants.LEFT_CENTER_RIGHT;
        }else if("MIDDLE".equals(value)){
            return PositionConstants.MIDDLE;
        }if("NONE".equals(value)){
            return PositionConstants.NONE;
        }else if("NORTH".equals(value)){
            return PositionConstants.NORTH;
        }if("NORTH_EAST".equals(value)){
            return PositionConstants.NORTH_EAST;
        }else if("NORTH_SOUTH".equals(value)){
            return PositionConstants.NORTH_SOUTH;
        }if("NORTH_WEST".equals(value)){
            return PositionConstants.NORTH_WEST;
        }else if("NSEW".equals(value)){
            return PositionConstants.NSEW;
        }if("RIGHT".equals(value)){
            return PositionConstants.RIGHT;
        }else if("SOUTH".equals(value)){
            return PositionConstants.SOUTH;
        }if("SOUTH_EAST".equals(value)){
            return PositionConstants.SOUTH_EAST;
        }else if("SOUTH_WEST".equals(value)){
            return PositionConstants.SOUTH_WEST;
        }else if("TOP".equals(value)){
            return PositionConstants.TOP;
        }else if("TOP_MIDDLE_BOTTOM".equals(value)){
            return PositionConstants.TOP_MIDDLE_BOTTOM;
        }else if("VERTICAL".equals(value)){
            return PositionConstants.VERTICAL;
        }else if("WEST".equals(value)){
            return PositionConstants.WEST;
        }else{
            return 0;
        }
    }
    
    public static int getOrientable(String value){
        if("HORIZONTAL".equals(value)){
            return Orientable.HORIZONTAL;
        }else if("VERTICAL".equals(value)){
            return Orientable.VERTICAL;
        }else{
            return 0;
        }
    }

    public static Object run(ActionContext actionContext){
        return null;
    }
}
#$@text#$@
sid
ConstantsAction
sdescriptors
xworker.lang.actions.JavaAction
