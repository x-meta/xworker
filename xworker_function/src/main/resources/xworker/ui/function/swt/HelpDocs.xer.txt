^1565862225848
@
sname
HelpDocs
slabel
HelpDocs
sdescriptors
xworker.lang.MetaDescriptor3
smany
true
seditCols
2
sinitialization
false
smodifier
public
sinheritDescription
false
sth_createIndex
false
sth_mark
false
sid
HelpDocs
  @/@selectFunciton
  sname
  selectFunciton
  sdescriptors
  xworker.lang.MetaDescriptor3/@thing
  smany
  true
  seditCols
  2
  sinitialization
  false
  smodifier
  public
  sinheritDescription
  false
  Sdescription
#$@text#$@
<p><strong>交互函数</strong></p>

<p>&nbsp;&nbsp;&nbsp; 交互函数是一种函数式的编程方法。</p>

<p><strong>原理</strong></p>

<p>&nbsp;&nbsp;&nbsp; 在函数式编程中函数的参数也是函数。因此想要运行一个函数，那么就需要先设置其参数的函数，当参数设置完毕后，就可以执行这个函数了。</p>

<p><strong>特点</strong></p>

<ul>
	<li><strong>从根节点执行&nbsp;&nbsp;</strong>&nbsp;<br />
	函数的参数也是函数，执行一个函数是先执行它的参数的函数，运行了参数的参数得到参数的值后，就可以执行这个函数了。<br />
	&nbsp;</li>
	<li><strong>并行执行</strong><br />
	函数是可以并行执行的。可以想象函数及其参数是一棵树，节点都是相对独立的，可以并行执行。<br />
	&nbsp;</li>
	<li><strong>动态编程</strong><br />
	XWorker的交互函数可以动态编程，是通过运行时修改函数的参数所对应的函数实现的。&nbsp;&nbsp;</li>
</ul>

<p><strong>函数原型</strong></p>

<p><strong>&nbsp;&nbsp;&nbsp; </strong>是函数的定义。一个函数原型的功能通常比较单一，比如创建事物、加法、减法等。<br />
<strong>函数实例</strong></p>

<p>&nbsp;&nbsp;&nbsp; 已经设置了参数函数的函数称作函数实例。可以设置一个函数原型然后保存成函数实例，也可以修改已有的函数实例保存成新的函数实例。</p>
#$@text#$@
  snotXmlAttribute
  false
  sjson_isArray
  false
  sth_createIndex
  false
  sth_mark
  false
  sid
  selectFunciton
  @/@NoDescription
  sname
  NoDescription
  sdescriptors
  xworker.lang.MetaDescriptor3/@thing
  smany
  true
  seditCols
  2
  sinitialization
  false
  smodifier
  public
  sinheritDescription
  false
  sdescription
  <p>未找到请求的文档。</p>
  sth_createIndex
  false
  sth_mark
  false
  sid
  NoDescription
